{"version":3,"file":"node_modules_prismjs_components_prism-racket_js.index.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED","sources":["webpack://tuval-core/./node_modules/prismjs/components/prism-racket.js"],"sourcesContent":["Prism.languages.racket = Prism.languages.extend('scheme', {\n\t'lambda-parameter': {\n\t\t// the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n\t\t// this will just prevent false positives of the `function` pattern\n\t\tpattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('racket', 'string', {\n\t'lang': {\n\t\tpattern: /^#lang.+/m,\n\t\tgreedy: true,\n\t\talias: 'keyword'\n\t}\n});\n\nPrism.languages.rkt = Prism.languages.racket;\n"],"names":[],"sourceRoot":""}