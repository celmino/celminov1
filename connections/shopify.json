{
    "export": {
        "labels": {
            "version": "API Version"
        },
        "paging": {
            "pagingMethod": "linkheader",
            "linkHeaderRelation": "next"
        },
        "urlResolution": [
            "/customers.json",
            "/customers/search.json",
            "/customers/:_customerId.json",
            "/customers/:_customerId/addresses.json",
            "/customers/:_customerId/addresses/:_addressId.json",
            "/orders/:_orderId/fulfillments.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId.json",
            "/orders/:_orderId/risks.json",
            "/orders/:_orderId/risks/:_riskId.json",
            "/products.json",
            "/products/:_productId.json",
            "/products/:_productId/variants.json",
            "/variants/:_variantId.json",
            "/orders/:_orderId/refunds.json",
            "/orders/:_orderId/refunds/:_refundId.json",
            "/orders/:_orderId/transactions.json",
            "/orders/:_orderId/transactions/:_transactionId.json",
            "/blogs/:_blogsId/articles/:_articlesId.json",
            "/blogs/:_blogsId/articles.json",
            "/blogs/:_blogsId/articles/count.json",
            "/blogs/:_blogsId/articles/tags.json",
            "/articles/authors.json",
            "/themes/:_themesId/assets.json?asset[key]=:_key&theme_id=:_theme_id",
            "/themes/:_themesId/assets.json",
            "/blogs/:_blogsId.json",
            "/blogs/count.json",
            "/blogs.json",
            "/carrier_services/:_carrier_servicesId.json",
            "/carrier_services.json",
            "/collects/:_collectsId.json",
            "/collects/count.json",
            "/collects.json",
            "/collection_listings/:_collectionId/product_ids.json",
            "/collection_listings/:_collectionId.json",
            "/collection_listings.json",
            "/comments/:_commentsId.json",
            "/comments/count.json",
            "/comments.json",
            "/countries/:_countriesId.json",
            "/countries.json",
            "/countries/count.json",
            "/custom_collections/:_custom_collectionsId.json",
            "/custom_collections.json",
            "/custom_collections/count.json",
            "/customer_saved_searches/:_customer_saved_searchesId/customers.json",
            "/customer_saved_searches/:_customer_saved_searchesId.json",
            "/customer_saved_searches.json",
            "/customer_saved_searches/count.json",
            "/discount_codes/lookup.json?code=:_code",
            "/price_rules/:_price_rulesId/discount_codes.json",
            "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
            "/draft_orders.json",
            "/draft_orders/:_draft_ordersId.json",
            "/draft_orders/count.json",
            "/orders/:_ordersId/events.json",
            "/products/:_productsId/events.json",
            "/events/:_eventsId.json",
            "/events/count.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId/events/:_eventsId.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId/events.json",
            "/fulfillment_services/:_fulfillment_servicesId.json",
            "/fulfillment_services.json",
            "/locations/:_locationsId.json",
            "/locations.json",
            "/marketing_events/:_marketing_eventsId.json",
            "/marketing_events.json",
            "/marketing_events/count.json",
            "/metafields/:_metafieldsId.json",
            "/metafields.json",
            "/metafields/count.json",
            "/products/:_productId/metafields/:_metafields.json",
            "/products/:_productId/metafields.json",
            "/products/:_productId/metafields/count.json",
            "/pages/:_pagesId.json",
            "/pages.json",
            "/pages/count.json",
            "/policies.json",
            "/price_rules/:_price_rulesId.json",
            "/price_rules.json",
            "/product_listings/product_ids.json",
            "/product_listings.json",
            "/product_listings/count.json",
            "/product_listings/:_productId.json",
            "/countries/:_countriesId/provinces/:_provincesId.json",
            "/countries/:_countriesId/provinces.json",
            "/countries/:_countriesId/provinces/count.json",
            "/recurring_application_charges/:_recurring_application_chargesId.json",
            "/recurring_application_charges.json",
            "/redirects.json",
            "/redirects/count.json",
            "/redirects/:_redirectsId.json",
            "/resource_feedback.json",
            "/script_tags/:_script_tagsId.json",
            "/script_tags.json",
            "/script_tags/count.json",
            "/shipping_zones.json",
            "/shop.json",
            "/smart_collections.json",
            "/smart_collections/:_smart_collectionsId.json",
            "/smart_collections/count.json",
            "/storefront_access_tokens.json",
            "/themes.json",
            "/themes/:_themesId.json",
            "/recurring_application_charges/:_recurring_application_chargesId/usage_charges/:_usage_chargesId.json",
            "/recurring_application_charges/:_recurring_application_chargesId/usage_charges.json"
        ],
        "versions": [
            {
                "version": "v2",
                "resources": [
                    {
                        "id": "customer",
                        "name": "Customers : Customer",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcustomers",
                                "url": "/customers.json",
                                "name": "Retrieves a list of customers",
                                "resourcePath": "customers",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of customer ids"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show customers created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show customers created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show customers last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show customers last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "searches_forcustomersthatmatchasuppliedquery",
                                "url": "/customers/search.json",
                                "name": "Searches for customers that match a supplied query",
                                "resourcePath": "customers",
                                "queryParameters": [
                                    {
                                        "id": "order",
                                        "name": "order",
                                        "fieldType": "input",
                                        "description": "Field and direction to order results by(default: last_order_date DESC)"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "fieldType": "textarea",
                                        "description": "Text to search customers"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglecustomer",
                                "url": "/customers/:_customerId.json",
                                "name": "Retrieves a single customer",
                                "resourcePath": "customer",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoacustomer",
                                "url": "/customers/:_customerId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a customer",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "customeraddress",
                        "name": "Customers : Customer Address",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofaddressesforacustomer",
                                "url": "/customers/:_customerId/addresses.json",
                                "name": "Retrieves a list of addresses for a customer",
                                "resourcePath": "addresses",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_aaddressforacustomer",
                                "url": "/customers/:_customerId/addresses/:_addressId.json",
                                "name": "Retrieves details a single customer address",
                                "resourcePath": "customer_address",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "addressId",
                                        "name": "Address Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment",
                        "name": "Shipping and fulfillment : Fulfillment",
                        "endpoints": [
                            {
                                "id": "retrieves_fulfillmentsassociatedwithanorder",
                                "url": "/orders/:_orderId/fulfillments.json",
                                "name": "Retrieves fulfillments associated with an order",
                                "resourcePath": "fulfillments",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_aspecificfulfillment",
                                "url": "/orders/:_orderId/fulfillments/:_fulfillmentId.json",
                                "name": "Receive a single fulfillment",
                                "resourcePath": "fulfillment",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "fulfillmentId",
                                        "name": "Fulfillment Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_fulfillmentsassociatedwith_fullfilmrntorder",
                                "url": "/fulfillment_orders/:_fulfillment_orderId/fulfillments.json",
                                "name": "Retrieves fulfillments associated with a fulfillment order",
                                "resourcePath": "fulfillments",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "pathParameters": [
                                    {
                                        "id": "fulfillment_orderId",
                                        "name": "Fullfilment Order ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_countoffullfilments_withaspecificorder",
                                "url": "/orders/:_orderId/fulfillments/count.json",
                                "name": "Retrieves a count of fulfillments associated with a specific order",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "order",
                        "name": "Orders : Order",
                        "endpoints": [
                            {
                                "id": "receive_alistoforder",
                                "url": "/orders.json",
                                "name": "Retrieve a list of Orders",
                                "resourcePath": "orders",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of order ids"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show orders created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show orders created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show orders last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show orders last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "processed_at_min",
                                        "name": "processed_at_min",
                                        "fieldType": "date",
                                        "description": "Show orders imported after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "processed_at_max",
                                        "name": "processed_at_max",
                                        "fieldType": "date",
                                        "description": "Show orders imported before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "closed",
                                            "cancelled",
                                            "any"
                                        ],
                                        "description": "Filter orders by their status(default: open)"
                                    },
                                    {
                                        "id": "financial_status",
                                        "name": "financial_status",
                                        "fieldType": "select",
                                        "options": [
                                            "authorized",
                                            "pending",
                                            "paid",
                                            "partially_paid",
                                            "refunded",
                                            "voided",
                                            "partially_refunded",
                                            "any",
                                            "unpaid"
                                        ],
                                        "description": "Filter orders by their financial status(default: any)"
                                    },
                                    {
                                        "id": "fulfillment_status",
                                        "name": "fulfillment_status",
                                        "fieldType": "select",
                                        "options": [
                                            "shipped",
                                            "partial",
                                            "unshipped",
                                            "any"
                                        ],
                                        "description": "Filter orders by their fulfillment status(default: any)."
                                    }
                                ]
                            },
                            {
                                "id": "receive_asingleorder",
                                "url": "/orders/:_orderId.json",
                                "name": "Retrieves a specific order",
                                "resourcePath": "order",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The ID of the order."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "Retrieve only certain fields, specified by a comma-separated list of fields names."
                                    }
                                ]
                            },
                            {
                                "id": "retrievesanordercount",
                                "url": "/orders/count.json",
                                "name": "Retrieves an order count",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Count orders created after date (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Count orders created before date (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Count orders last updated after date (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Count orders last updated before date (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "closed",
                                            "cancelled",
                                            "any"
                                        ],
                                        "description": "Count orders by their status(default: open)"
                                    },
                                    {
                                        "id": "financial_status",
                                        "name": "financial_status",
                                        "fieldType": "select",
                                        "options": [
                                            "authorized",
                                            "pending",
                                            "paid",
                                            "refunded",
                                            "voided",
                                            "any"
                                        ],
                                        "description": "Count orders by their financial status(default: any)"
                                    },
                                    {
                                        "id": "fulfillment_status",
                                        "name": "fulfillment_status",
                                        "fieldType": "select",
                                        "options": [
                                            "shipped",
                                            "partial",
                                            "unshipped",
                                            "any"
                                        ],
                                        "description": "Count orders by their fulfillment status(default: any)."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaspecificorder",
                                "url": "/orders/:_orderId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a specific order",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The ID of the order."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "orderrisks",
                        "name": "Orders : Order Risk",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofallorderrisksforanorder",
                                "url": "/orders/:_orderId/risks.json",
                                "name": "Retrieves a list of all order risks for an order",
                                "resourcePath": "risks",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "required": true,
                                        "description": "The ID of the order."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleorderriskbyitsid",
                                "url": "/orders/:_orderId/risks/:_riskId.json",
                                "name": "Retrieves a single order risk by its ID",
                                "resourcePath": "risk",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "description": "The ID of the order.",
                                        "required": true
                                    },
                                    {
                                        "id": "riskId",
                                        "name": "Risk Id",
                                        "fieldType": "input",
                                        "description": "The ID of the order risk.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "abandonedcheckouts",
                        "name": "Orders : Abandoned checkouts",
                        "endpoints": [
                            {
                                "id": "retrieves_acountofcheckouts",
                                "url": "/checkouts/count.json",
                                "name": "Retrieves a count of checkouts",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "closed"
                                        ],
                                        "description": "Count checkouts with a given status.(default: open)open: Count only open abandoned checkouts.closed: Count only closed abandoned checkouts."
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "description": "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "description": "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_abandonedcheckouts",
                                "url": "/checkouts.json",
                                "name": "Retrieves abandoned checkouts",
                                "resourcePath": "checkouts",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "closed"
                                        ],
                                        "description": "checkouts with a given status.(default: open)open: Count only open abandoned checkouts.closed: Count only closed abandoned checkouts."
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Show checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Show checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "description": "Show checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "description": "Show checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "product",
                        "name": "Products : Product",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofproducts",
                                "url": "/products.json",
                                "name": "Retrieves a list of products",
                                "resourcePath": "products",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "queryParameters": [
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of order ids"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "title",
                                        "name": "title",
                                        "fieldType": "input",
                                        "description": "Filter by product title"
                                    },
                                    {
                                        "id": "vendor",
                                        "name": "vendor",
                                        "fieldType": "input",
                                        "description": "Filter by product vendor"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by product handle"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "active",
                                            "archived",
                                            "draft"
                                        ],
                                        "description": "Return products by their status.(default: active)"
                                    },
                                    {
                                        "id": "product_type",
                                        "name": "product_type",
                                        "fieldType": "input",
                                        "description": "Filter by product type"
                                    },
                                    {
                                        "id": "collection_id",
                                        "name": "collection_id",
                                        "fieldType": "input",
                                        "description": "Filter by collection id"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Show products created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Show products created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Show products last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Show products last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "date",
                                        "description": "Show products published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "date",
                                        "description": "Show products published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Return products by their published status(default: any)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleproduct",
                                "url": "/products/:_productId.json",
                                "name": "Retrieves a single product",
                                "resourcePath": "product",
                                "doesNotSupportPaging": true,
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "A unique numeric identifier for the product."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of fields to include in the response."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaproduct",
                                "url": "/products/:_productId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a product",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "A unique numeric identifier for the product."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "productvariant",
                        "name": "Products : Product Variant",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofproductvariants",
                                "url": "/products/:_productId/variants.json",
                                "name": "Retrieves a list of product variants",
                                "resourcePath": "variants",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleproductvariantbyid",
                                "url": "/variants/:_variantId.json",
                                "name": "Retrieves a single product variant",
                                "resourcePath": "variant",
                                "doesNotSupportPaging": true,
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "variantId",
                                        "name": "Variant Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaproductvariant",
                                "url": "/products/:_productId/variants/:_variantId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a product variant",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "A unique numeric identifier for the product."
                                    },
                                    {
                                        "id": "variantId",
                                        "name": "Variant Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "productimage",
                        "name": "Products : Product Image",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofproductimages",
                                "url": "/products/:_productId/images.json",
                                "name": "Retrieves a list of product images",
                                "resourcePath": "images",
                                "description": "Get all product images",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "A comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleproductimagebyid",
                                "url": "/products/:_productId/images/:_image_Id.json",
                                "name": "Retrieves a single Product Image",
                                "resourcePath": "image",
                                "doesNotSupportPaging": true,
                                "description": "Get a single product image by id",
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "image_Id",
                                        "name": "Image Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaproductimage",
                                "url": "/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a product image",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "metafield[owner_id]",
                                        "name": "metafield[owner_id]",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "Metafield Ownerid"
                                    },
                                    {
                                        "id": "metafield[owner_resource]",
                                        "name": "metafield[owner_resource]",
                                        "description": "Value is product_image",
                                        "defaultValue": "product_image",
                                        "readOnly": true,
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleproductimagecount",
                                "url": "/products/:_productId/images/count.json",
                                "name": "Retrieves a count of all product images",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "description": "Get a count of all product images",
                                "headers": {
                                    "X-Shopify-Api-Features": "include-presentment-prices"
                                },
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "date",
                                        "description": "Count articles created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "date",
                                        "description": "Count articles created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "date",
                                        "description": "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "date",
                                        "description": "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "date",
                                        "description": "Count articles published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "date",
                                        "description": "Count articles published before date (format: 2014-04-25T16:15:47-04:00)"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "refund",
                        "name": "Orders : Refund",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofrefundsforanorder",
                                "url": "/orders/:_orderId/refunds.json",
                                "name": "Retrieves a list of refunds for an order",
                                "resourcePath": "refunds",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "required": true,
                                        "description": "The ID of the order."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    },
                                    {
                                        "id": "in_shop_currency",
                                        "name": "in_shop_currency",
                                        "description": "Show amounts in the shop currency for the underlying transaction."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_aspecificrefund",
                                "url": "/orders/:_orderId/refunds/:_refundId.json",
                                "name": "Retrieves a specific refund",
                                "resourcePath": "refund",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "required": true,
                                        "description": "The ID of the order."
                                    },
                                    {
                                        "id": "refundId",
                                        "name": "Refund Id",
                                        "required": true,
                                        "description": "The ID of the refund."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "transaction",
                        "name": "Orders : Transaction",
                        "endpoints": [
                            {
                                "id": "retrieves_alistoftransactions",
                                "url": "/orders/:_orderId/transactions.json",
                                "name": "Retrieves a list of transactions",
                                "resourcePath": "transactions",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "required": true,
                                        "description": "The ID of the order."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Retrieve only transactions after the specified ID."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "Show only certain fields, specifed by a comma-separated list of fields names."
                                    },
                                    {
                                        "id": "in_shop_currency",
                                        "name": "in_shop_currency",
                                        "description": "Show amounts in the shop currency."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_aspecifictransaction",
                                "url": "/orders/:_orderId/transactions/:_transactionsId.json",
                                "name": "Retrieves a specific transaction",
                                "resourcePath": "transaction",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "required": true,
                                        "description": "The ID of the order."
                                    },
                                    {
                                        "id": "transactionsId",
                                        "name": "Transaction Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The ID of the transaction."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "article",
                        "name": "Online store : Article",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofallarticlesfromablog",
                                "url": "/blogs/:_blogsId/articles.json",
                                "name": "Retrieves a list of all articles from a blog",
                                "resourcePath": "articles",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show articles created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show articles created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show articles published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show articles published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by article handle"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any "
                                        ],
                                        "description": "Filter by article handle"
                                    },
                                    {
                                        "id": "tag",
                                        "name": "tag",
                                        "fieldType": "input",
                                        "description": "Filter articles with a specific tag."
                                    },
                                    {
                                        "id": "author",
                                        "name": "author",
                                        "fieldType": "input",
                                        "description": "Filter articles by article author."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleblogarticle",
                                "url": "/blogs/:_blogsId/articles/:_articlesId.json",
                                "name": "Receive a single Article",
                                "resourcePath": "article",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "articlesId",
                                        "name": "Article Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofallthetags",
                                "url": "/blogs/:_blogsId/articles/tags.json",
                                "name": "Retrieves a list of all the tags",
                                "resourcePath": "tags",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "popular",
                                        "name": "popular",
                                        "fieldType": "input",
                                        "description": "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofalltheauthors",
                                "url": "/articles/authors.json",
                                "name": "Retrieves a list of all article authors",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "retrieves_acountofallarticlesfromablog",
                                "url": "/blogs/:_blogsId/articles/count.json",
                                "name": "Retrieves a count of all articles from a blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Count articles created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Count articles created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Count articles published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Count articles published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any "
                                        ],
                                        "description": "Count articles with a given published status."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaarticle",
                                "url": "/blogs/:_blogsId/articles/:_articlesId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to an article",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "articlesId",
                                        "name": "Article Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "assets",
                        "name": "Online store : Asset",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofassetsforatheme",
                                "url": "/themes/:_themesId/assets.json",
                                "name": "Retrieves a list of assets for a theme",
                                "resourcePath": "assets",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "themesId",
                                        "name": "Theme Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "textarea",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleassetforathemebyitskey",
                                "url": "/themes/:_themesId/assets.json",
                                "name": "Retrieves a single asset for a theme",
                                "resourcePath": "asset",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "themesId",
                                        "name": "Theme ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "Id of the Theme"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blogs",
                        "name": "Online store : Blog",
                        "endpoints": [
                            {
                                "id": "get_alistofallblogs",
                                "url": "/blogs.json",
                                "name": "Receive a list of all blogs",
                                "resourcePath": "blogs",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by blog handle"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "get_asingleblogbyitsid",
                                "url": "/blogs/:_blogsId.json",
                                "name": "Receive a single Blog",
                                "resourcePath": "blog",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "get_acountofallblogs",
                                "url": "/blogs/count.json",
                                "name": "Receive a count of all blogs",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoablog",
                                "url": "/blogs/:_blogsId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a blog",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blog ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "carrier_services",
                        "name": "Shipping and fulfillment : Carrier Service",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcarrierservices",
                                "url": "/carrier_services.json",
                                "name": "Retrieves a list of carrier services",
                                "resourcePath": "carrier_services",
                                "supportedExportTypes": [
                                    "test"
                                ]
                            },
                            {
                                "id": "retrieves_asinglecarrierservicebyitsid",
                                "url": "/carrier_services/:_carrier_servicesId.json",
                                "name": "Retrieves a single carrier service",
                                "resourcePath": "carrier_service",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "carrier_servicesId",
                                        "name": "Carrier Service Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "collects",
                        "name": "Products : Collect",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcollects",
                                "url": "/collects.json",
                                "name": "Retrieves a list of collects",
                                "resourcePath": "collects",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    },
                                    {
                                        "id": "product_id",
                                        "name": "product_id",
                                        "fieldType": "input",
                                        "description": "Specify product_id, to retrieve collects only for a certain product"
                                    },
                                    {
                                        "id": "collection_id",
                                        "name": "collection_id",
                                        "fieldType": "input",
                                        "description": "Specify collection_id, to retrieve collects only for a certain collection"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_aspecificcollectbyitsid",
                                "url": "/collects/:_collectsId.json",
                                "name": "Retrieves a specific collect by its ID",
                                "resourcePath": "collect",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "collectsId",
                                        "name": "Collect Id",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The ID of the collect"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofcollects",
                                "url": "/collects/count.json",
                                "name": "Retrieves a count of collects",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            }
                        ]
                    },
                    {
                        "id": "collection_listings",
                        "name": "Sales channel : CollectionListing",
                        "endpoints": [
                            {
                                "id": "retrieve_collectionlistingsthatarepublishedtoyourapp",
                                "url": "/collection_listings.json",
                                "name": "Retrieve collection listings that are published to your app",
                                "resourcePath": "collection_listings",
                                "supportedExportTypes": [
                                    "test"
                                ]
                            },
                            {
                                "id": "retrieve_aspecificcollectionlistingthatispublishedtoyourapp",
                                "url": "/collection_listings/:_collectionId.json",
                                "name": "Retrieve a specific collection listing that is published to your app",
                                "resourcePath": "collection_listing",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "collectionId",
                                        "name": "Collection Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_productidsthatarepublishedtoacollectionid",
                                "url": "/collection_listings/:_collectionId/product_ids.json",
                                "name": "Retrieve product_ids that are published to a collection_id",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "collectionId",
                                        "name": "Collection Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "page",
                                        "name": "Page",
                                        "description": "Page to show(default: 1)"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "description": "Amount of results(default: 50, maximum: 250)"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "comments",
                        "name": "Online store : Comment",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcomments",
                                "url": "/comments.json",
                                "name": "Retrieves a list of comments",
                                "resourcePath": "comments",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments  created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments  created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Filter results by their published status(default: any)."
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "pending",
                                            "published",
                                            "unapproved"
                                        ],
                                        "description": "Filter results by their status."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acomment",
                                "url": "/comments/:_commentsId.json",
                                "name": "Retrieves a single comment by its ID",
                                "resourcePath": "comment",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "commentsId",
                                        "name": "Comment ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofcomments",
                                "url": "/comments/count.json",
                                "name": "Retrieves a count of comments",
                                "resourcePath": "",
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments  created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments  created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show comments published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show comments published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Retrieve a count of comments with a given published status."
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "pending",
                                            "published",
                                            "unapproved"
                                        ],
                                        "description": "Retrieve a count of comments with a given status."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "countries",
                        "name": "Store properties : Country",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcountries",
                                "url": "/countries.json",
                                "name": "Receive a list of countries",
                                "resourcePath": "countries",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_aspecificcounty",
                                "url": "/countries/:_countriesId.json",
                                "name": "Retrieves a specific county",
                                "resourcePath": "country",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "countriesId",
                                        "name": "Country Id",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofcountries",
                                "url": "/countries/count.json",
                                "name": "Retrieves a count of countries",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            }
                        ]
                    },
                    {
                        "id": "custom_collections",
                        "name": "Products : CustomCollection",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcustomcollections",
                                "url": "/custom_collections.json",
                                "name": "Retrieves a list of custom collections",
                                "resourcePath": "custom_collections",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "product_id",
                                        "name": "product_id",
                                        "fieldType": "input",
                                        "description": "Show custom collections that includes given product"
                                    },
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "input",
                                        "description": "Show only certain collections, specified by a comma-separated list of IDs."
                                    },
                                    {
                                        "id": "title",
                                        "name": "title",
                                        "fieldType": "input",
                                        "description": "Show custom collections with given title"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Show custom collectsion with a given published status."
                                    },
                                    {
                                        "id": "handle",
                                        "name": "Handle",
                                        "fieldType": "input",
                                        "description": "Filter by custom collection handle."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglecustomcollection",
                                "url": "/custom_collections/:_custom_collectionsId.json",
                                "name": "Retrieves a single custom collection",
                                "resourcePath": "custom_collection",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "custom_collectionsId",
                                        "name": "CustomCollection ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The ID for the custom collection."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofcustomcollections",
                                "url": "/custom_collections/count.json",
                                "name": "Retrieves a count of custom collections",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "title",
                                        "name": "title",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "product_id",
                                        "name": "product_id",
                                        "fieldType": "input",
                                        "description": "Count CustomCollection that includes given product"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Count CustomCollections last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Count CustomCollections last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Count CustomCollections published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Count CustomCollections published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Count custom collections with a given published status."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoacustomecollection",
                                "url": "/collections/:_collection_id/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a CustomCollection and SmartCollection",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "collection_id",
                                        "name": "Collection ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "customer_saved_searches",
                        "name": "Customers : CustomerSavedSearch",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcustomersavedsearches",
                                "url": "/customer_saved_searches.json",
                                "name": "Retrieves a list of customer saved searches",
                                "resourcePath": "customer_saved_searches",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "Since ID",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglecustomersavedsearch",
                                "url": "/customer_saved_searches/:_customer_saved_searchesId.json",
                                "name": "Retrieves a single customer saved search",
                                "resourcePath": "customer_saved_search",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "customer_saved_searchesId",
                                        "name": "CustomerSavedSearch ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofallcustomersavedsearches.",
                                "url": "/customer_saved_searches/count.json",
                                "name": "Retrieves a count of all customer saved searches",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "Since ID",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_allcustomersreturnedbyacustomersavedsearch",
                                "url": "/customer_saved_searches/:_customer_saved_searchesId/customers.json",
                                "name": "Retrieves all customers returned by a customer saved search",
                                "resourcePath": "customers",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "customer_saved_searchesId",
                                        "name": "CustomerSavedSearch ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "order",
                                        "name": "Order",
                                        "fieldType": "input",
                                        "description": "Field and direction to order results by (default: last_order_date DESC)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "discount_codes",
                        "name": "Discounts : DiscountCode",
                        "endpoints": [
                            {
                                "id": "retrieve_alistofdiscountcodes",
                                "url": "/price_rules/:_price_rulesId/discount_codes.json",
                                "name": "Retrieve a list of discount codes",
                                "resourcePath": "discount_codes",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglediscountcode",
                                "url": "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
                                "name": "Retrieves a single discount code",
                                "resourcePath": "discount_code",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "discount_codesId",
                                        "name": "DiscountCode ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_thelocationofadiscountcode",
                                "url": "/discount_codes/lookup.json?code=:_code",
                                "name": "Retrieves the location of a discount code",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "code",
                                        "name": "Code",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_a_count_of_discount_codes_for_a_shop",
                                "url": "/discount_codes/count.json",
                                "name": "Retrieve a count of discount codes for a shop(This endpoint will only work for versions above 2021-04)",
                                "doesNotSupportPaging": true
                            }
                        ]
                    },
                    {
                        "id": "draft_orders",
                        "name": "Orders : DraftOrder",
                        "endpoints": [
                            {
                                "id": "retrieve_alistofdraftorders",
                                "url": "/draft_orders.json",
                                "name": "Retrieve a list of draft orders",
                                "resourcePath": "draft_orders",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "fieldType": "input",
                                        "description": "Amount of results(default: 50, maximum: 250)"
                                    },
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "input",
                                        "description": "Filter by list of ids"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show orders last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show orders last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "invoice_sent",
                                            "completed"
                                        ],
                                        "description": "Show order by status"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_aspecificdraftorder",
                                "url": "/draft_orders/:_draft_ordersId.json",
                                "name": "Receive a single draft order",
                                "resourcePath": "draft_order",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "name": "Draft Order ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The unique numeric identifier for the draft order."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "A comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_acountofallthedraftorders",
                                "url": "/draft_orders/count.json",
                                "name": "Retrieve a count of all draft orders",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "fieldType": "input",
                                        "description": "Filter by list of ids"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "A comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "invoice_sent",
                                            "completed"
                                        ],
                                        "description": "Show order by status"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoadraftorder",
                                "url": "/draft_orders/:_draft_ordersId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a draft order",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "name": "Draft Order ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "The unique numeric identifier for the draft order."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_event",
                        "name": "Shipping and fulfillment : FulfillmentEvent",
                        "endpoints": [
                            {
                                "id": "receive_alistofallfulfillmentevents",
                                "url": "/orders/:_orderId/fulfillments/:_fulfillmentId/events.json",
                                "name": "Retrieves a list of fulfillment events for a specific fulfillment",
                                "resourcePath": "fulfillment_events",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Orders ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "fulfillmentId",
                                        "name": "Fulfillment ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "receive_asinglefulfillmentevent",
                                "url": "/orders/:_orderId/fulfillments/:_fulfillmentId/events/:_eventsId.json",
                                "name": "Retrieves a specific fulfillment event",
                                "resourcePath": "fulfillment_event",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "fulfillmentId",
                                        "name": "Fulfillment ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "eventsId",
                                        "name": "Event ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_services",
                        "name": "Shipping and fulfillment : FulfillmentService",
                        "endpoints": [
                            {
                                "id": "receive_alistofallFulfillmentServices",
                                "url": "/fulfillment_services.json",
                                "name": "Receive a list of all Fulfillment Services",
                                "resourcePath": "fulfillment_services",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "scope",
                                        "name": "scope",
                                        "fieldType": "select",
                                        "options": [
                                            "current_client",
                                            "all"
                                        ],
                                        "description": "current_client: Returns fulfillment providers that have been created by the app sending the request (default)all: Returns all the fulfillment providers"
                                    }
                                ]
                            },
                            {
                                "id": "receive_asinglefulfillmentservice",
                                "url": "/fulfillment_services/:_fulfillment_servicesId.json",
                                "name": "Receive a single FulfillmentService",
                                "resourcePath": "fulfillment_service",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "fulfillment_servicesId",
                                        "name": "Fulfillment Service ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "locations",
                        "name": "Inventory : Location",
                        "endpoints": [
                            {
                                "id": "retrieves_alistoflocations",
                                "url": "/locations.json",
                                "name": "Retrieves a list of locations",
                                "resourcePath": "locations",
                                "supportedExportTypes": [
                                    "test"
                                ]
                            },
                            {
                                "id": "retrieves_alocationbyid",
                                "url": "/locations/:_locationsId.json",
                                "name": "Retrieves a single location by its ID",
                                "resourcePath": "location",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "locationsId",
                                        "name": "Location ID",
                                        "description": "The ID for the location.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountoflocations",
                                "url": "/locations/count.json",
                                "name": "Retrieves a count of locations",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "retrieves_alistofinventorylevelsforalocation",
                                "url": "/locations/:_locationsId/inventory_levels.json",
                                "name": "Retrieves a list of inventory levels for a location",
                                "resourcePath": "inventory_levels",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "locationsId",
                                        "name": "Location ID",
                                        "description": "The ID for the location.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "marketing_events",
                        "name": "Marketing Event",
                        "paging": {
                            "pagingMethod": "skipargument",
                            "skipArgument": "offset"
                        },
                        "endpoints": [
                            {
                                "id": "retrieves_alistofallmarketingevents",
                                "url": "/marketing_events.json",
                                "name": "Retrieves a list of all marketing events",
                                "resourcePath": "marketing_events",
                                "supportedExportTypes": [
                                    "test"
                                ]
                            },
                            {
                                "id": "retrieves_asinglemarketingevent",
                                "url": "/marketing_events/:_marketing_eventsId.json",
                                "name": "Retrieves a single marketing event",
                                "resourcePath": "marketing_event",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "marketing_eventsId",
                                        "name": "Marketing Event ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofallmarketingevents",
                                "url": "/marketing_events/count.json",
                                "name": "Retrieves a count of all marketing events",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            }
                        ]
                    },
                    {
                        "id": "metafields",
                        "name": "Metafield",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoaresource",
                                "url": "/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a resource",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "key",
                                        "name": "key",
                                        "fieldType": "input",
                                        "description": "Show metafields with given key"
                                    },
                                    {
                                        "id": "namespace",
                                        "name": "namespace",
                                        "fieldType": "input",
                                        "description": "Show metafields with given namespace"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show metafields created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "Created_at_max",
                                        "fieldType": "input",
                                        "description": "Show metafields created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show metafields last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show metafields last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "type",
                                        "name": "type",
                                        "fieldType": "input",
                                        "description": "The metafield's information type. Possible values: single_line_text_field, multi_line_text_field, page_reference, product_reference, variant_reference, file_reference, number_integer, number_decimal, date, date_time, url, json, boolean, color, weight, volume, dimension, rating"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglemetafieldfromaresourcebyitsid",
                                "url": "/metafields/:_metafieldsId.json",
                                "name": "Retrieves a single metafield from a resource by its ID",
                                "resourcePath": "metafield",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "metafieldsId",
                                        "name": "Metafield ID",
                                        "required": true,
                                        "description": "ID of the metafield"
                                    }
                                ]
                            },
                            {
                                "id": "get_metafieldsthatbelongtoaproduct",
                                "url": "/products/:_productId/metafields.json",
                                "name": "Get metafields that belong to a product",
                                "resourcePath": "metafields",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "product ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "ID of the Product"
                                    }
                                ]
                            },
                            {
                                "id": "get_asingleproductmetafield",
                                "url": "/products/:_productId/metafields/:_metafields.json",
                                "name": "Get a single product metafield",
                                "resourcePath": "metafield",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "product ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "metafieldsId",
                                        "name": "Metafield ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofaresourcesmetafields",
                                "url": "/metafields/count.json",
                                "name": "Retrieves a count of a resource's metafields",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "count_ofmetafieldsthatbelongtoaproduct",
                                "url": "/products/:_productId/metafields/count.json",
                                "name": "Count of metafields that belong to a product",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "productId ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pages",
                        "name": "Online store : Page",
                        "endpoints": [
                            {
                                "id": "retrieve_alistofallpages",
                                "url": "/pages.json",
                                "name": "Retrieve a list of pages",
                                "resourcePath": "pages",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show Pages created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show Pages created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show Pages last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show Pages last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show Pages published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show Pages published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by Pages handle"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any "
                                        ],
                                        "description": "Filter by published_status"
                                    },
                                    {
                                        "id": "title",
                                        "name": "Title",
                                        "fieldType": "input",
                                        "description": "Show pages by Title"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglepagebyitsid",
                                "url": "/pages/:_pagesId.json",
                                "name": "Retrieves a single page by its ID",
                                "resourcePath": "page",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "pagesId",
                                        "name": "Page ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_apagecount",
                                "url": "/pages/count.json",
                                "name": "Retrieves a page count",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Count pages created after date (format: 2008-12-31)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Count pages created before date (format: 2008-12-31)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Count pages last updated after date (format: 2008-12-31)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Count pages last updated before date (format: 2008-12-31)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Count pages published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Count pages published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Count pages with a given published status:(default: any)"
                                    },
                                    {
                                        "id": "title",
                                        "name": "Title",
                                        "fieldType": "input",
                                        "description": "Count pages with a given title."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoapage",
                                "url": "/pages/:_pagesId/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a page",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "pagesId",
                                        "name": "Page ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "policies",
                        "name": "Store properties : Policy",
                        "endpoints": [
                            {
                                "id": "retrieves_alistoftheshopspolicies",
                                "url": "/policies.json",
                                "name": "Retrieves a list of the shop's policies",
                                "resourcePath": "policies",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "product_listings",
                        "name": "Sales channel : ProductListing",
                        "endpoints": [
                            {
                                "id": "retrieve_productlistingsthatarepublishedtoyourapp",
                                "url": "/product_listings.json",
                                "name": "Retrieve product listings that are published to your app",
                                "resourcePath": "product_listings",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "product_ids",
                                        "name": "product_ids",
                                        "fieldType": "input",
                                        "description": "A comma-separated list of product ids"
                                    },
                                    {
                                        "id": "collection_id",
                                        "name": "collection_id",
                                        "fieldType": "input",
                                        "description": "Filter by collection_id"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show products last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by products  handle"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_productidsthatarepublishedtoyourapp",
                                "url": "/product_listings/product_ids.json",
                                "name": "Retrieve product_ids that are published to your app",
                                "doesNotSupportPaging": true,
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "page",
                                        "name": "Page",
                                        "description": "Page to show(default: 1)"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "description": "Amount of results(default: 50, maximum: 250)"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_acountofproductsthatarepublishedtoyourapp",
                                "url": "/product_listings/count.json",
                                "name": "Retrieve a count of products that are published to your app",
                                "resourcePath": "",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "retrieve_aspecificproductlistingthatispublishedtoyourapp",
                                "url": "/product_listings/:_productId.json",
                                "name": "Retrieve a specific product listing that is published to your app",
                                "resourcePath": "product_listing",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "provinces",
                        "name": "Store properties : Province",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofprovinces",
                                "url": "/countries/:_countriesId/provinces.json",
                                "name": "Retrieves a list of provinces for a country",
                                "resourcePath": "provinces",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "countriesId",
                                        "name": "Country ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "country_id",
                                        "name": "country_id",
                                        "fieldType": "input",
                                        "description": "The id of the country the province belongs to"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleprovinceforacountry",
                                "url": "/countries/:_countriesId/provinces/:_provincesId.json",
                                "name": "Retrieves a single province for a country",
                                "resourcePath": "province",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "countriesId",
                                        "name": "Country ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "provincesId",
                                        "name": "Province ID",
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "country_id",
                                        "name": "country_id",
                                        "fieldType": "input",
                                        "description": "The id of the country the province belongs to"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofprovincesforacountry",
                                "url": "/countries/:_countriesId/provinces/count.json",
                                "name": "Retrieves a count of provinces for a country",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "countriesId",
                                        "name": "Country ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "redirects",
                        "name": "Online store : Redirect",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofurlredirects",
                                "url": "/redirects.json",
                                "name": "Retrieves a list of URL redirects",
                                "resourcePath": "redirects",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "path",
                                        "name": "path",
                                        "fieldType": "input",
                                        "description": "Show Redirects with given path."
                                    },
                                    {
                                        "id": "target",
                                        "name": "target",
                                        "fieldType": "input",
                                        "description": "Show Redirects with given target."
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleredirect",
                                "url": "/redirects/:_redirectsId.json",
                                "name": "Retrieves a single redirect",
                                "resourcePath": "redirect",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "redirectsId",
                                        "name": "Redirects ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofurlredirects",
                                "url": "/redirects/count.json",
                                "name": "Retrieves a Count of URL redirects",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "path",
                                        "name": "path",
                                        "fieldType": "input",
                                        "description": "Count redirects with given path."
                                    },
                                    {
                                        "id": "target",
                                        "name": "target",
                                        "fieldType": "input",
                                        "description": "Count redirects with given target."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "resource_feedback",
                        "name": "Sales channel : ResourceFeedback",
                        "endpoints": [
                            {
                                "id": "receive_alistofallresourcefeddbacks",
                                "url": "/resource_feedback.json",
                                "name": "Receive a list of all ResourceFeddbacks",
                                "resourcePath": "resource_feedback",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "script_tags",
                        "name": "Online store : ScriptTag",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofallscripttags",
                                "url": "/script_tags.json",
                                "name": "Retrieves a list of all script tags",
                                "resourcePath": "script_tags",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of results to return.(default: 50, maximum: 250)"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show ScriptTags created after date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show ScriptTags created before date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show ScriptTags last updated before date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show ScriptTags starting after date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "src",
                                        "name": "src",
                                        "fieldType": "input",
                                        "description": "Show script tags with a given URL"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglescripttag",
                                "url": "/script_tags/:_script_tagsId.json",
                                "name": "Retrieves a single script tag",
                                "resourcePath": "script_tag",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "script_tagsId",
                                        "name": "ScriptTag ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "A comma-separated list of fields to include in the response."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofallscripttags",
                                "url": "/script_tags/count.json",
                                "name": "Retrieves a count of all script tags",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "src",
                                        "name": "src",
                                        "fieldType": "input",
                                        "description": "Count only script tags with a given URL."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "shipping_zones",
                        "name": "Store properties : ShippingZone",
                        "endpoints": [
                            {
                                "id": "get_alistofallshippingzones",
                                "url": "/shipping_zones.json",
                                "name": "Receive a list of all shipping zones",
                                "resourcePath": "shipping_zones",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "shop",
                        "name": "Store properties : Shop",
                        "endpoints": [
                            {
                                "id": "retrieves_theshopsconfiguration",
                                "url": "/shop.json",
                                "name": "Retrieves the shop's configuration",
                                "resourcePath": "shop",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_alistofmetafieldsthatbelongtoashop",
                                "url": "/metafields.json",
                                "name": "Retrieves a list of metafields that belong to a shop",
                                "resourcePath": "metafields",
                                "doesNotSupportPaging": true
                            }
                        ]
                    },
                    {
                        "id": "smart_collections",
                        "name": "Products : SmartCollection",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofsmartcollections",
                                "url": "/smart_collections.json",
                                "name": "Retrieves a list of smart collections",
                                "resourcePath": "smart_collections",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "product_id",
                                        "name": "product_id",
                                        "fieldType": "input",
                                        "description": "Show smart collections that includes given product"
                                    },
                                    {
                                        "id": "handle",
                                        "name": "handle",
                                        "fieldType": "input",
                                        "description": "Filter by smart collection handle"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show SmartCollections last updated before date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show SmartCollections starting after date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Show SmartCollections published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Show SmartCollections published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "title",
                                        "name": "title",
                                        "fieldType": "input",
                                        "description": "Show smart collections with given title"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Filter results based on the published status of smart collections(default: any)"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglesmartcollection",
                                "url": "/smart_collections/:_smart_collectionsId.json",
                                "name": "Retrieves a single smart collection",
                                "resourcePath": "smart_collection",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "smart_collectionsId",
                                        "name": "SmartCollection ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "A comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofsmartcollections",
                                "url": "/smart_collections/count.json",
                                "name": "Retrieves a count of smart collections",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "product_id",
                                        "name": "product_id",
                                        "fieldType": "input",
                                        "description": "Count smart collections that includes given product"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Count SmartCollections last updated before date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Count SmartCollections starting after date (format 2017-03-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_min",
                                        "name": "published_at_min",
                                        "fieldType": "input",
                                        "description": "Count SmartCollections published after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "published_at_max",
                                        "name": "published_at_max",
                                        "fieldType": "input",
                                        "description": "Count SmartCollections published before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "title",
                                        "name": "title",
                                        "fieldType": "input",
                                        "description": "Count smart collections with given title"
                                    },
                                    {
                                        "id": "published_status",
                                        "name": "published_status",
                                        "fieldType": "select",
                                        "options": [
                                            "published",
                                            "unpublished",
                                            "any"
                                        ],
                                        "description": "Filter results based on the published status of smart collections."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "access_storefront_access_tokens",
                        "name": "Access : StorefrontAccessToken",
                        "endpoints": [
                            {
                                "id": "retrievesalistofstorefrontaccesstokensthathavebeenissued",
                                "url": "/storefront_access_tokens.json",
                                "name": "Retrieves a list of storefront access tokens that have been issued",
                                "resourcePath": "storefront_access_tokens",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "themes",
                        "name": "Online store : Theme",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofthemes",
                                "url": "/themes.json",
                                "name": "Retrieves a list of themes",
                                "resourcePath": "themes",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ]
                            },
                            {
                                "id": "retrieves_asingletheme",
                                "url": "/themes/:_themesId.json",
                                "name": "Retrieves a single theme",
                                "resourcePath": "theme",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "themesId",
                                        "name": "Theme ID",
                                        "fieldType": "input",
                                        "required": true,
                                        "description": "A unique numeric identifier for the theme."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "usage_charges",
                        "name": "Billing : UsageCharge",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofusagecharges",
                                "url": "/recurring_application_charges/:_recurring_application_chargesId/usage_charges.json",
                                "name": "Retrieves a list of usage charges",
                                "resourcePath": "usage_charges",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "recurring_application_chargesId",
                                        "name": "Recurring Application Charge ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglecharge",
                                "url": "/recurring_application_charges/:_recurring_application_chargesId/usage_charges/:_usage_chargesId.json",
                                "name": "Retrieves a single charge",
                                "resourcePath": "usage_charge",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "recurring_application_chargesId",
                                        "name": "Recurring Application Charge ID",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "usage_chargesId",
                                        "name": "UsageCharge ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "applicationcharge",
                        "name": "Billing : ApplicationCharge",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofapplicationcharges",
                                "url": "/application_charges.json",
                                "name": "Retrieves a list of application charges",
                                "resourcePath": "application_charges",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Restrict results to after the specified ID."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "A comma-separated list of fields to include in the response."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_anapplicationcharge",
                                "url": "/application_charges/:_application_chargeid.json",
                                "name": "Retrieves an application charge",
                                "resourcePath": "application_charges",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "application_chargeid",
                                        "name": "Application Charge ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "applicationcredit",
                        "name": "Billing : ApplicationCredit",
                        "endpoints": [
                            {
                                "id": "retrieves_allapplicationcredits",
                                "url": "/application_credits.json",
                                "name": "Retrieves all application credits",
                                "resourcePath": "application_credits",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "description": "Retrieves a list of all payouts ordered by payout date, with the most recent being first.",
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "A comma-separated list of fields to include in the response."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_allapplicationcredits",
                                "url": "/application_credits/:_application_creditid.json",
                                "name": "Retrieves a single application credit",
                                "resourcePath": "payout",
                                "description": "Retrieves a single application credit.",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "application_creditid",
                                        "name": "ApplicationCredit ID",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "recurring_application_charges",
                        "name": "Billing : RecurringApplicationCharge",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofrecurringapplicationcharges",
                                "url": "/recurring_application_charges.json",
                                "name": "Retrieves a list of recurring application charges",
                                "resourcePath": "recurring_application_charges",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "Since ID",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglecharge",
                                "url": "/recurring_application_charges/:_recurring_application_chargesId.json",
                                "name": "Retrieves a single charge",
                                "resourcePath": "recurring_application_charge",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "recurring_application_chargesId",
                                        "name": "RecurringApplicationCharge ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "report",
                        "name": "Analytics : Report",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofreports",
                                "url": "/reports.json",
                                "name": "Retrieves a list of reports",
                                "resourcePath": "reports",
                                "description": "Retrieves a list of reports created by your app",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "fieldType": "input",
                                        "description": "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "fieldType": "input",
                                        "description": "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_areportscreatedbyyourapp",
                                "url": "/reports/:_reportsid.json",
                                "name": "Retrieves a single report",
                                "resourcePath": "report",
                                "description": "Retrieves a single report created by your app.",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "reportsid",
                                        "name": "Report ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pricerule",
                        "name": "Discounts : PriceRule",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofpricerules",
                                "url": "/price_rules.json",
                                "name": "Retrieves a list of price rules",
                                "resourcePath": "price_rules",
                                "description": "Retrieves a list of price rules.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Show price rules created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Show price rules created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "description": "Show price rules last updated after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "description": "Show price rules last updated before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "starts_at_min",
                                        "name": "starts_at_min",
                                        "description": "Show price rules starting after date (format 2017-03-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "starts_at_max",
                                        "name": "starts_at_max",
                                        "description": "Show price rules starting before date (format 2017-03-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "ends_at_min",
                                        "name": "ends_at_min",
                                        "description": "Show price rules ending after date (format 2017-03-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "ends_at_max",
                                        "name": "ends_at_max",
                                        "description": "Show price rules ending before date (format 2017-03-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "times_used",
                                        "name": "times_used",
                                        "description": "Show price rules with times used."
                                    }
                                ]
                            },
                            {
                                "id": "Retrievesasinglepricerule",
                                "url": "/price_rules/:_pricerule_id.json",
                                "name": "Retrieves a single price rule",
                                "resourcePath": "price_rule",
                                "description": "Retrieves a single price rule.",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "pricerule_id",
                                        "name": "PriceRule ID",
                                        "description": "Id of the Price Rule",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "event",
                        "name": "Events : Event",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofevents",
                                "url": "/events.json",
                                "name": "Retrieves a list of events",
                                "resourcePath": "events",
                                "description": "Retrieves a list of events.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "filter",
                                        "name": "filter",
                                        "description": "Show events specified in this filter."
                                    },
                                    {
                                        "id": "verb",
                                        "name": "verb",
                                        "description": "Show events of a certain type."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleeventbyitsid",
                                "url": "/events/:_eventid.json",
                                "name": "Retrieves a single event",
                                "resourcePath": "event",
                                "description": "Retrieves a single event by its ID.",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "eventid",
                                        "name": "Event ID",
                                        "required": true,
                                        "description": "The ID of the event."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "Fields",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofevents",
                                "url": "/events/count.json",
                                "name": "Retrieves a count of events",
                                "resourcePath": "",
                                "description": "Retrieves a count of events.",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)."
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_alleventsfromaspecificproduct",
                                "url": "/products/:_productsId/events.json",
                                "name": "Retrieve all events from a specific product",
                                "resourcePath": "events",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "productsId",
                                        "name": "Product ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "filter",
                                        "name": "filter",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "fieldType": "input",
                                        "description": "Restrict results to after the specified ID"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "comma-separated list of fields to include in the response"
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "fieldType": "input",
                                        "description": "Show events created after date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "fieldType": "input",
                                        "description": "Show events created before date (format: 2014-04-25T16:15:47-04:00)"
                                    },
                                    {
                                        "id": "verb",
                                        "name": "verb",
                                        "fieldType": "input",
                                        "description": "Show events of a certain type."
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_alistofalleventsfromaspecificorder",
                                "url": "/orders/:_ordersId/events.json",
                                "name": "Retrieve a list of all events from a specific order",
                                "resourcePath": "events",
                                "pathParameters": [
                                    {
                                        "id": "ordersId",
                                        "name": "Order ID",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "inventoryitem",
                        "name": "Inventory : InventoryItem",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofinventoryitems",
                                "url": "/inventory_items.json",
                                "name": "Retrieves a list of inventory items",
                                "resourcePath": "inventory_items",
                                "description": "Retrieves a list of inventory items.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "ids",
                                        "name": "ids",
                                        "required": true,
                                        "description": "Show only certain inventory items, specified by a comma-seperated list of IDs(maximum: 100)."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asingleinventoryitembyid",
                                "url": "/inventory_items/:_inventoryitemid.json",
                                "name": "Retrieves a single inventory item by ID",
                                "resourcePath": "inventory_item",
                                "description": "Retrieves a single inventory item by ID.",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "inventoryitemid",
                                        "name": "Inventory Item ID",
                                        "required": true,
                                        "description": "The ID of the event."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "inventorylevel",
                        "name": "Inventory : InventoryLevel",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofinventorylevels",
                                "url": "/inventory_levels.json",
                                "name": "Retrieves a list of inventory levels",
                                "resourcePath": "inventory_levels",
                                "description": "Retrieves a list of inventory levels.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "inventory_item_ids",
                                        "name": "inventory_item_ids",
                                        "required": true,
                                        "description": "A comma-separated list of inventory item IDs(maximum: 50)."
                                    },
                                    {
                                        "id": "location_ids",
                                        "name": "location_ids",
                                        "description": "A comma-separated list of location IDs. To find the ID of a location(maximum: 50)."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "currency",
                        "name": "Store properties : Currency",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofcurrenciesenabledonashop",
                                "url": "/currencies.json",
                                "name": "Retrieves a list of currencies enabled on a shop",
                                "resourcePath": "currencies",
                                "doesNotSupportPaging": true,
                                "description": "Retrieves a list of currencies enabled on a shop.",
                                "supportedExportTypes": [
                                    "test"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "tendertransaction",
                        "name": "TenderTransaction",
                        "endpoints": [
                            {
                                "id": "retrieves_alistoftendertransactions",
                                "url": "/tender_transactions.json",
                                "name": "Retrieves a list of tender transactions",
                                "resourcePath": "tender_transactions",
                                "description": "Retrieves a list of tender transactions.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "processed_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Retrieve only transactions after the specified ID."
                                    },
                                    {
                                        "id": "processed_at_min",
                                        "name": "processed_at_min",
                                        "description": "Show tender transactions processed_at or after the specified date.."
                                    },
                                    {
                                        "id": "processed_at_max",
                                        "name": "processed_at_max",
                                        "description": "Show tender transactions processed_at or before the specified date."
                                    },
                                    {
                                        "id": "processed_at",
                                        "name": "processed_at",
                                        "description": "Show tender transactions processed at the specified date."
                                    },
                                    {
                                        "id": "order",
                                        "name": "order",
                                        "description": "Show tender transactions ordered by processed_at in ascending or descending order."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "gift_card",
                        "name": "Gift Card",
                        "endpoints": [
                            {
                                "id": "retrieves_alistofgiftcards",
                                "url": "/gift_cards.json",
                                "name": "Retrieves a list of gift cards",
                                "resourcePath": "gift_cards",
                                "description": "Retrieve a list of all gift cards",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "enabled",
                                            "disabled"
                                        ],
                                        "description": "Retrieve gift cards with a given status. Valid values:1.enabled: Restrict results to only enabled gift cards2.disabled: Restrict results to only disabled gift cards"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The maximum number of results to show.(default: 50, maximum: 250)"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Restrict results to after the specified ID."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_asinglegiftcardbyitsid",
                                "url": "/gift_cards/:_gift_card_id.json",
                                "name": "Retrieves a single gift card by its ID",
                                "resourcePath": "gift_card",
                                "description": "Retrieves a single gift card by its ID",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "gift_card_id",
                                        "name": "Gift Card ID",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_acountofgiftcards",
                                "url": "/gift_cards/count.json",
                                "name": "Retrieves a count of gift cards",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "select",
                                        "options": [
                                            "enabled",
                                            "disabled"
                                        ],
                                        "description": "Count gift cards with a given status. Valid values:1.enabled: Count only enabled gift cards 2.disabled: Count only disabled gift cards"
                                    }
                                ]
                            },
                            {
                                "id": "searches_forgiftcards",
                                "url": "/gift_cards/search.json",
                                "name": "Searches for gift cards",
                                "resourcePath": "gift_cards",
                                "description": "Searches for gift cards that match a supplied query.",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "order",
                                        "name": "order",
                                        "description": "The field and direction to order results by.(default: disabled_at DESC)"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "description": "The text to search for."
                                    },
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The maximum number of results to show.(default: 50, maximum: 250)"
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "payouts",
                        "name": "Shopify Payments : Payouts",
                        "endpoints": [
                            {
                                "id": "retrieves_a_list_of_all_payouts",
                                "url": "/shopify_payments/payouts.json",
                                "name": "Retrieves a list of all payouts ordered by payout date",
                                "resourcePath": "payouts",
                                "description": "Retrieves a list of all payouts ordered by payout date, with the most recent being first",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "date_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "last_id",
                                        "name": "last_id",
                                        "description": "Filter response to payouts exclusively before the specified ID"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Filter response to payouts exclusively after the specified ID."
                                    },
                                    {
                                        "id": "date",
                                        "name": "date",
                                        "description": "Filter response to payouts on the specified date."
                                    },
                                    {
                                        "id": "date_min",
                                        "name": "date_min",
                                        "description": "Filter response to payouts inclusively after the specified date."
                                    },
                                    {
                                        "id": "date_max",
                                        "name": "date_max",
                                        "description": "Filter response to payouts inclusively before the specified date."
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "fieldType": "input",
                                        "description": "Filter response to payouts with the specified status"
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_a_single_payout_by_id",
                                "url": "/shopify_payments/payouts/:_payout_id.json",
                                "name": "Retrieves a single payout by id",
                                "resourcePath": "payout",
                                "description": "Retrieves a single payout by id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "payout_id",
                                        "name": "Payout ID",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "payment_transactions",
                        "name": "Shopify Payments : Transactions",
                        "endpoints": [
                            {
                                "id": "retrieves_a_list_of_all_balance_transactions",
                                "url": "/shopify_payments/balance/transactions.json",
                                "name": "Retrieves a list of all balance transactions",
                                "resourcePath": "transactions",
                                "description": "Retrieves a list of all balance transactions ordered by processing time",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "payout_id",
                                        "name": "payout_id",
                                        "description": "Filter response to transactions paid out in the specified payout."
                                    },
                                    {
                                        "id": "last_id",
                                        "name": "last_id",
                                        "description": "Filter response to payouts exclusively before the specified ID"
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Filter response to payouts exclusively after the specified ID."
                                    },
                                    {
                                        "id": "test",
                                        "name": "test",
                                        "description": "Filter response to transactions placed in test mode."
                                    },
                                    {
                                        "id": "payout_status",
                                        "name": "payout_status",
                                        "fieldType": "input",
                                        "description": "Filter response to transactions with the specified payout status"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "webhooks",
                        "name": "Events : Webhook",
                        "endpoints": [
                            {
                                "id": "retrieves_a_list_of_webhooks",
                                "url": "/webhooks.json",
                                "name": "Retrieves a list of webhooks",
                                "resourcePath": "webhooks",
                                "description": "Retrieves a list of webhooks.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updated_at_min": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss[Z]"
                                },
                                "queryParameters": [
                                    {
                                        "id": "address",
                                        "name": "address",
                                        "description": "Retrieve webhook subscriptions that send the POST request to this URI."
                                    },
                                    {
                                        "id": "created_at_max",
                                        "name": "created_at_max",
                                        "description": "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "created_at_min",
                                        "name": "created_at_min",
                                        "description": "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
                                    },
                                    {
                                        "id": "since_id",
                                        "name": "since_id",
                                        "description": "Filter response to payouts exclusively after the specified ID."
                                    },
                                    {
                                        "id": "topic",
                                        "name": "topic",
                                        "description": "Show webhook subscriptions with a given topic."
                                    },
                                    {
                                        "id": "updated_at_min",
                                        "name": "updated_at_min",
                                        "description": "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
                                    },
                                    {
                                        "id": "updated_at_max",
                                        "name": "updated_at_max",
                                        "description": "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_a_single_webhook_by_id",
                                "url": "/webhooks/:_webhook_id.json",
                                "name": "Retrieve a single webhook by its id",
                                "resourcePath": "webhook",
                                "description": "Retrieves a single payout by id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "webhook_id",
                                        "name": "Webhook ID",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
                                    }
                                ]
                            },
                            {
                                "id": "count_all_existingwebhooksubscriptions",
                                "url": "/webhooks/count.json",
                                "name": "Count all of the webhook subscriptions for your shop",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "topic",
                                        "name": "topic",
                                        "fieldType": "input",
                                        "description": "webhook subscriptions for the a specific topic Ex. orders/create"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "collection",
                        "name": "Products : Collection",
                        "endpoints": [
                            {
                                "id": "retrieves_a_spcific_collection_by_its_id",
                                "url": "/collections/:_collection_id.json",
                                "name": "Retrieve a specific collection by its ID",
                                "resourcePath": "collection",
                                "description": "Retrieves a single collection",
                                "pathParameters": [
                                    {
                                        "id": "collection_id",
                                        "name": "Collection ID",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "fields",
                                        "name": "fields",
                                        "fieldType": "input",
                                        "description": "Show only certain fields, specified by a comma-separated list of field names."
                                    }
                                ]
                            },
                            {
                                "id": "retrieves_a_list_of_products_belonging_to_a_collection",
                                "url": "/collections/:_collection_id/products.json",
                                "name": "Retrieves a list of products belonging to a collection",
                                "resourcePath": "products",
                                "description": "Retrieves a list of webhooks.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "collection_id",
                                        "name": "Collection ID",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of products to retrieve. default: 50. Maximum: 250"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_order",
                        "name": "Shipping and fulfillment : FulfillmentOrder",
                        "endpoints": [
                            {
                                "id": "retrieves_a_list_of_fulfillment_orders_for_a_specific_order",
                                "url": "/orders/:_order_id/fulfillment_orders.json",
                                "name": "Retrieve a list of all fulfillment orders for an order",
                                "resourcePath": "fulfillment_orders",
                                "description": "Retrieves a list of fulfillment orders for a specific order.",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "order_id",
                                        "name": "Order ID",
                                        "description": "Provide order_id to fetch fulfillment orders for",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "description": "The status of the fulfillment order",
                                        "fieldType": "select",
                                        "options": [
                                            "open",
                                            "in_progress",
                                            "scheduled",
                                            "cancelled",
                                            "incomplete",
                                            "closed",
                                            "on_hold"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_a_single_fulfillment_order_by_its_id",
                                "url": "/fulfillment_orders/:_fulfillment_order_id.json",
                                "name": "Get a single fulfillment order by its ID",
                                "resourcePath": "fulfillment_order",
                                "description": "Retrieves a single collection",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "name": "Fulfillent Order ID",
                                        "description": "Provide a specific fulfillment order id to fetch data for",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "assigned_to_the_shop_locations",
                                "url": "/assigned_fulfillment_orders.json",
                                "name": "Retrieves a list of fulfillment orders assigned to the shop locations that are owned by the app",
                                "resourcePath": "fulfillment_order",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "location_ids[]",
                                        "name": "location_ids",
                                        "description": "The IDs of the assigned locations of the fulfillment orders that should be returned. If the location_ids parameter isn't provided, then all fulfillment orders assigned to the shop locations that are managed by the app will be returned.",
                                        "type": "array",
                                        "required": false
                                    },
                                    {
                                        "id": "assignment_status",
                                        "name": "assignment_status",
                                        "description": "The assignment status of the fulfillment orders that should be returned. If assignment_status parameter isn't provided, then the query will return all assigned fulfillment orders, except those with the CLOSED status.",
                                        "fieldType": "select",
                                        "options": [
                                            "fulfillment_unsubmitted",
                                            "fulfillment_requested",
                                            "fulfillment_accepted",
                                            "cancellation_requested"
                                        ],
                                        "required": false
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deprecated_api_calls",
                        "name": "Deprecated API calls(This API will only work for versions above 2021-01)",
                        "endpoints": [
                            {
                                "id": "retrieves_all_deprecated_api_calls",
                                "url": "/deprecated_api_calls.json",
                                "name": "Retrieves all deprecated API calls",
                                "description": "Retrieves a list of deprecated API calls made by your private apps in the past 30 days.",
                                "resourcePath": "deprecated_api_calls",
                                "doesNotSupportPaging": true
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "import": {
        "labels": {
            "version": "API Version"
        },
        "urlResolution": [
            "/customers.json",
            "/customers/:_customerId.json",
            "/customers/:_customerId/addresses.json",
            "/customers/:_customerId/addresses/:_addressId.json",
            "/orders/:_orderId/fulfillments.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId.json",
            "/orders.json",
            "/orders/:_orderId.json",
            "/orders/:_orderId/refunds.json",
            "/orders/:_orderId/close.json",
            "/orders/:_orderId/open.json",
            "/orders/:_orderId/cancel.json",
            "/orders/:_orderId/risks.json",
            "/orders/:_orderId/risks/:_riskId.json",
            "/products.json",
            "/products/:_productId.json",
            "/products/:_productId/variants.json",
            "/products/:_productId/variants/:_variantId.json",
            "/orders/:_orderId/refunds/calculate.json",
            "/orders/:_orderId/transactions.json",
            "/blogs/:_blogsId/articles/:_articlesId.json",
            "/blogs/:_blogsId/articles.json",
            "/themes/:_themesId/assets.json?asset[key]=:_key",
            "/themes/:_themesId/assets.json",
            "/blogs/:_blogsId.json",
            "/blogs.json",
            "/collects/:_collectsId.json",
            "/collects.json",
            "/comments/:_commentsId/restore.json",
            "/comments/:_commentsId/remove.json",
            "/comments/:_commentsId/approve.json",
            "/comments/:_commentsId/not_spam.json",
            "/comments/:_commentsId/spam.json",
            "/comments/:_commentsId.json",
            "/comments.json",
            "/countries/:_countriesId.json",
            "/countries.json",
            "/custom_collections/:_custom_collectionsId.json",
            "/custom_collections.json",
            "/customer_saved_searches/:_customer_saved_searchesId.json",
            "/customer_saved_searches.json",
            "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
            "/price_rules/:_price_rulesId/discount_codes.json",
            "/price_rules/:_price_rulesId/batch.json",
            "/draft_orders/:_draft_ordersId.json",
            "/draft_orders.json",
            "/draft_orders/:_draft_ordersId/complete.json",
            "/draft_orders/:_draft_ordersId/send_invoice.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId/events/:_eventsId.json",
            "/orders/:_orderId/fulfillments/:_fulfillmentId/events.json",
            "/fulfillment_services/:_fulfillment_servicesId.json",
            "/fulfillment_services.json",
            "/marketing_events/:_marketing_eventsId/engagements.json",
            "/marketing_events/:_marketing_eventsId.json",
            "/marketing_events.json",
            "/products/:_productId/metafields.json",
            "/products/:_productId/metafields/:_metafieldsId.json",
            "/metafields/:_metafieldsId.json",
            "/metafields.json",
            "/pages/:_pagesId.json",
            "/pages.json",
            "/price_rules/:_price_rulesId.json",
            "/price_rules.json",
            "/product_listings/:_productId.json",
            "/countries/:_countriesId/provinces/:_provincesId.json",
            "/redirects/:_redirectsId.json",
            "/redirects.json",
            "/reports/:_reportsId.json",
            "/reports.json",
            "/resource_feedback.json",
            "/script_tags/:_script_tagsId.json",
            "/script_tags.json",
            "/smart_collections/:_smart_collectionsId/order.json?products[]=:_productId",
            "/smart_collections/:_smart_collectionsId/order.json?sort_order=:_sort_order",
            "/smart_collections/:_smart_collectionsId.json",
            "/smart_collections.json",
            "/storefront_access_tokens/:_storefront_access_tokensId.json",
            "/storefront_access_tokens.json"
        ],
        "versions": [
            {
                "version": "v2",
                "resources": [
                    {
                        "id": "customer",
                        "name": "Customers : Customer",
                        "sampleData": {
                            "customer": {
                                "id": 207119551,
                                "email": "bob.norman@hostmail.com",
                                "email_marketing_consent": {
                                    "state": "subscribed",
                                    "opt_in_level": "confirmed_opt_in",
                                    "consent_updated_at": "2022-04-01T11:22:06-04:00"
                                },
                                "created_at": "2019-02-05T12:00:00-05:00",
                                "updated_at": "2019-02-05T12:00:00-05:00",
                                "sms_marketing_consent": {
                                    "state": "subscribed",
                                    "opt_in_level": "single_opt_in",
                                    "consent_updated_at": "2021-08-03T15:31:06-04:00",
                                    "consent_collected_from": "OTHER"
                                },
                                "first_name": "Bob",
                                "last_name": "Norman",
                                "orders_count": 1,
                                "state": "disabled",
                                "total_spent": "41.94",
                                "last_order_id": 450789469,
                                "note": null,
                                "verified_email": true,
                                "multipass_identifier": null,
                                "tax_exempt": false,
                                "phone": null,
                                "tags": "",
                                "last_order_name": "#1001",
                                "currency": "USD",
                                "addresses": [
                                    {
                                        "id": 207119551,
                                        "customer_id": 207119551,
                                        "first_name": null,
                                        "last_name": null,
                                        "company": null,
                                        "address1": "Chestnut Street 92",
                                        "address2": "",
                                        "city": "Louisville",
                                        "province": "Kentucky",
                                        "country": "United States",
                                        "zip": "40202",
                                        "phone": "555-625-1199",
                                        "name": "",
                                        "province_code": "KY",
                                        "country_code": "US",
                                        "country_name": "United States",
                                        "default": true
                                    }
                                ],
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ],
                                "password": "newpass",
                                "password_confirmation": "newpass",
                                "send_email_welcome": false,
                                "send_email_invite": true,
                                "admin_graphql_api_id": "gid://shopify/Customer/207119551",
                                "default_address": {
                                    "id": 207119551,
                                    "customer_id": 207119551,
                                    "first_name": null,
                                    "last_name": null,
                                    "company": null,
                                    "address1": "Chestnut Street 92",
                                    "address2": "",
                                    "city": "Louisville",
                                    "province": "Kentucky",
                                    "country": "United States",
                                    "zip": "40202",
                                    "phone": "555-625-1199",
                                    "name": "",
                                    "province_code": "KY",
                                    "country_code": "US",
                                    "country_name": "United States",
                                    "default": true
                                }
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_acustomer",
                                "name": "Creates a customer",
                                "url": "/customers.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "customer.email",
                                    "customer.first_name",
                                    "customer.last_name"
                                ],
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreExisting": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/customers/search.json",
                                        "id": "searches_forcustomersthatmatchasuppliedquery",
                                        "extract": "customers[0].id"
                                    }
                                }
                            },
                            {
                                "id": "update_customer",
                                "name": "Updates a customer",
                                "url": "/customers/:_customerId.json",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreMissing": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/customers/search.json",
                                        "id": "searches_forcustomersthatmatchasuppliedquery",
                                        "extract": "customers[0].id"
                                    }
                                }
                            },
                            {
                                "id": "createorupdate_customer",
                                "name": "Create or Update customer",
                                "url": [
                                    "/customers/:_customerId.json",
                                    "/customers.json"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "customer.email",
                                    "customer.first_name",
                                    "customer.last_name"
                                ],
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/customers/search.json",
                                        "id": "searches_forcustomersthatmatchasuppliedquery",
                                        "extract": "customers[0].id"
                                    }
                                }
                            },
                            {
                                "id": "delete_customer",
                                "name": "Deletes a customer",
                                "url": "/customers/:_customerId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/customers/search.json",
                                        "id": "searches_forcustomersthatmatchasuppliedquery",
                                        "extract": "customers[0].id"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "customeraddress",
                        "name": "Customers : CustomerAddress",
                        "sampleData": {
                            "address": {
                                "address1": "1 Rue des Carrieres",
                                "address2": "Suite 1234",
                                "city": "Montreal",
                                "company": "Fancy Co.",
                                "first_name": "Samuel",
                                "last_name": "de Champlain",
                                "phone": "819-555-5555",
                                "province": "Quebec",
                                "country": "Canada",
                                "zip": "G1R 4P5",
                                "name": "Samuel de Champlain",
                                "province_code": "QC",
                                "country_code": "CA",
                                "country_name": "Canada"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_anewaddressforacustomer",
                                "name": "Create a new address for a customer",
                                "url": "/customers/:_customerId/addresses.json",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "address.address1"
                                ],
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "addressId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_aaddressforacustomer",
                                "name": "Updates an existing customer address",
                                "url": "/customers/:_customerId/addresses/:_addressId.json",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "address.address1"
                                ],
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "addressId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_addressforacustomer",
                                "name": "Create or Update customer address",
                                "url": [
                                    "/customers/:_customerId/addresses/:_addressId.json",
                                    "/customers/:_customerId/addresses.json"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "address.address1"
                                ],
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "addressId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_addressforacustomer",
                                "name": "Removes an address from a customer’s address list",
                                "url": "/customers/:_customerId/addresses/:_addressId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "customerId",
                                        "name": "Customer Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "addressId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment",
                        "name": "Shipping and fulfillment : Fulfillment",
                        "sampleData": {
                            "fulfillment": {
                                "location_id": 905684977,
                                "tracking_number": "null",
                                "tracking_urls": [
                                    "https://shipping.xyz/track.php?num=123456789",
                                    "https://anothershipper.corp/track.php?code=abc"
                                ],
                                "notify_customer": true,
                                "tracking_url": "http://www.packagetrackr.com/track/somecarrier/1234567",
                                "tracking_company": "Jack Black's Pack, Stack and Track",
                                "line_items": [
                                    {
                                        "id": 466157049,
                                        "title": "IPod Nano - 8gb",
                                        "quantity": 1,
                                        "price": "199.00",
                                        "grams": 200,
                                        "sku": "IPOD2008GREEN",
                                        "variant_title": "green",
                                        "vendor": null,
                                        "fulfillment_service": "manual",
                                        "product_id": 632910392,
                                        "requires_shipping": true,
                                        "taxable": true,
                                        "gift_card": false,
                                        "name": "IPod Nano - 8gb - green",
                                        "variant_inventory_management": "shopify",
                                        "properties": [],
                                        "product_exists": true,
                                        "fulfillable_quantity": 1,
                                        "total_discount": "0.00",
                                        "fulfillment_status": null,
                                        "tax_lines": []
                                    }
                                ],
                                "variant_inventory_management": "shopify",
                                "status": "failure",
                                "service": "manual"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_fulfillment_for_orders",
                                "name": "Creates a fulfillment for one or many fulfillment orders",
                                "url": "/fulfillments.json",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment": {
                                        "message": "The package was shipped this morning.",
                                        "notify_customer": false,
                                        "origin_address": {
                                            "address1": "123 Amoebobacterieae St",
                                            "address2": "Unit 806",
                                            "city": "Ottawa",
                                            "country_code": "CA",
                                            "province": "Ontario",
                                            "zip": "K2P0V6"
                                        },
                                        "tracking_info": {
                                            "number": 1562678,
                                            "url": "https://www.my-shipping-company.com",
                                            "company": "my-shipping-company"
                                        },
                                        "line_items_by_fulfillment_order": [
                                            {
                                                "fulfillment_order_id": 1046000807,
                                                "fulfillment_order_line_items": [
                                                    {
                                                        "id": 466157049,
                                                        "quantity": 1
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "requiredMappings": [
                                    "fulfillment.line_items_by_fulfillment_order[*].fulfillment_order_id"
                                ],
                                "parameters": [
                                    {
                                        "id": "fulfillmentId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreExisting": true
                            },
                            {
                                "id": "update_tracking_informationfor_fulfillment",
                                "name": "Updates the tracking information for a fulfillment",
                                "url": "/fulfillments/:_fulfillmentId/update_tracking.json",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment": {
                                        "notify_customer": true,
                                        "tracking_info": {
                                            "number": "1111",
                                            "url": "http://www.my-url.com",
                                            "company": "my-company"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "fulfillmentId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "fulfillment.tracking_info.number"
                                ],
                                "supportIgnoreMissing": true
                            },
                            {
                                "id": "cancel_afulfillment",
                                "name": "Cancel a Fulfillment",
                                "url": "/fulfillments/:_fulfillment_id/cancel.json",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "fulfillment_id",
                                        "name": "Fulfillment Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "sampleData": {}
                            },
                            {
                                "id": "createOrUpdateAfulfillment",
                                "name": "Create or Update a Fulfillment",
                                "url": [
                                    "/fulfillments/:_fulfillmentId/update_tracking.json",
                                    "/fulfillments.json"
                                ],
                                "method": [
                                    "POST",
                                    "POST"
                                ],
                                "description": "Creates a fulfillment for one or many fulfillment orders or updates the tracking information for a fulfillment",
                                "sampleData": {
                                    "fulfillment": {
                                        "message": "The package was shipped this morning.",
                                        "notify_customer": false,
                                        "origin_address": {
                                            "address1": "123 Amoebobacterieae St",
                                            "address2": "Unit 806",
                                            "city": "Ottawa",
                                            "country_code": "CA",
                                            "province": "Ontario",
                                            "zip": "K2P0V6"
                                        },
                                        "tracking_info": {
                                            "number": 1562678,
                                            "url": "https://www.my-shipping-company.com",
                                            "company": "my-shipping-company"
                                        },
                                        "line_items_by_fulfillment_order": [
                                            {
                                                "fulfillment_order_id": 1046000807,
                                                "fulfillment_order_line_items": [
                                                    {
                                                        "id": 466157049,
                                                        "quantity": 1
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "requiredMappings": [
                                    "fulfillment.line_items_by_fulfillment_order[*].fulfillment_order_id"
                                ],
                                "parameters": [
                                    {
                                        "id": "fulfillmentId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "order",
                        "name": "Orders : Order",
                        "sampleData": {
                            "order": {
                                "email": "Swatantra@example.com",
                                "number": 101,
                                "note": "",
                                "token": "26206bece11ea131f41da8e2da41d52a",
                                "test": false,
                                "total_price": "7560.00",
                                "subtotal_price": "7550.00",
                                "total_weight": 60000,
                                "total_tax": "0.00",
                                "taxes_included": false,
                                "currency": "USD",
                                "financial_status": "paid",
                                "confirmed": true,
                                "total_discounts": "30.00",
                                "total_line_items_price": "7580.00",
                                "cart_token": null,
                                "buyer_accepts_marketing": false,
                                "name": "#1101",
                                "referring_site": null,
                                "landing_site": null,
                                "cancelled_at": null,
                                "cancel_reason": null,
                                "total_price_usd": "7560.00",
                                "checkout_token": null,
                                "reference": null,
                                "user_id": 20191445050,
                                "location_id": null,
                                "source_identifier": null,
                                "source_url": null,
                                "device_id": null,
                                "phone": null,
                                "customer_locale": null,
                                "app_id": 1354745,
                                "browser_ip": null,
                                "landing_site_ref": null,
                                "order_number": 1101,
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ],
                                "discount_applications": [
                                    {
                                        "type": "manual",
                                        "value": "30.0",
                                        "value_type": "fixed_amount",
                                        "allocation_method": "across",
                                        "target_selection": "all",
                                        "target_type": "line_item",
                                        "description": "Custom discount",
                                        "title": "Custom discount"
                                    }
                                ],
                                "discount_codes": [
                                    {
                                        "code": "Custom discount",
                                        "amount": "30.00",
                                        "type": "fixed_amount"
                                    }
                                ],
                                "note_attributes": [],
                                "payment_gateway_names": [
                                    "manual"
                                ],
                                "checkout_id": null,
                                "source_name": "shopify_draft_order",
                                "fulfillment_status": "fulfilled",
                                "tax_lines": [],
                                "tags": "",
                                "contact_email": "Swatantra@example.com",
                                "presentment_currency": "USD",
                                "total_line_items_price_set": {
                                    "shop_money": {
                                        "amount": "7580.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "7580.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "total_discounts_set": {
                                    "shop_money": {
                                        "amount": "30.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "30.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "total_shipping_price_set": {
                                    "shop_money": {
                                        "amount": "10.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "10.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "subtotal_price_set": {
                                    "shop_money": {
                                        "amount": "7550.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "7550.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "total_price_set": {
                                    "shop_money": {
                                        "amount": "7560.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "7560.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "total_tax_set": {
                                    "shop_money": {
                                        "amount": "0.00",
                                        "currency_code": "USD"
                                    },
                                    "presentment_money": {
                                        "amount": "0.00",
                                        "currency_code": "USD"
                                    }
                                },
                                "total_tip_received": "0.0",
                                "admin_graphql_api_id": "gid://shopify/Order/1112981045306",
                                "line_items": [
                                    {
                                        "id": 2534122061882,
                                        "variant_id": 22393021268026,
                                        "title": "Bottles",
                                        "quantity": 5,
                                        "price": "1000.00",
                                        "sku": "12223",
                                        "variant_title": null,
                                        "vendor": "Celigo Returnly Staging",
                                        "fulfillment_service": "manual",
                                        "product_id": 2237380493370,
                                        "requires_shipping": true,
                                        "taxable": true,
                                        "gift_card": false,
                                        "name": "Bottles",
                                        "variant_inventory_management": null,
                                        "properties": [],
                                        "product_exists": true,
                                        "fulfillable_quantity": 0,
                                        "grams": 12000,
                                        "total_discount": "0.00",
                                        "fulfillment_status": "fulfilled",
                                        "price_set": {
                                            "shop_money": {
                                                "amount": "1000.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "1000.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "total_discount_set": {
                                            "shop_money": {
                                                "amount": "0.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "0.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "discount_allocations": [
                                            {
                                                "amount": "19.79",
                                                "discount_application_index": 0,
                                                "amount_set": {
                                                    "shop_money": {
                                                        "amount": "19.79",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "19.79",
                                                        "currency_code": "USD"
                                                    }
                                                }
                                            }
                                        ],
                                        "admin_graphql_api_id": "gid://shopify/LineItem/2534122061882",
                                        "tax_lines": []
                                    },
                                    {
                                        "id": 2534122094650,
                                        "variant_id": 22311199572026,
                                        "title": "demo item 990",
                                        "quantity": 6,
                                        "price": "430.00",
                                        "sku": "1070",
                                        "variant_title": null,
                                        "vendor": "Celigo Returnly Staging",
                                        "fulfillment_service": "manual",
                                        "product_id": 2224708747322,
                                        "requires_shipping": true,
                                        "taxable": true,
                                        "gift_card": false,
                                        "name": "demo item 990",
                                        "variant_inventory_management": "shopify",
                                        "properties": [],
                                        "product_exists": true,
                                        "fulfillable_quantity": 0,
                                        "grams": 0,
                                        "total_discount": "0.00",
                                        "fulfillment_status": "fulfilled",
                                        "price_set": {
                                            "shop_money": {
                                                "amount": "430.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "430.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "total_discount_set": {
                                            "shop_money": {
                                                "amount": "0.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "0.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "discount_allocations": [
                                            {
                                                "amount": "10.21",
                                                "discount_application_index": 0,
                                                "amount_set": {
                                                    "shop_money": {
                                                        "amount": "10.21",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "10.21",
                                                        "currency_code": "USD"
                                                    }
                                                }
                                            }
                                        ],
                                        "admin_graphql_api_id": "gid://shopify/LineItem/2534122094650",
                                        "tax_lines": []
                                    }
                                ],
                                "shipping_lines": [
                                    {
                                        "id": 899096838202,
                                        "title": "Custom",
                                        "price": "10.00",
                                        "code": "custom",
                                        "source": "shopify",
                                        "phone": null,
                                        "requested_fulfillment_service_id": null,
                                        "carrier_identifier": null,
                                        "discounted_price": "10.00",
                                        "price_set": {
                                            "shop_money": {
                                                "amount": "10.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "10.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "discounted_price_set": {
                                            "shop_money": {
                                                "amount": "10.00",
                                                "currency_code": "USD"
                                            },
                                            "presentment_money": {
                                                "amount": "10.00",
                                                "currency_code": "USD"
                                            }
                                        },
                                        "discount_allocations": [],
                                        "tax_lines": []
                                    }
                                ],
                                "billing_address": {
                                    "first_name": "Swatantra",
                                    "address1": "8-17-4,ameerpet",
                                    "phone": "9856321047",
                                    "city": "visakhapatnam",
                                    "zip": "531001",
                                    "province": "Andhra Pradesh",
                                    "country": "India",
                                    "last_name": "rout",
                                    "address2": "8-17-4,ameerpet",
                                    "company": "celigo labs",
                                    "latitude": null,
                                    "longitude": null,
                                    "name": "Swatantra rout",
                                    "country_code": "IN",
                                    "province_code": "AP"
                                },
                                "shipping_address": {
                                    "first_name": "Swatantra",
                                    "address1": "8-17-4,ameerpet",
                                    "phone": "9856321047",
                                    "city": "visakhapatnam",
                                    "zip": "531001",
                                    "province": "Andhra Pradesh",
                                    "country": "India",
                                    "last_name": "rout",
                                    "address2": "8-17-4,ameerpet",
                                    "company": "celigo labs",
                                    "latitude": null,
                                    "longitude": null,
                                    "name": "Swatantra rout",
                                    "country_code": "IN",
                                    "province_code": "AP"
                                },
                                "fulfillments": [
                                    {
                                        "id": 1051724775482,
                                        "order_id": 1112981045306,
                                        "status": "success",
                                        "created_at": "2019-01-01T19:08:15-12:00",
                                        "service": "manual",
                                        "updated_at": "2019-01-01T19:08:41-12:00",
                                        "tracking_company": "Other",
                                        "shipment_status": null,
                                        "location_id": 10224173114,
                                        "tracking_number": "56899877",
                                        "tracking_numbers": [
                                            "56899877"
                                        ],
                                        "tracking_url": null,
                                        "tracking_urls": [],
                                        "receipt": {},
                                        "name": "#1101.1",
                                        "admin_graphql_api_id": "gid://shopify/Fulfillment/1051724775482",
                                        "line_items": [
                                            {
                                                "id": 2534122061882,
                                                "variant_id": 22393021268026,
                                                "title": "Bottles",
                                                "quantity": 5,
                                                "price": "1000.00",
                                                "sku": "12223",
                                                "variant_title": null,
                                                "vendor": "Celigo Returnly Staging",
                                                "fulfillment_service": "manual",
                                                "product_id": 2237380493370,
                                                "requires_shipping": true,
                                                "taxable": true,
                                                "gift_card": false,
                                                "name": "Bottles",
                                                "variant_inventory_management": null,
                                                "properties": [],
                                                "product_exists": true,
                                                "fulfillable_quantity": 0,
                                                "grams": 12000,
                                                "total_discount": "0.00",
                                                "fulfillment_status": "fulfilled",
                                                "price_set": {
                                                    "shop_money": {
                                                        "amount": "1000.00",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "1000.00",
                                                        "currency_code": "USD"
                                                    }
                                                },
                                                "total_discount_set": {
                                                    "shop_money": {
                                                        "amount": "0.00",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "0.00",
                                                        "currency_code": "USD"
                                                    }
                                                },
                                                "discount_allocations": [
                                                    {
                                                        "amount": "19.79",
                                                        "discount_application_index": 0,
                                                        "amount_set": {
                                                            "shop_money": {
                                                                "amount": "19.79",
                                                                "currency_code": "USD"
                                                            },
                                                            "presentment_money": {
                                                                "amount": "19.79",
                                                                "currency_code": "USD"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "admin_graphql_api_id": "gid://shopify/LineItem/2534122061882",
                                                "tax_lines": []
                                            },
                                            {
                                                "id": 2534122094650,
                                                "variant_id": 22311199572026,
                                                "title": "demo item 990",
                                                "quantity": 6,
                                                "price": "430.00",
                                                "sku": "1070",
                                                "variant_title": null,
                                                "vendor": "Celigo Returnly Staging",
                                                "fulfillment_service": "manual",
                                                "product_id": 2224708747322,
                                                "requires_shipping": true,
                                                "taxable": true,
                                                "gift_card": false,
                                                "name": "demo item 990",
                                                "variant_inventory_management": "shopify",
                                                "properties": [],
                                                "product_exists": true,
                                                "fulfillable_quantity": 0,
                                                "grams": 0,
                                                "total_discount": "0.00",
                                                "fulfillment_status": "fulfilled",
                                                "price_set": {
                                                    "shop_money": {
                                                        "amount": "430.00",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "430.00",
                                                        "currency_code": "USD"
                                                    }
                                                },
                                                "total_discount_set": {
                                                    "shop_money": {
                                                        "amount": "0.00",
                                                        "currency_code": "USD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": "0.00",
                                                        "currency_code": "USD"
                                                    }
                                                },
                                                "discount_allocations": [
                                                    {
                                                        "amount": "10.21",
                                                        "discount_application_index": 0,
                                                        "amount_set": {
                                                            "shop_money": {
                                                                "amount": "10.21",
                                                                "currency_code": "USD"
                                                            },
                                                            "presentment_money": {
                                                                "amount": "10.21",
                                                                "currency_code": "USD"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "admin_graphql_api_id": "gid://shopify/LineItem/2534122094650",
                                                "tax_lines": []
                                            }
                                        ]
                                    }
                                ],
                                "refunds": [],
                                "customer": {
                                    "id": 1355800510522,
                                    "email": "Swatantra@example.com",
                                    "accepts_marketing": false,
                                    "created_at": "2019-01-01T04:50:56-12:00",
                                    "updated_at": "2019-01-01T05:00:00-12:00",
                                    "first_name": "Swatantra",
                                    "last_name": "rout",
                                    "state": "disabled",
                                    "note": "",
                                    "verified_email": true,
                                    "multipass_identifier": null,
                                    "tax_exempt": false,
                                    "phone": "+919845632107",
                                    "tags": "",
                                    "currency": "USD",
                                    "admin_graphql_api_id": "gid://shopify/Customer/1355800510522",
                                    "default_address": {
                                        "id": 1459969196090,
                                        "customer_id": 1355800510522,
                                        "first_name": "Swatantra",
                                        "last_name": "rout",
                                        "company": "celigo labs",
                                        "address1": "8-17-4,ameerpet",
                                        "address2": "8-17-4,ameerpet",
                                        "city": "visakhapatnam",
                                        "province": "Andhra Pradesh",
                                        "country": "India",
                                        "zip": "531001",
                                        "phone": "9856321047",
                                        "name": "Swatantra rout",
                                        "province_code": "AP",
                                        "country_code": "IN",
                                        "country_name": "India",
                                        "default": true
                                    }
                                }
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anorder",
                                "name": "Creates an order",
                                "url": "/orders.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "order.line_items[*].quantity"
                                ],
                                "parameters": [
                                    {
                                        "id": "Id",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreExisting": true
                            },
                            {
                                "id": "updates_anorder",
                                "name": "Updates an order",
                                "url": "/orders/:_orderId.json",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreMissing": true
                            },
                            {
                                "id": "createsorupdates_anorder",
                                "name": "Create or Update order",
                                "url": [
                                    "/orders/:_orderId.json",
                                    "/orders.json"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "order.line_items[*].quantity"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_anorder",
                                "name": "Deletes an order",
                                "url": "/orders/:_orderId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "close_anorder",
                                "url": "/orders/:_orderId/close.json",
                                "name": "Closes an order",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "reopen_anorder",
                                "url": "/orders/:_orderId/open.json",
                                "name": "Re-opens a closed order",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "cancels_anorder",
                                "url": "/orders/:_orderId/cancel.json",
                                "name": "Cancels an order",
                                "method": "POST",
                                "requiredMappings": [
                                    "currency"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "sampleData": {
                                    "note": "Broke in shipping",
                                    "amount": "109.00",
                                    "currency": "USD",
                                    "refund": {
                                        "restock": true,
                                        "note": "Broke in shipping",
                                        "shipping": {
                                            "full_refund": true
                                        },
                                        "refund_line_items": [
                                            {
                                                "line_item_id": 466157049,
                                                "quantity": 1
                                            }
                                        ],
                                        "transactions": [
                                            {
                                                "parent_id": 1072844670,
                                                "amount": "10.00",
                                                "kind": "refund",
                                                "gateway": "bogus"
                                            },
                                            {
                                                "parent_id": 1072844671,
                                                "amount": "100.00",
                                                "kind": "refund",
                                                "gateway": "gift_card"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "risks",
                        "name": "Orders : Order Risk",
                        "sampleData": {
                            "risk": {
                                "order_id": 450789469,
                                "checkout_id": 901414060,
                                "source": "External",
                                "score": "1.0",
                                "recommendation": "cancel",
                                "display": true,
                                "cause_cancel": true,
                                "message": "This order came from an anonymous proxy",
                                "merchant_message": "This order came from an anonymous proxy"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anorderriskforanorder",
                                "name": "Creates an order risk for an order",
                                "url": "/orders/:_orderId/risks.json",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "risk.display",
                                    "risk.cause_cancel",
                                    "risk.message",
                                    "risk.recommendation",
                                    "risk.score",
                                    "risk.source"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "riskId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "updates_anorderriskforanorder",
                                "name": "Updates an order risk",
                                "url": "/orders/:_orderId/risks/:_riskId.json",
                                "method": "PUT",
                                "requiredMappings": [
                                    "risk.display",
                                    "risk.cause_cancel",
                                    "risk.message",
                                    "risk.recommendation",
                                    "risk.score",
                                    "risk.source"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "riskId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreMissing": true
                            },
                            {
                                "id": "createsorupdates_anorderriskforanorder",
                                "name": "Create or Update an order risk",
                                "url": [
                                    "/orders/:_orderId/risks/:_riskId.json",
                                    "/orders/:_orderId/risks.json"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "risk.display",
                                    "risk.cause_cancel",
                                    "risk.message",
                                    "risk.recommendation",
                                    "risk.score",
                                    "risk.source"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "riskId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "deletes_anorderriskforanorder",
                                "name": "Deletes an order risk for an order",
                                "url": "/orders/:_orderId/risks/:_riskId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "riskId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "product",
                        "name": "Products : Product",
                        "sampleData": {
                            "product": {
                                "title": "Burton Custom Freestyle 151",
                                "body_html": "<strong>Good snowboard!</strong>",
                                "vendor": "Burton",
                                "product_type": "Snowboard",
                                "created_at": "2018-12-10T17:55:55+05:30",
                                "handle": "burton-custom-freestyle-151",
                                "updated_at": "2018-12-10T17:55:56+05:30",
                                "published_at": "2018-12-10T17:55:55+05:30",
                                "template_suffix": null,
                                "tags": "Barnes & Noble, John's Fav",
                                "published_scope": "web",
                                "admin_graphql_api_id": "gid://shopify/Product/2423828840566",
                                "variants": [
                                    {
                                        "id": 21568456392822,
                                        "product_id": 2423828840566,
                                        "title": "Default Title",
                                        "price": "0.00",
                                        "sku": "title",
                                        "position": 1,
                                        "inventory_policy": "deny",
                                        "compare_at_price": null,
                                        "fulfillment_service": "manual",
                                        "inventory_management": null,
                                        "option1": "Default Title",
                                        "option2": null,
                                        "option3": null,
                                        "created_at": "2018-12-10T17:55:56+05:30",
                                        "updated_at": "2018-12-10T17:55:56+05:30",
                                        "taxable": true,
                                        "barcode": null,
                                        "grams": 0,
                                        "image_id": null,
                                        "weight": 0,
                                        "weight_unit": "kg",
                                        "inventory_item_id": 22099451019382,
                                        "requires_shipping": true,
                                        "admin_graphql_api_id": "gid://shopify/ProductVariant/21568456392822"
                                    }
                                ],
                                "options": [
                                    {
                                        "id": 3330944401526,
                                        "product_id": 2423828840566,
                                        "name": "Title",
                                        "position": 1,
                                        "values": [
                                            "Default Title"
                                        ]
                                    }
                                ],
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ],
                                "images": [
                                    {
                                        "attachment": "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n",
                                        "src": "http://example.com/rails_logo.gif",
                                        "id": 850703190,
                                        "position": 2
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "create_product",
                                "name": "Creates a new product",
                                "url": "/products.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "product.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreExisting": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/products.json",
                                        "extract": "products[0].id",
                                        "id": "retrieves_alistofproducts",
                                        "sampleDataWrapper": "product"
                                    }
                                }
                            },
                            {
                                "id": "update_product",
                                "name": "Updates a product",
                                "url": "/products/:_productId.json",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreMissing": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/products.json",
                                        "extract": "products[0].id",
                                        "id": "retrieves_alistofproducts",
                                        "sampleDataWrapper": "product"
                                    }
                                }
                            },
                            {
                                "id": "createorupdate_product",
                                "name": "Create or Update product",
                                "url": [
                                    "/products/:_productId.json",
                                    "/products.json"
                                ],
                                "requiredMappings": [
                                    "product.title"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/products.json",
                                        "extract": "products[0].id",
                                        "id": "retrieves_alistofproducts",
                                        "sampleDataWrapper": "product"
                                    }
                                }
                            },
                            {
                                "id": "deletes_aproduct",
                                "name": "Deletes a product",
                                "url": "/products/:_productId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/products.json",
                                        "extract": "products[0].id",
                                        "id": "retrieves_alistofproducts",
                                        "sampleDataWrapper": "product"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "productvariant",
                        "name": "Products : Product Variant",
                        "sampleData": {
                            "variant": {
                                "product_id": 632910392,
                                "title": "Pink",
                                "price": "199.00",
                                "sku": "IPOD2008PINK",
                                "position": 1,
                                "inventory_policy": "continue",
                                "compare_at_price": null,
                                "fulfillment_service": "manual",
                                "inventory_management": "shopify",
                                "option1": "Pink",
                                "option2": null,
                                "option3": null,
                                "created_at": "2018-11-27T13:55:06-05:00",
                                "updated_at": "2018-11-27T13:55:06-05:00",
                                "taxable": true,
                                "barcode": "1234_pink",
                                "grams": 567,
                                "image_id": 562641783,
                                "weight": 1.25,
                                "weight_unit": "lb",
                                "inventory_item_id": 808950810,
                                "tax_code": "DA040000",
                                "requires_shipping": true,
                                "admin_graphql_api_id": "gid://shopify/ProductVariant/808950810",
                                "presentment_prices": [
                                    {
                                        "price": {
                                            "currency_code": "USD",
                                            "amount": "199.00"
                                        },
                                        "compare_at_price": null
                                    }
                                ],
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "namespace": "global",
                                        "type": ""
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anewproductvariant",
                                "name": "Creates a new product variant",
                                "url": "/products/:_productId/variants.json",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "variantId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreExisting": true
                            },
                            {
                                "id": "update_aproductvariant",
                                "name": "Modify an existing product variant",
                                "url": "/variants/:_variantId.json",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "variantId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ],
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "variant": {
                                        "id": 808950810,
                                        "option1": "Not Pink",
                                        "price": "99.00",
                                        "image_id": 562641783,
                                        "metafields": [
                                            {
                                                "key": "new",
                                                "value": "newvalue",
                                                "type": "",
                                                "namespace": "global"
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "id": "createsorupdate_anewproductvariant",
                                "name": "Create or Update product",
                                "url": [
                                    "/products/:_productId/variants/:_variantId.json",
                                    "/products/:_productId/variants.json"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "variantId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "deletes_anewproductvariant",
                                "name": "Remove a product variant from the database",
                                "url": "/products/:_productId/variants/:_variantId.json",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "variantId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "refund",
                        "name": "Orders : Refund",
                        "operations": [
                            {
                                "id": "create_refund",
                                "name": "Creates a refund",
                                "url": "/orders/:_orderId/refunds.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "refund.refund_line_items[*].line_item_id",
                                    "refund.refund_line_items[*].location_id",
                                    "refund.currency"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "sampleData": {
                                    "refund": {
                                        "currency": "USD",
                                        "notify": true,
                                        "note": "wrong size",
                                        "shipping": {
                                            "full_refund": true,
                                            "amount": "2"
                                        },
                                        "refund_duties": [
                                            {
                                                "duty_id": 1,
                                                "refund_type": "FULL"
                                            }
                                        ],
                                        "refund_line_items": [
                                            {
                                                "id": 209341123,
                                                "line_item": {},
                                                "line_item_id": 128323456,
                                                "quantity": 2,
                                                "location_id": 40642626,
                                                "restock_type": "return",
                                                "subtotal": 10.99,
                                                "total_tax": 2.67,
                                                "subtotal_set": {
                                                    "shop_money": {
                                                        "amount": 10.99,
                                                        "currency_code": "CAD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": 8.95,
                                                        "currency_code": "USD"
                                                    }
                                                },
                                                "total_tax_set": {
                                                    "shop_money": {
                                                        "amount": 1.67,
                                                        "currency_code": "CAD"
                                                    },
                                                    "presentment_money": {
                                                        "amount": 1.32,
                                                        "currency_code": "USD"
                                                    }
                                                }
                                            }
                                        ],
                                        "transactions": [
                                            {
                                                "parent_id": 801038806,
                                                "amount": 41.94,
                                                "kind": "refund",
                                                "gateway": "bogus",
                                                "order_id": 450789469,
                                                "status": "success",
                                                "test": false,
                                                "authorization": "authorization-key",
                                                "location_id": null,
                                                "user_id": null,
                                                "currency": "USD"
                                            }
                                        ]
                                    }
                                }
                            },
                            {
                                "id": "calculates_refund",
                                "name": "Calculates a refund",
                                "url": "/orders/:_orderId/refunds/calculate.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "refund.currency"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order Id",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "sampleData": {
                                    "refund": {
                                        "currency": "USD",
                                        "shipping": {
                                            "full_refund": true,
                                            "amount": 2
                                        },
                                        "refund_line_items": [
                                            {
                                                "line_item_id": 518995019,
                                                "quantity": 1,
                                                "restock_type": "no_restock"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "transaction",
                        "name": "Orders : Transaction",
                        "sampleData": {
                            "transaction": {
                                "currency": "USD",
                                "amount": "10.00",
                                "kind": "capture",
                                "parent_id": 389404469,
                                "authorization": "authorization-key",
                                "authorization_expires_at": null,
                                "extended_authorization_attributes": {
                                    "standard_authorization_expires_at": "2020-10-08T00:00:00-04:00",
                                    "extended_authorization_expires_at": "2020-10-30T00:00:00-04:00"
                                }
                            }
                        },
                        "operations": [
                            {
                                "id": "create_transactions",
                                "name": "Creates a transaction for an order",
                                "url": "/orders/:_orderId/transactions.json",
                                "method": "POST",
                                "requiredMappings": [
                                    "transaction.kind",
                                    "transaction.currency"
                                ],
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "in": "path",
                                        "name": "Order Id",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "article",
                        "name": "Online Store : Article",
                        "sampleData": {
                            "article": {
                                "title": "My new Article title",
                                "author": "John Smith",
                                "tags": "This Post, Has Been Tagged",
                                "body_html": "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>",
                                "published_at": "Thu Mar 24 15:45:47 UTC 2011",
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ],
                                "image": "",
                                "created_at": "2008-07-31T20:00:00-04:00",
                                "user_id": null,
                                "updated_at": "2017-09-29T07:49:11-04:00",
                                "summary_html": null,
                                "template_suffix": null,
                                "handle": "get-on-the-train-now"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anarticleforablog",
                                "url": "/blogs/:_blogsId/articles.json",
                                "name": "Creates an article for a blog",
                                "method": "POST",
                                "requiredMappings": [
                                    "article.title"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blogs ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "name": "Article ID",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_anarticle",
                                "url": "/blogs/:_blogsId/articles/:_articlesId.json",
                                "name": "Updates an article",
                                "method": "PUT",
                                "requiredMappings": [
                                    "article.title"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blogs ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "articlesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdates_anarticle",
                                "url": [
                                    "/blogs/:_blogsId/articles/:_articlesId.json",
                                    "/blogs/:_blogsId/articles.json"
                                ],
                                "name": "Create or Update Article",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "article.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blogs ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "articlesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_anarticle",
                                "url": "/blogs/:_blogsId/articles/:_articlesId.json",
                                "name": "Deletes an article",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "name": "Blogs ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "articlesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "assets",
                        "name": "Online Store : Assets",
                        "sampleData": {
                            "asset": {
                                "key": "templates/index.liquid",
                                "value": "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>",
                                "src": "http://apple.com/new_bg.gif",
                                "attachment": "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n",
                                "source_key": "layout/theme.liquid"
                            }
                        },
                        "operations": [
                            {
                                "id": "createsorupdates_anasset",
                                "url": "/themes/:_themesId/assets.json",
                                "name": "Creates or updates an asset for a theme",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "themesId",
                                        "name": "Theme ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_anasset",
                                "url": "/themes/:_themesId/assets.json?asset[key]=:_key",
                                "name": "Deletes an asset from a theme",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "themesId",
                                        "name": "Theme ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "key",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blogs",
                        "name": "Online Store : Blogs",
                        "sampleData": {
                            "blog": {
                                "id": 241253187,
                                "handle": "apple-blog",
                                "title": "Mah Blog",
                                "updated_at": "2006-02-01T19:00:00-05:00",
                                "commentable": "no",
                                "feedburner": null,
                                "feedburner_location": null,
                                "created_at": "2017-01-05T15:36:16-05:00",
                                "template_suffix": null,
                                "tags": "Announcing, Mystery",
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "create_anewblog",
                                "url": "/blogs.json",
                                "name": "Create a new blog",
                                "method": "POST",
                                "requiredMappings": [
                                    "blog.title"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_ablog",
                                "url": "/blogs/:_blogsId.json",
                                "name": "Update a blog",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_ablog",
                                "url": [
                                    "/blogs/:_blogsId.json",
                                    "/blogs.json"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "blog.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_ablog",
                                "url": "/blogs/:_blogsId.json",
                                "name": "Delete a blog",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "blogsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "collects",
                        "name": "Products : Collects",
                        "sampleData": {
                            "collect": {
                                "product_id": 921728736,
                                "collection_id": 841564295
                            }
                        },
                        "operations": [
                            {
                                "id": "adds_aproducttoacustomcollection",
                                "url": "/collects.json",
                                "name": "Adds a product to a custom collection",
                                "method": "POST",
                                "requiredMappings": [
                                    "collect.product_id",
                                    "collect.collection_id"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/collects.json",
                                        "id": "retrieves_alistofcollects",
                                        "extract": "collects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "delete_aproducttoacustomcollection",
                                "url": "/collects/:_collectsId.json",
                                "name": "Removes a product from a collection",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "collectsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "comments",
                        "name": "Online Store : Comments",
                        "sampleData": {
                            "comment": {
                                "id": 118373535,
                                "body": "You can even update through a web service.",
                                "author": "Your new name",
                                "email": "your@updated-email.com",
                                "published_at": "2017-01-05T20:37:21.046Z",
                                "ip": "107.20.160.121",
                                "blog_id": 241253187,
                                "article_id": 134645308
                            }
                        },
                        "operations": [
                            {
                                "id": "create_comment",
                                "url": "/comments.json",
                                "name": "Creates a comment for an article",
                                "method": "POST",
                                "requiredMappings": [
                                    "comment.email",
                                    "comment.author",
                                    "comment.body"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_comment",
                                "url": "/comments/:_commentsId.json",
                                "name": "Updates a comment of an article",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "commentsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_comment",
                                "url": [
                                    "/comments/:_commentsId.json",
                                    "/comments.json"
                                ],
                                "name": "Create or Update comment",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "comment.email",
                                    "comment.author",
                                    "comment.body"
                                ],
                                "parameters": [
                                    {
                                        "id": "commentsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "marks_acommentasspam",
                                "url": "/comments/:_commentsId/spam.json",
                                "name": "Mark a comment as spam",
                                "method": "POST"
                            },
                            {
                                "id": "marks_acommentasnotspam",
                                "url": "/comments/:_commentsId/not_spam.json",
                                "name": "Mark a comment as not spam",
                                "method": "POST"
                            },
                            {
                                "id": "approve_acomment",
                                "url": "/comments/:_commentsId/approve.json",
                                "name": "Approve a comment",
                                "method": "POST"
                            },
                            {
                                "id": "remove_acomment",
                                "url": "/comments/:_commentsId/remove.json",
                                "name": "Remove a comment",
                                "method": "POST"
                            },
                            {
                                "id": "restore_acomment",
                                "url": "/comments/:_commentsId/restore.json",
                                "name": "Restores a previously removed comment",
                                "method": "POST"
                            }
                        ]
                    },
                    {
                        "id": "countries",
                        "name": "Store properties : Country",
                        "sampleData": {
                            "country": {
                                "id": 980881737,
                                "name": "France",
                                "code": "FR",
                                "provinces": [
                                    {
                                        "code": "ON",
                                        "country_id": 879921427,
                                        "id": 205434194,
                                        "name": "Ontario"
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_acountry",
                                "url": "/countries.json",
                                "name": "Creates a country",
                                "method": "POST",
                                "requiredMappings": [
                                    "country.code"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_acountry",
                                "url": "/countries/:_countriesId.json",
                                "name": "Updates an existing country",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "countriesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdates_acountry",
                                "url": [
                                    "/countries/:_countriesId.json",
                                    "/countries.json"
                                ],
                                "name": "Create or Update country",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "country.code"
                                ],
                                "parameters": [
                                    {
                                        "id": "countriesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_acountry",
                                "url": "/countries/:_countriesId.json",
                                "name": "Remove a Country from the database",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "countriesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "custom_collections",
                        "name": "Products : CustomCollection",
                        "sampleData": {
                            "custom_collection": {
                                "id": 841564295,
                                "title": "Macbooks",
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ]
                            },
                            "image": "",
                            "collects": [
                                {
                                    "product_id": 921728736,
                                    "sort_value": "0000000002",
                                    "id": 841564295,
                                    "position": 1
                                }
                            ],
                            "published": false,
                            "handle": "ipods",
                            "title": "IPods",
                            "updated_at": "2017-07-24T19:16:12-04:00",
                            "body_html": "<p>The best selling ipod ever</p>",
                            "published_at": "2008-02-01T19:00:00-05:00",
                            "sort_order": "manual",
                            "template_suffix": null,
                            "published_scope": "global"
                        },
                        "operations": [
                            {
                                "id": "creates_acustomcollection",
                                "url": "/custom_collections.json",
                                "name": "Creates a custom collection",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "custom_collection.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_acustomcollection",
                                "url": "/custom_collections/:_custom_collectionsId.json",
                                "name": "Updates an existing custom collection",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "custom_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdates_acustomcollection",
                                "url": [
                                    "/custom_collections/:_custom_collectionsId.json",
                                    "/custom_collections.json"
                                ],
                                "name": "Create or Update custom collection",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "custom_collection.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "custom_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_acustomcollection",
                                "url": "/custom_collections/:_custom_collectionsId.json",
                                "name": "Deletes a custom collection",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "custom_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "customer_saved_searches",
                        "name": "Customers : CustomerSavedSearch",
                        "sampleData": {
                            "customer_saved_search": {
                                "id": 1068136102,
                                "name": "Spent more than $50 and after 2013",
                                "created_at": "2017-01-05T15:37:29-05:00",
                                "updated_at": "2017-01-05T15:37:29-05:00",
                                "query": "total_spent:>50 order_date:>=2013-01-01"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_acustomersavedsearch",
                                "url": "/customer_saved_searches.json",
                                "name": "Creates a customer saved search",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "customer_saved_search.name"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_acustomersavedsearch",
                                "url": "/customer_saved_searches/:_customer_saved_searchesId.json",
                                "name": "Updates a customer saved search",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "customer_saved_searchesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_acustomersavedsearch",
                                "url": [
                                    "/customer_saved_searches/:_customer_saved_searchesId.json",
                                    "/customer_saved_searches.json"
                                ],
                                "name": "Create or Update CustomerSavedSearch",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "customer_saved_search.name"
                                ],
                                "parameters": [
                                    {
                                        "id": "customer_saved_searchesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_acustomersavedsearch",
                                "url": "/customer_saved_searches/:_customer_saved_searchesId.json",
                                "name": "Deletes a customer saved search",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "customer_saved_searchesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "discount_codes",
                        "name": "Discounts : DiscountCode",
                        "sampleData": {
                            "discount_code": {
                                "code": "SUMMERSALE10OFF"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_discountcode",
                                "url": "/price_rules/:_price_rulesId/discount_codes.json",
                                "name": "Creates a discount code",
                                "method": "POST",
                                "requiredMappings": [
                                    "discount_code.code"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_discountcode",
                                "url": "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
                                "name": "Updates an existing discount code",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "discount_codesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_discountcode",
                                "url": [
                                    "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
                                    "/price_rules/:_price_rulesId/discount_codes.json"
                                ],
                                "name": "Create or Update discount code",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "discount_code.code"
                                ],
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "discount_codesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_adiscountcode",
                                "url": "/price_rules/:_price_rulesId/discount_codes/:_discount_codesId.json",
                                "name": "Deletes a discount code",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "discount_codesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "creates_anewdiscountcodecreationjob",
                                "url": "/price_rules/:_price_rulesId/batch.json",
                                "name": "Create a new discount code creation job",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "name": "Price Rule ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "sampleData": {
                                    "discount_codes": [
                                        {
                                            "code": "SUMMER1"
                                        },
                                        {
                                            "code": "SUMMER2"
                                        },
                                        {
                                            "code": "SUMMER3"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "id": "draft_orders",
                        "name": "Orders : DraftOrder",
                        "sampleData": {
                            "draft_order": {
                                "line_items": [
                                    {
                                        "title": "Custom Tee",
                                        "price": "20.00",
                                        "quantity": 2,
                                        "variant_id": 447654529,
                                        "applied_discount": {
                                            "description": "Custom discount",
                                            "value_type": "fixed_amount",
                                            "value": "10.0",
                                            "amount": "10.0",
                                            "title": "Custom"
                                        }
                                    }
                                ],
                                "applied_discount": {
                                    "description": "Custom discount",
                                    "value_type": "fixed_amount",
                                    "value": "10.0",
                                    "amount": "10.00",
                                    "title": "Custom"
                                },
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ],
                                "customer": {
                                    "id": 207119551
                                },
                                "use_customer_default_address": true,
                                "note": "Customer contacted us about a custom engraving on this iPod"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_adraftorder",
                                "url": "/draft_orders.json",
                                "name": "Creates a draft order",
                                "method": "POST",
                                "requiredMappings": [
                                    "draft_order.line_items[*].quantity",
                                    "draft_order.line_items[*].variant_id"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_adraftorder",
                                "url": "/draft_orders/:_draft_ordersId.json",
                                "name": "Updates a draft order",
                                "method": "PUT",
                                "requiredMappings": [
                                    "draft_order.note"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createsorupdate_adraftorder",
                                "url": [
                                    "/draft_orders/:_draft_ordersId.json",
                                    "/draft_orders.json"
                                ],
                                "name": "Create or Update draft order",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "draft_order.line_items[*].quantity",
                                    "draft_order.line_items[*].variant_id"
                                ],
                                "parameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_adraftorder",
                                "url": "/draft_orders/:_draft_ordersId.json",
                                "name": "Deletes a draft order",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createsaninvoice_fordraftorder",
                                "url": "/draft_orders/:_draft_ordersId/send_invoice.json",
                                "name": "Sends an invoice for the draft order",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "draft_order_invoice": {
                                        "to": "first@example.com",
                                        "from": "steve@apple.com",
                                        "bcc": [
                                            "steve@apple.com"
                                        ],
                                        "subject": "Apple Computer Invoice",
                                        "custom_message": "Thank you for ordering!"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "name": "Draft Order ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "completes_adraftorder",
                                "url": "/draft_orders/:_draft_ordersId/complete.json",
                                "name": "Completes a draft order",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "draft_ordersId",
                                        "name": "Draft Order ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_event",
                        "name": "Shipping and fulfillment : FulfillmentEvent",
                        "sampleData": {
                            "event": {
                                "status": "in_transit"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_afulfillmentevent",
                                "url": "/orders/:_orderId/fulfillments/:_fulfillmentId/events.json",
                                "name": "Creates a fulfillment event",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order ID",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "fulfillmentId",
                                        "name": "Fulfilment ID",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_afulfillmentevent",
                                "url": "/orders/:_orderId/fulfillments/:_fulfillmentId/events/:_eventsId.json",
                                "name": "Deletes a fulfillment event",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "orderId",
                                        "name": "Order ID",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "fulfillmentId",
                                        "name": "Fulfilment ID",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "eventsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_services",
                        "name": "Shipping and fulfillment : FulfillmentService",
                        "sampleData": {
                            "fulfillment_service": {
                                "name": "MarsFulfillment",
                                "callback_url": "http://google.com",
                                "inventory_management": true,
                                "tracking_support": true,
                                "requires_shipping_method": true,
                                "format": "json"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_fulfillment_services",
                                "url": "/fulfillment_services.json",
                                "name": "Create a FulfillmentService",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_fulfillment_services",
                                "url": "/fulfillment_services/:_fulfillment_servicesId.json",
                                "name": "Modify an existing FulfillmentService",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_servicesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_fulfillment_services",
                                "url": [
                                    "/fulfillment_services/:_fulfillment_servicesId.json",
                                    "/fulfillment_services.json"
                                ],
                                "name": "Create or Update FulfillmentService",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "fulfillment_servicesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_fulfillment_services",
                                "url": "/fulfillment_services/:_fulfillment_servicesId.json",
                                "name": "Remove a FulfillmentService from the database",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_servicesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "marketing_events",
                        "name": "MarketingEvent",
                        "sampleData": {
                            "marketing_event": {
                                "id": 998730532,
                                "remote_id": "1000:2000",
                                "started_at": "2017-02-02T00:00 +00:00",
                                "ended_at": "2017-02-03T00:00 +00:00",
                                "scheduled_to_end_at": "2017-02-04T00:00 +00:00",
                                "budget": "11.1",
                                "budget_type": "daily",
                                "currency": "CAD",
                                "utm_campaign": "other",
                                "utm_source": "other",
                                "utm_medium": "other",
                                "event_type": "ad",
                                "referring_domain": "instagram.com"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_amarketingevent",
                                "url": "/marketing_events.json",
                                "name": "Creates a marketing event",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "marketing_event.marketing_channel",
                                    "marketing_event.paid",
                                    "marketing_event.referring_domain",
                                    "marketing_event.started_at",
                                    "marketing_event.utm_campaign",
                                    "marketing_event.utm_medium",
                                    "marketing_event.utm_source",
                                    "marketing_event.event_type"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_amarketingevent",
                                "url": "/marketing_events/:_marketing_eventsId.json",
                                "name": "Updates a marketing event",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "marketing_eventsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createsorupdate_amarketingevent",
                                "url": [
                                    "/marketing_events/:_marketing_eventsId.json",
                                    "/marketing_events.json"
                                ],
                                "name": "Create or Update marketing event",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "marketing_event.marketing_channel",
                                    "marketing_event.paid",
                                    "marketing_event.referring_domain",
                                    "marketing_event.started_at",
                                    "marketing_event.utm_campaign",
                                    "marketing_event.utm_medium",
                                    "marketing_event.utm_source",
                                    "marketing_event.event_type"
                                ],
                                "parameters": [
                                    {
                                        "id": "marketing_eventsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_amarketingevent",
                                "url": "/marketing_events/:_marketing_eventsId.json",
                                "name": "Deletes a marketing event",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "marketing_eventsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "creates_amarketingengagementsonmarketingevent",
                                "url": "/marketing_events/:_marketing_eventsId/engagements.json",
                                "name": "Creates marketing engagements on marketing event",
                                "method": "POST",
                                "requiredMappings": [
                                    "engagements[*].occurred_on",
                                    "engagements[*].ad_spend"
                                ],
                                "sampleData": {
                                    "engagements": [
                                        {
                                            "occurred_on": "2017-01-15",
                                            "views_count": 0,
                                            "clicks_count": 0,
                                            "favorites_count": 0,
                                            "ad_spend": 10,
                                            "is_cumulative": true
                                        },
                                        {
                                            "occurred_on": "2017-01-16",
                                            "views_count": 100,
                                            "clicks_count": 50,
                                            "is_cumulative": true
                                        },
                                        {
                                            "occurred_on": "2017-01-17",
                                            "views_count": 200,
                                            "clicks_count": 100,
                                            "is_cumulative": true
                                        }
                                    ]
                                },
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "marketing_eventsId",
                                        "name": "Marketing Event",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "metafields",
                        "name": "Metafield",
                        "sampleData": {
                            "metafield": {
                                "id": 721389482,
                                "namespace": "inventory",
                                "key": "warehouse",
                                "value": 25,
                                "type": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_metafield",
                                "url": "/metafields.json",
                                "name": "Creates a new metafield for a resource",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_metafield",
                                "url": "/metafields/:_metafieldsId.json",
                                "name": "Updates a metafield",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_metafield",
                                "url": [
                                    "/metafields/:_metafieldsId.json",
                                    "/metafields.json"
                                ],
                                "name": "Create or Update metafield",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_metafield",
                                "url": "/metafields/:_metafieldsId.json",
                                "name": "Deletes a metafield by its ID",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "create_a_new_metafield_for_a_product",
                                "url": "/products/:_productId/metafields.json",
                                "name": "Create a new metafield for a product",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_a_metafield_for_a_product",
                                "url": "/products/:_productId/metafields/:_metafieldsId.json",
                                "name": "Update a metafield for a product",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_metafield_for_a_product",
                                "url": [
                                    "/products/:_productId/metafields/:_metafieldsId.json",
                                    "/products/:_productId/metafields.json"
                                ],
                                "name": "Create or Update metafield for a product",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_metafield_for_a_product",
                                "url": "/products/:_productId/metafields/:_metafieldsId.json",
                                "name": "Delete a metafield for a product",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "metafieldsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pages",
                        "name": "Online Store : Page",
                        "sampleData": {
                            "page": {
                                "id": 131092082,
                                "title": "Warranty information",
                                "published": false,
                                "body_html": "<p>Okay, maybe we will give you a warranty.</p>",
                                "metafields": [
                                    {
                                        "key": "new",
                                        "value": "newvalue",
                                        "type": "",
                                        "namespace": "global"
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "create_page",
                                "url": "/pages.json",
                                "name": "Create a new page",
                                "method": "POST",
                                "requiredMappings": [
                                    "page.title"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_page",
                                "url": "/pages/:_pagesId.json",
                                "name": "Updates a page",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "pagesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_page",
                                "url": [
                                    "/pages/:_pagesId.json",
                                    "/pages.json"
                                ],
                                "name": "Create or Update page",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "page.title"
                                ],
                                "parameters": [
                                    {
                                        "id": "pagesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "deletes_page",
                                "url": "/pages/:_pagesId.json",
                                "name": "Deletes a page",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "pagesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "price_rules",
                        "name": "Discounts : PriceRule",
                        "sampleData": {
                            "price_rule": {
                                "title": "FREESHIPPING",
                                "target_type": "shipping_line",
                                "target_selection": "all",
                                "allocation_method": "each",
                                "value_type": "percentage",
                                "value": "-100.0",
                                "usage_limit": 20,
                                "customer_selection": "all",
                                "prerequisite_subtotal_range": {
                                    "greater_than_or_equal_to": "50.0"
                                },
                                "prerequisite_saved_search_ids": [],
                                "entitled_collection_ids": [
                                    841564295
                                ],
                                "ends_at": "2017-09-18T16:23:01-04:00",
                                "created_at": "2017-09-12T16:23:01-04:00",
                                "updated_at": "2017-09-12T16:23:01-04:00",
                                "entitled_product_ids": [],
                                "entitled_variant_ids": [],
                                "entitled_country_ids": [],
                                "prerequisite_shipping_price_range": null,
                                "starts_at": "2017-01-19T17:59:10Z",
                                "prerequisite_to_entitlement_purchase": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_apricerule",
                                "url": "/price_rules.json",
                                "name": "Creates a price rule",
                                "method": "POST",
                                "requiredMappings": [
                                    "price_rule.title",
                                    "price_rule.allocation_method",
                                    "price_rule.value_type",
                                    "price_rule.target_type",
                                    "price_rule.target_selection",
                                    "price_rule.customer_selection",
                                    "price_rule.value",
                                    "price_rule.starts_at"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_apricerule",
                                "url": "/price_rules/:_price_rulesId.json",
                                "name": "Updates an existing a price rule",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_apricerule",
                                "url": [
                                    "/price_rules/:_price_rulesId.json",
                                    "/price_rules.json"
                                ],
                                "name": "Create or Update price rule",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "price_rule.title",
                                    "price_rule.allocation_method",
                                    "price_rule.value_type",
                                    "price_rule.target_type",
                                    "price_rule.target_selection",
                                    "price_rule.customer_selection",
                                    "price_rule.value",
                                    "price_rule.starts_at"
                                ],
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_apricerule",
                                "url": "/price_rules/:_price_rulesId.json",
                                "name": "Deletes a price rule",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "price_rulesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "product_listings",
                        "name": "Sales channel : ProductListing",
                        "sampleData": {
                            "product_listing": {
                                "product_id": 921728736
                            }
                        },
                        "operations": [
                            {
                                "id": "create_productlisting",
                                "url": "/product_listings/:_productId.json",
                                "name": "Create a product listing to publish a product to your app",
                                "method": "PUT",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_productlisting",
                                "url": "/product_listings/:_productId.json",
                                "name": "Delete a product listing to unpublish a product from your app",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "provinces",
                        "name": "Store properties : Province",
                        "sampleData": {
                            "province": {
                                "id": 224293623,
                                "country_id": 224293623,
                                "name": "Alberta",
                                "shipping_zone_id": 2038345,
                                "code": 0.15
                            }
                        },
                        "operations": [
                            {
                                "id": "updates_an_existing_province_for_a_country",
                                "url": "/countries/:_countriesId/provinces/:_provincesId.json",
                                "name": "Updates an existing province for a country",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "countriesId",
                                        "name": "Country ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "provincesId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "redirects",
                        "name": "Online Store : Redirect",
                        "sampleData": {
                            "redirect": {
                                "id": 950115854,
                                "path": "/ipod",
                                "target": "/pages/itunes"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_aredirect",
                                "url": "/redirects.json",
                                "name": "Creates a redirect",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "redirect.path",
                                    "redirect.target"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/redirects.json",
                                        "id": "retrieves_alistofurlredirects",
                                        "extract": "redirects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "update_aredirect",
                                "url": "/redirects/:_redirectsId.json",
                                "name": "Updates an existing redirect",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "redirectsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/redirects.json",
                                        "id": "retrieves_alistofurlredirects",
                                        "extract": "redirects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "createorupdate_aredirect",
                                "url": [
                                    "/redirects/:_redirectsId.json",
                                    "/redirects.json"
                                ],
                                "name": "Create or Update redirect",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "redirect.path",
                                    "redirect.target"
                                ],
                                "parameters": [
                                    {
                                        "id": "redirectsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/redirects.json",
                                        "id": "retrieves_alistofurlredirects",
                                        "extract": "redirects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "delete_aredirect",
                                "url": "/redirects/:_redirectsId.json",
                                "name": "Deletes a redirect",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "redirectsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "reports",
                        "name": "Analytics : Report",
                        "sampleData": {
                            "report": {
                                "name": "A new app report",
                                "shopify_ql": "SHOW total_sales BY country FROM order SINCE -1m UNTIL today ORDER BY total_sales"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anewreport",
                                "url": "/reports.json",
                                "name": "Creates a new report",
                                "method": "POST",
                                "requiredMappings": [
                                    "report.name",
                                    "report.shopify_ql"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_areport",
                                "url": "/reports/:_reportsId.json",
                                "name": "Updates a report",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "reportsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_reports",
                                "url": [
                                    "/reports/:_reportsId.json",
                                    "/reports.json"
                                ],
                                "name": "Create or Update reports",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "report.name",
                                    "report.shopify_ql"
                                ],
                                "parameters": [
                                    {
                                        "id": "reportsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_areport",
                                "url": "/reports/:_reportsId.json",
                                "name": "Deletes a report",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "reportsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "resource_feedback",
                        "name": "Sales channel : ResourceFeedback",
                        "sampleData": {
                            "resource_feedback": {
                                "state": "requires_action",
                                "messages": [
                                    "is not connected. Connect your account to use this sales channel."
                                ],
                                "feedback_generated_at": "2017-08-28T19:10:26.865086Z"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_a_new_resourcefeedback",
                                "url": "/resource_feedback.json",
                                "name": "Creates a new ResourceFeedback",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "resource_feedback.state",
                                    "resource_feedback.messages",
                                    "resource_feedback.feedback_generated_at"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "script_tags",
                        "name": "Online Store : ScriptTag",
                        "sampleData": {
                            "script_tag": {
                                "event": "onload",
                                "src": "https://djavaskripped.org/fancy.js",
                                "cache": false
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anewscripttag",
                                "url": "/script_tags.json",
                                "name": "Creates a new script tag",
                                "method": "POST",
                                "requiredMappings": [
                                    "script_tag.event",
                                    "script_tag.src"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_anewscripttag",
                                "url": "/script_tags/:_script_tagsId.json",
                                "name": "Updates a script tag",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "script_tagsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createsorupdate_anewscripttag",
                                "url": [
                                    "/script_tags/:_script_tagsId.json",
                                    "/script_tags.json"
                                ],
                                "name": "Create or Update script tag",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "script_tag.event",
                                    "script_tag.src"
                                ],
                                "parameters": [
                                    {
                                        "id": "script_tagsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_anewscripttag",
                                "url": "/script_tags/:_script_tagsId.json",
                                "name": "Deletes a script tag",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "script_tagsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "smart_collections",
                        "name": "Products : SmartCollection",
                        "sampleData": {
                            "custom_collection": {
                                "id": 841564295,
                                "image": "",
                                "handle": "ipods",
                                "title": "IPods",
                                "updated_at": "2017-07-24T19:12:49-04:00",
                                "body_html": "<p>The best selling ipod ever</p>",
                                "published_at": "2008-02-01T19:00:00-05:00",
                                "sort_order": "manual",
                                "template_suffix": null,
                                "published_scope": "global",
                                "published": true
                            },
                            "smart_collection": {
                                "id": 482865238,
                                "body_html": "<p>5000 songs in your pocket</p>",
                                "published": true,
                                "title": "IPods",
                                "rules": [
                                    {
                                        "column": "title",
                                        "relation": "starts_with",
                                        "condition": "iPod"
                                    }
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_asmartcollection",
                                "url": "/smart_collections.json",
                                "name": "Creates a smart collection",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "updates_asmartcollection",
                                "url": "/smart_collections/:_smart_collectionsId.json",
                                "name": "Updates an existing smart collection",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "smart_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createsorupdates_asmartcollection",
                                "url": [
                                    "/smart_collections/:_smart_collectionsId.json",
                                    "/smart_collections.json"
                                ],
                                "name": "Create or Update smartcollection",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "smart_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_asmartcollection",
                                "url": "/smart_collections/:_smart_collectionsId.json",
                                "name": "Removes a smart collection",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "smart_collectionsId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "changethetypeofsorting_asmartcollection",
                                "url": "/smart_collections/:_smart_collectionsId/order.json?sort_order=:_sort_order",
                                "name": "Updates the ordering type of products in a smart collection",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "smart_collectionsId",
                                        "name": "Smart Collection ID",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "sort_order",
                                        "name": "Sort Order",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "storefront_access_tokens",
                        "name": "Access : Storefront Access Token",
                        "sampleData": {
                            "storefront_access_token": {
                                "title": "Test"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_storefront_access_token",
                                "url": "/storefront_access_tokens.json",
                                "name": "Creates a new storefront access token",
                                "method": "POST",
                                "requiredMappings": [
                                    "storefront_access_token.title"
                                ]
                            },
                            {
                                "id": "delete_storefront_access_token",
                                "url": "/storefront_access_tokens/:_storefront_access_tokensId.json",
                                "name": "Delete",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "storefront_access_tokensId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "usage_charges",
                        "name": "Billing : UsageCharge",
                        "sampleData": {
                            "usage_charge": {
                                "description": "Super Mega Plan 1000 emails",
                                "price": 1
                            }
                        },
                        "operations": [
                            {
                                "id": "create_usage_charges",
                                "url": "/recurring_application_charges/:_recurring_application_charge_id/usage_charges.json",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "usage_charge.description",
                                    "usage_charge.price"
                                ],
                                "parameters": [
                                    {
                                        "id": "recurring_application_charge_id",
                                        "name": "Recurring Application Charge ID",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "recurring_application_charges",
                        "name": "Billing : RecurringApplicationCharge",
                        "sampleData": {
                            "recurring_application_charge": {
                                "name": "Super Duper Plan",
                                "price": 10,
                                "return_url": "http://super-duper.shopifyapps.com",
                                "capped_amount": 100,
                                "terms": "$1 for 1000 emails",
                                "test": true,
                                "trial_days": 5
                            }
                        },
                        "operations": [
                            {
                                "id": "create_recurring_application_charges",
                                "url": "/recurring_application_charges.json",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "recurring_application_charge.name",
                                    "recurring_application_charge.price"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "application_credits",
                        "name": "Billing : ApplicationCredit",
                        "sampleData": {
                            "application_credit": {
                                "description": "application credit for refund",
                                "amount": 5,
                                "test": true
                            }
                        },
                        "operations": [
                            {
                                "id": "create_recurring_application_credit",
                                "url": "/application_credits.json",
                                "name": "Creates an application credit",
                                "method": "POST",
                                "requiredMappings": [
                                    "application_credit.description",
                                    "application_credit.amount"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "application_charge",
                        "name": "Billing : ApplicationCharge",
                        "sampleData": {
                            "application_charge": {
                                "name": "Super Duper Expensive action",
                                "price": 100,
                                "return_url": "http://super-duper.shopifyapps.com",
                                "test": true
                            }
                        },
                        "operations": [
                            {
                                "id": "create_application_charge",
                                "url": "/application_charges.json",
                                "name": "Creates an application charge",
                                "method": "POST",
                                "requiredMappings": [
                                    "application_charge.name",
                                    "application_charge.price"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "theme",
                        "name": "Online Store : Theme",
                        "sampleData": {
                            "theme": {
                                "name": "Lemongrass",
                                "src": "http://themes.shopify.com/theme.zip",
                                "role": "main"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_atheme",
                                "url": "/themes.json",
                                "name": "Creates a theme",
                                "method": "POST",
                                "requiredMappings": [
                                    "theme.name"
                                ]
                            },
                            {
                                "id": "update_atheme",
                                "url": "/themes/:_themeId.json",
                                "name": "Updates an existing theme",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "themeId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_atheme",
                                "url": [
                                    "/themes/:_themeId.json",
                                    "/themes.json"
                                ],
                                "name": "Create or Update theme",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "themeId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_atheme",
                                "url": "/themes/:_themeId.json",
                                "name": "Deletes a theme",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "themeId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "inventoryitem",
                        "name": "Inventory : InventoryItem",
                        "sampleData": {
                            "inventory_item": {
                                "id": 808950810,
                                "sku": "IPOD2008PINK",
                                "created_at": "2018-10-29T06:05:58-04:00",
                                "updated_at": "2018-10-29T06:05:58-04:00",
                                "cost": "25.00",
                                "tracked": true,
                                "admin_graphql_api_id": "gid://shopify/InventoryItem/808950810"
                            }
                        },
                        "operations": [
                            {
                                "id": "update_ainventoryitem",
                                "url": "/inventory_items/:_inventory_item_id.json",
                                "name": "Updates an existing inventory item",
                                "method": "PUT",
                                "requiredMappings": [
                                    "inventory_item.sku"
                                ],
                                "parameters": [
                                    {
                                        "id": "inventory_item_id",
                                        "name": "Inventory Item ID",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "inventorylevel",
                        "name": "Inventory : InventoryLevel",
                        "sampleData": {
                            "location_id": 905684977,
                            "inventory_item_id": 808950810,
                            "available_adjustment": 5,
                            "relocate_if_necessary": ""
                        },
                        "operations": [
                            {
                                "id": "adjust_ainventorylocation",
                                "url": "/inventory_levels/adjust.json",
                                "name": "Adjusts the inventory level of an inventory item at a single location",
                                "method": "POST",
                                "requiredMappings": [
                                    "location_id",
                                    "inventory_item_id",
                                    "available_adjustment"
                                ]
                            },
                            {
                                "id": "connects_ainventoryitemtolocation",
                                "url": "/inventory_levels/connect.json",
                                "name": "Connects an inventory item to a location",
                                "method": "POST",
                                "requiredMappings": [
                                    "location_id",
                                    "inventory_item_id"
                                ]
                            },
                            {
                                "id": "set_inventorylevel",
                                "url": "/inventory_levels/set.json",
                                "name": "Sets the inventory level for an inventory item at a location",
                                "method": "POST",
                                "requiredMappings": [
                                    "location_id",
                                    "inventory_item_id",
                                    "available"
                                ],
                                "sampleData": {
                                    "location_id": 905684977,
                                    "inventory_item_id": 808950810,
                                    "available": 42,
                                    "disconnect_if_necessary": true
                                }
                            }
                        ]
                    },
                    {
                        "id": "giftcard",
                        "name": "Plus : Gift Card",
                        "sampleData": {
                            "gift_card": {
                                "note": "This is a note",
                                "initial_value": 100,
                                "code": "ABCD EFGH IJKL MNOP",
                                "template_suffix": "gift_cards.birthday.liquid"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_agiftcard",
                                "url": "/gift_cards.json",
                                "name": "Creates a gift card",
                                "method": "POST",
                                "requiredMappings": [
                                    "gift_card.initial_value"
                                ]
                            },
                            {
                                "id": "update_anexistinggiftcard",
                                "url": "/gift_cards/:_gift_card_id.json",
                                "name": "Updates an existing gift card",
                                "method": "PUT",
                                "description": "Updates an existing gift card.The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix.",
                                "parameters": [
                                    {
                                        "id": "gift_card_id",
                                        "name": "Gift Card ID",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "createorupdate_agiftcards",
                                "url": [
                                    "/gift_cards/:_gift_card_id.json",
                                    "/gift_cards.json"
                                ],
                                "name": "Create or Update gift cards",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "gift_card_id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "disables_agiftcard",
                                "url": "/gift_cards/:_gift_card_id/disable.json",
                                "name": "Disables a gift card",
                                "method": "POST",
                                "description": "Disabling a gift card can't be undone."
                            }
                        ]
                    },
                    {
                        "id": "webhooks",
                        "name": "Events : Webhook",
                        "sampleData": {
                            "webhook": {
                                "topic": "orders/create",
                                "address": "https://whatever.hostname.com/",
                                "format": "json"
                            }
                        },
                        "operations": [
                            {
                                "id": "creates_anew_webhook_subscription",
                                "url": "/webhooks.json",
                                "name": "Create a new webhook subscription",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "webhook.topic",
                                    "webhook.address"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/webhooks.json",
                                        "id": "retrieves_a_list_of_webhooks",
                                        "extract": "webhooks[0].id"
                                    }
                                }
                            },
                            {
                                "id": "update_a_webhook_subscription",
                                "url": "/webhooks/:_webhook_id.json",
                                "name": "Update a webhook subscription",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "webhook_id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/webhooks.json",
                                        "id": "retrieves_a_list_of_webhooks",
                                        "extract": "webhooks[0].id"
                                    }
                                }
                            },
                            {
                                "id": "createorupdate_a_webhook_subscription",
                                "url": [
                                    "/webhooks/:_webhook_id.json",
                                    "/webhooks.json"
                                ],
                                "name": "Create or Update a webhook subscription",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/webhooks.json",
                                        "id": "retrieves_a_list_of_webhooks",
                                        "extract": "webhooks[0].id"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "webhook_id",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_webhook_subscription",
                                "url": "/webhooks/:_webhook_id.json",
                                "name": "Delete a webhook subscription",
                                "method": "DELETE",
                                "description": "Delete an existing webhook from a shop",
                                "askForHowToGetIdentifier": true,
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "url": "/webhooks.json",
                                        "id": "retrieves_a_list_of_webhooks",
                                        "extract": "webhooks[0].id"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "webhook_id",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "fulfillment_order",
                        "name": "Shipping and fulfillment : FulfillmentOrder",
                        "sampleData": {
                            "fulfillment_order": {
                                "id": 1025578633,
                                "shop_id": 690933842,
                                "order_id": 450789469,
                                "new_fulfill_at": "",
                                "assigned_location_id": 48752903,
                                "request_status": "submitted",
                                "status": "open",
                                "supported_actions": [
                                    "cancel_fulfillment_order"
                                ],
                                "destination": {
                                    "id": 1025578627,
                                    "address1": "Chestnut Street 92",
                                    "address2": "",
                                    "city": "Louisville",
                                    "company": null,
                                    "country": "United States",
                                    "email": "bob.norman@hostmail.com",
                                    "first_name": "Bob",
                                    "last_name": "Norman",
                                    "phone": "555-625-1199",
                                    "province": "Kentucky",
                                    "zip": "40202"
                                },
                                "line_items": [
                                    {
                                        "id": 1025578646,
                                        "shop_id": 690933842,
                                        "fulfillment_order_id": 1025578633,
                                        "quantity": 1,
                                        "line_item_id": 518995019,
                                        "inventory_item_id": 49148385,
                                        "fulfillable_quantity": 1,
                                        "variant_id": 49148385
                                    }
                                ],
                                "assigned_location": {
                                    "address1": null,
                                    "address2": null,
                                    "city": null,
                                    "country_code": "DE",
                                    "location_id": 48752903,
                                    "name": "Apple Api Shipwire",
                                    "phone": null,
                                    "province": null,
                                    "zip": null
                                },
                                "merchant_requests": []
                            }
                        },
                        "operations": [
                            {
                                "id": "cancel_a_fulfillment_order",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/cancel.json",
                                "name": "Cancel a fulfillment order",
                                "method": "POST",
                                "supportIgnoreMissing": true,
                                "sampleData": {},
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "close_a_fulfillment_order",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/close.json",
                                "name": "Transition a fulfillment order from in progress to incomplete",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment_order": {
                                        "message": "Not enough inventory to complete this work."
                                    }
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "move_a_fulfillment_order_to_a_new_location",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/move.json",
                                "name": "Move a fulfillment order to a new location",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment_order": {
                                        "new_location_id": 905684977,
                                        "fulfillment_order_line_items": [
                                            {
                                                "id": 1025578646,
                                                "quantity": 1
                                            }
                                        ]
                                    }
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "hold_a_fulfillment_order_to_a_new_location",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/hold.json",
                                "name": "Applies a fulfillment hold on an open fulfillment order",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment_hold": {
                                        "reason": "inventory_out_of_stock",
                                        "reason_notes": "Not enough inventory to complete this work.",
                                        "notify_merchant": true,
                                        "fulfillment_order_line_items": [
                                            {
                                                "id": 1058737538,
                                                "quantity": 1
                                            }
                                        ]
                                    }
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "transition_a_fulfillment_order_from_scheduled_to_open",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/open.json",
                                "name": "Transition a fulfillment order from scheduled to open",
                                "method": "POST",
                                "sampleData": {},
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_the_fulfill_at_time_of_a_schedules_fulfillment_order",
                                "url": "/fulfillment_orders/:_fulfillment_order_id/reschedule.json",
                                "name": "Update the fulfill_at time of a scheduled fulfillment order",
                                "method": "POST",
                                "sampleData": {
                                    "fulfillment_order": {
                                        "new_fulfill_at": 905684977
                                    }
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fulfillment_order_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    }
}