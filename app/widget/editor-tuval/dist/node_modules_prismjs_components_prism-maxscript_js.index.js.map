{"version":3,"file":"node_modules_prismjs_components_prism-maxscript_js.index.js","mappings":";;;;;;;;AAAA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,2BAA2B,IAAI;AAC/B;;AAEA,CAAC","sources":["webpack://tuval-core/./node_modules/prismjs/components/prism-maxscript.js"],"sourcesContent":["(function (Prism) {\n\n\tvar keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n\n\n\tPrism.languages.maxscript = {\n\t\t'comment': {\n\t\t\tpattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'path': {\n\t\t\tpattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\n\t\t'function-call': {\n\t\t\tpattern: RegExp(\n\t\t\t\t'((?:' + (\n\t\t\t\t\t// start of line\n\t\t\t\t\t/^/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// operators and other language constructs\n\t\t\t\t\t/[;=<>+\\-*/^({\\[]/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// keywords as part of statements\n\t\t\t\t\t/\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source\n\t\t\t\t) + ')[ \\t]*)' +\n\n\t\t\t\t'(?!' + keywords.source + ')' + /[a-z_]\\w*\\b/.source +\n\n\t\t\t\t'(?=[ \\t]*(?:' + (\n\t\t\t\t\t// variable\n\t\t\t\t\t'(?!' + keywords.source + ')' + /[a-z_]/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// number\n\t\t\t\t\t/\\d|-\\.?\\d/.source +\n\t\t\t\t\t'|' +\n\t\t\t\t\t// other expressions or literals\n\t\t\t\t\t/[({'\"$@#?]/.source\n\t\t\t\t) + '))',\n\t\t\t\t'im'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'function'\n\t\t},\n\n\t\t'function-definition': {\n\t\t\tpattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\n\t\t'argument': {\n\t\t\tpattern: /\\b[a-z_]\\w*(?=:)/i,\n\t\t\talias: 'attr-name'\n\t\t},\n\n\t\t'keyword': keywords,\n\t\t'boolean': /\\b(?:false|true)\\b/,\n\n\t\t'time': {\n\t\t\tpattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'number'\n\t\t},\n\t\t'number': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:e|pi)\\b/\n\t\t],\n\n\t\t'constant': /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n\t\t'color': {\n\t\t\tpattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\n\t\t'operator': /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n\t\t'punctuation': /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n\t};\n\n}(Prism));\n"],"names":[],"sourceRoot":""}