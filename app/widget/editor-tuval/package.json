{
    "name": "tuval-core",
    "version": "0.0.0",
    "description": "",
    "keywords": [],
    "main": "dist/tuval-core.umd.js",
    "module": "dist/tuval-core.es5.js",
    "typings": "dist/types/tuval-core.d.ts",
    "files": [
        "dist"
    ],
    "author": "tuvalframework <tuvalframework@gmail.com>",
    "repository": {
        "type": "git",
        "url": ""
    },
    "license": "MIT",
    "engines": {
        "node": ">=6.0.0"
    },
    "scripts": {
        "bundle": "dts-bundle-generator --no-check --export-referenced-types=false  -o ./dist/index.d.ts ./dist_types/types/index.d.ts",
        "buildall": "node shell_all.js",
        "buildwp": "node shell_wp.js",
        "buildnode": "webpack --config webpack.node.config.js",
        "buildweb": "webpack --config webpack.web.config.js",
        "buildwebprod": "webpack --config webpack.web.prod.config.js",
        "build": "node shell.js",
        "lint": "tslint  --project tsconfig.json -t codeFrame 'src/**/*.ts' 'test/**/*.ts'",
        "prebuild": "rimraf dist",
        "b": "tsc --module commonjs && rollup -c rollup.config.ts",
        "_build": "webpack && tsc --module commonjs && rollup -c rollup.config.ts && typedoc --out docs --target es6 --theme minimal --mode file src",
        "wbuild": "webpack",
        "wpbuild": "webpack  --config  webpack.wp.config.js",
        "prodbuild": "webpack --config webpack.prod.config.js",
        "rbuild": "tsc --module commonjs && rollup -c rollup.config.ts && typedoc --out docs --target es6 --theme minimal --mode file src",
        "web": "",
        "_start": "rollup -c rollup.config.ts -w",
        "start": "webpack-dev-server",
        "test": "jest --coverage",
        "test:watch": "jest --coverage --watch",
        "test:prod": "npm run lint && npm run test -- --no-cache",
        "deploy-docs": "ts-node tools/gh-pages-publish",
        "report-coverage": "cat ./coverage/lcov.info | coveralls",
        "commit": "git-cz",
        "semantic-release": "semantic-release",
        "semantic-release-prepare": "ts-node tools/semantic-release-prepare",
        "precommit": "lint-staged",
        "travis-deploy-once": "travis-deploy-once",
        "uglify": "terser ./dist_web/tuval-core.js --compress --mangle --comments false --keep-classnames  --keep-fnames --module -o ./dist_web/tuval-core.min.js",
        "serve": "lite-server --baseDir=\"\"",
        "asbuild:untouched": "asc assembly/index.ts -b assembly/dist/untouched.wasm -t assembly/dist/untouched.wat --validate --sourceMap --debug",
        "asbuild:optimized": "asc assembly/index.ts -b assembly/dist/optimized.wasm -t assembly/dist/optimized.wat --validate --sourceMap --optimize",
        "asbuild": "npm run asbuild:untouched && npm run asbuild:optimized"
    },
    "lint-staged": {
        "{src,test}/**/*.ts": [
            "prettier --write",
            "git add"
        ]
    },
    "config": {
        "commitizen": {
            "path": "node_modules/cz-conventional-changelog"
        }
    },
    "jest": {
        "transform": {
            ".(ts|tsx)": "ts-jest"
        },
        "testEnvironment": "node",
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js"
        ],
        "coveragePathIgnorePatterns": [
            "/node_modules/",
            "/test/"
        ],
        "coverageThreshold": {
            "global": {
                "branches": 90,
                "functions": 95,
                "lines": 95,
                "statements": 95
            }
        },
        "collectCoverageFrom": [
            "src/*.{js,ts}"
        ]
    },
    "prettier": {
        "semi": false,
        "singleQuote": true
    },
    "commitlint": {
        "extends": [
            "@commitlint/config-conventional"
        ]
    },
    "devDependencies": {
        "sass": "^1.71.1",
        "sass-loader": "^14.1.1"
    },
    "dependencies": {
        "@tuval/forms": "^1.0.166",
        "@yoopta/action-menu-list": "^2.0.1",
        "@yoopta/blockquote": "^2.0.1",
        "@yoopta/callout": "^2.0.1",
        "@yoopta/code": "^2.0.1",
        "@yoopta/editor": "^2.0.1",
        "@yoopta/embed": "^2.0.1",
        "@yoopta/file": "^2.0.1",
        "@yoopta/headings": "^2.0.1",
        "@yoopta/image": "^2.0.1",
        "@yoopta/link": "^2.0.1",
        "@yoopta/link-tool": "^2.0.1",
        "@yoopta/lists": "^2.0.1",
        "@yoopta/marks": "^2.0.1",
        "@yoopta/paragraph": "^2.0.1",
        "@yoopta/toolbar": "^2.0.1",
        "@yoopta/video": "^2.0.1",
        "buffer": "^6.0.3",
        "crypto-browserify": "^3.12.0",
        "css-loader": "^6.10.0",
        "mini-css-extract-plugin": "^2.8.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "shelljs": "^0.8.5",
        "slate": "^0.102.0",
        "slate-history": "^0.100.0",
        "slate-react": "^0.102.0",
        "style-loader": "^3.3.4",
        "ts-loader": "^9.5.1",
        "typescript": "^5.3.3",
        "webpack": "^5.90.3",
        "webpack-cli": "^5.1.4"
    }
}
