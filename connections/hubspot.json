{
    "export": {
        "labels": {
            "version": "API Version",
            "resource": "API Name",
            "endpoint": "Operation"
        },
        "paging": {
            "pagingMethod": "token",
            "nextPagePath": "offset",
            "pageArgument": "offset"
        },
        "urlResolution": [
            "/companies/v2/companies/paged",
            "/contacts/v1/lists/all/contacts/all",
            "/contacts/v1/contact/vid/:_vid/profile",
            "/contacts/v1/search/query",
            "/deals/v1/deal/paged",
            "/deals/v1/deal/:_dealId",
            "/deals/v1/deal/recent/created",
            "/deals/v1/deal/recent/modified",
            "/contacts/v1/contact/utk/:_contact_utk/profile",
            "/contacts/v1/contact/email/:_contact_email/profile",
            "/contacts/search/v1/external/lifecyclestages",
            "/contacts/v1/lists/all/contacts/recent",
            "/contacts/v1/lists/all/contacts/recent",
            "/contacts/v1/lists/recently_updated/contacts/recent",
            "/companies/v2/companies/recent/modified",
            "/companies/v2/companies/recent/created",
            "/companies/v2/companies/:_companyId/contacts",
            "/companies/v2/companies/:_companyId",
            "/companies/v2/domains/:_domain/companies"
        ],
        "versions": [
            {
                "version": "v1",
                "resources": [
                    {
                        "id": "contacts",
                        "name": "Contacts API",
                        "endpoints": [
                            {
                                "id": "get_all_contacts",
                                "url": "/contacts/v1/lists/all/contacts/all",
                                "name": "Get all contacts",
                                "resourcePath": "contacts",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "vid-offset",
                                    "pageArgument": "vidOffset"
                                },
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_only”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “newest”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is “false”",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_contact_by_id",
                                "url": "/contacts/v1/contact/vid/:_vid/profile",
                                "name": "Get contact by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "vid",
                                        "name": "Contact ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_contact_by_email",
                                "url": "/contacts/v1/contact/email/:_contact_email/profile",
                                "name": "Get contact by email",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "contact_email",
                                        "name": "Contact Email Address",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_contact_by_user_token",
                                "url": "/contacts/v1/contact/utk/:_contact_utk/profile",
                                "name": "Get contact by user token",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "contact_utk",
                                        "name": "Contact User Token",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_created_contacts",
                                "url": "/contacts/v1/lists/all/contacts/recent",
                                "name": "Get recently created contacts",
                                "resourcePath": "contacts",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_updated_contacts",
                                "url": "/contacts/v1/lists/recently_updated/contacts/recent",
                                "name": "Get recently modified contacts",
                                "resourcePath": "contacts",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_stage_metrics_contacts",
                                "url": "/contacts/search/v1/external/lifecyclestages",
                                "name": "Get lifecycle stage metrics for contacts",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "aggregationProperty",
                                        "name": "aggregationProperty",
                                        "fieldType": "input",
                                        "description": "A second optional property to further breakdown the lifecycle stage buckets. This must be an enumerated property with 20 or fewer options.",
                                        "type": "array"
                                    },
                                    {
                                        "id": "fromTimestamp",
                                        "name": "fromTimestamp",
                                        "fieldType": "input",
                                        "description": "A millisecond timestamp representing the start of the time period that you want the stats for.Note: the time between fromTimestamp and toTimestamp must be 2 years or less."
                                    },
                                    {
                                        "id": "toTimestamp",
                                        "name": "toTimestamp",
                                        "fieldType": "input",
                                        "description": "A millisecond timestamp representing the end of the time period that you want the stats for.Note: the time between fromTimestamp and toTimestamp must be 2 years or less"
                                    }
                                ]
                            },
                            {
                                "id": "search_for_contacts",
                                "url": "/contacts/v1/search/query",
                                "name": "Search for contacts",
                                "resourcePath": "contacts",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "count",
                                        "name": "Count",
                                        "description": "This parameter lets you specify the amount of contacts to return in your API call. The default for this parameter (if it isn't specified) is 20 contacts. The maximum amount of contacts you can have returned to you via this parameter is 100",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "offset",
                                        "name": "Offset",
                                        "description": "This parameter is used to page through the results. Every call to this endpoint will return an offset value. This value is used in the offset= parameter of the next call to get the next page of contacts.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "property",
                                        "name": "Properties",
                                        "fieldType": "input",
                                        "description": "To specify comma seperated properties. For Ex: firstname,email",
                                        "type": "array"
                                    },
                                    {
                                        "id": "q",
                                        "name": "Search Query",
                                        "required": true,
                                        "description": "The search term for what you're searching for. You can use all of a word or just parts of a word as well. For example, if you we're searching for contacts with \"hubspot\" in their name or email, searching for \"hub\" would also return contacts with \"hubspot\" in their email address.",
                                        "fieldType": "textarea"
                                    }
                                ]
                            },
                            {
                                "id": "get_batch_of_contact_by_id",
                                "url": "/contacts/v1/contact/vids/batch/",
                                "name": "Get a batch of contacts by ID",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "vid",
                                        "name": "Contact ID",
                                        "fieldType": "input",
                                        "type": "array",
                                        "description": "Each vid requires it's own query parameter (vid=10&vid=11). Requests should be limited to 100 or fewer vids. Any vids that are provided that are invalid will be ignored.",
                                        "required": true
                                    },
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include Deleted Contacts",
                                        "fieldType": "select",
                                        "description": "Boolean true or false to indicate whether the return of deleted contacts is desired. Default is false.",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_batch_contact_by_email",
                                "url": "/contacts/v1/contact/emails/batch/",
                                "name": "Get a batch of contacts by email",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "email",
                                        "name": "Contact Email Addresses",
                                        "fieldType": "input",
                                        "type": "array",
                                        "description": "The email of the contact that you want to get the data for. You can include this parameter multiple times to request multiple records. Any email address that doesn't belong to an existing contact record will be ignored. Requests should be limited to 100 or fewer emails.",
                                        "required": true
                                    },
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: firstname,lastname",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include Deleted Contacts",
                                        "fieldType": "select",
                                        "description": "Boolean true or false to indicate whether the return of deleted contacts is desired. Default is false.",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contacts_properties",
                        "name": "Contacts Properties API",
                        "endpoints": [
                            {
                                "id": "get_contacts_properties",
                                "url": "/properties/v1/contacts/properties",
                                "name": "Get all properties",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": ""
                            },
                            {
                                "id": "get_contacts_property",
                                "url": "/properties/v1/contacts/properties/named/:_property_name",
                                "name": "Get a contact property",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "property_name",
                                        "description": "The API name of the property that you wish to see metadata for.",
                                        "name": "Property Name",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_contacts_property_details",
                                "url": "/properties/v1/contacts/groups/named/:_groupName",
                                "name": "Get property group details",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "groupName",
                                        "name": "Group Name",
                                        "description": "The internal name of the property group.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "includeProperties",
                                        "name": "Include Properties",
                                        "description": "Returns all of the properties for each company property group.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_contacts_property_group",
                                "url": "/properties/v1/contacts/groups",
                                "name": "Get property groups",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "includeProperties",
                                        "name": "Include Properties",
                                        "description": "Returns all of the properties for each company property group.",
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "ecommerce_bridge",
                        "name": "Ecommerce Bridge API",
                        "endpoints": [
                            {
                                "id": "get_extensions_settings",
                                "url": "/extensions/ecomm/v1/settings",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "name": "Get ecommerce settings",
                                "resourcePath": ""
                            },
                            {
                                "id": "get_sync_errors",
                                "url": "/extensions/ecomm/v1/sync-errors",
                                "name": "Get sync errors",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "",
                                "queryParameters": [
                                    {
                                        "id": "appId",
                                        "name": "App Id",
                                        "description": "The ID of the app, created inside your HubSpot Developer portal.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "showResolvedErrors",
                                        "name": "Include resolved errors",
                                        "description": "Whether or not to include resolved errors in the response. Defaults to false.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_ecommerce_status",
                                "url": "/extensions/ecomm/v1/installs/status",
                                "name": "Check ecommerce installation",
                                "resourcePath": ""
                            }
                        ]
                    },
                    {
                        "id": "company_properties",
                        "name": "Company Properties API",
                        "endpoints": [
                            {
                                "id": "get_company_properties",
                                "url": "/properties/v1/companies/properties",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "name": "Get all company properties",
                                "resourcePath": ""
                            },
                            {
                                "id": "get_company_property",
                                "url": "/properties/v1/companies/properties/named/:_property_name",
                                "name": "Get a company property",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "property_name",
                                        "name": "Property Name",
                                        "description": "The API name of the property that you wish to see metadata for.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_company_property_groups",
                                "url": "/properties/v1/companies/groups",
                                "name": "Get company property groups",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "name": "Include Properties",
                                        "id": "includeProperties",
                                        "description": "Returns all of the properties for each company property group.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "forms",
                        "name": "Forms API",
                        "endpoints": [
                            {
                                "id": "get_forms",
                                "url": "/forms/v2/forms",
                                "name": "Get forms",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": ""
                            },
                            {
                                "id": "get_form",
                                "url": "/forms/v2/forms/:_form_guid",
                                "name": "Get form",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "form_guid",
                                        "name": "Form unique ID",
                                        "description": "The Form unique ID for the form that you're requesting in your API call.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_form_fields",
                                "url": "/forms/v2/fields/:_form_guid",
                                "name": "Get form fields",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "form_guid",
                                        "name": "Form unique ID",
                                        "description": "The Form unique ID for the form that you're requesting in your API call.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_form_field",
                                "url": "/forms/v2/fields/:_form_guid/:_field_name",
                                "name": "Get a form field",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "form_guid",
                                        "name": "Form unique ID",
                                        "description": "The Form unique ID for the form that you're requesting in your API call.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "field_name",
                                        "name": "Field Name",
                                        "description": "The Form unique ID for the form that you're requesting the field from in your API call.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_submissions_for_a_form",
                                "url": "/form-integrations/v1/submissions/forms/:_form_guid",
                                "name": "Get submissions for a form",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "form_guid",
                                        "name": "Form ID",
                                        "description": "The unique guid for the form that you want to get the submissions from.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "products",
                        "name": "Products API",
                        "endpoints": [
                            {
                                "id": "get_products",
                                "url": "/crm-objects/v1/objects/products/paged",
                                "name": "Get all products",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "description": "By default, only the ID and a few other system fields are returned for the products. You can include product properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties.",
                                        "required": true,
                                        "type": "array",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_product",
                                "url": "/crm-objects/v1/objects/products/:_id",
                                "name": "Get a product by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Product ID",
                                        "description": "The ID of the product you want to get.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID and a few other system fields are returned for the product. You can include product properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_changes_products",
                                "url": "/crm-objects/v1/change-log/products",
                                "name": "Get a log of changes for products",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "timestamp",
                                        "name": "Timestamp",
                                        "description": "The timestamp of the last change you pulled.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "changeType",
                                        "name": "Change Type",
                                        "description": "The last changeType you pulled.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "objectId",
                                        "name": "Object Id",
                                        "description": "The ID of the last object you received changes for.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_group_of_products_by_id",
                                "url": "/crm-objects/v1/objects/products/batch-read",
                                "name": "Get a group of products by ID",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "bodyParameters": [
                                    {
                                        "id": "ids",
                                        "name": "Products IDs",
                                        "description": "An array of product IDs that you want to get. You can include up to 100 IDs in a single request.",
                                        "required": true,
                                        "fieldType": "input",
                                        "type": "array"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID, a few other system fields, and the hs_product_id property are returned for the line item. You can include other properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties. See the example for more details.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "propertiesWithHistory",
                                        "description": "This parameter behaves exactly like the properties parameter above, with the exception that properties included with this parameter also return the full version history for the property.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "owners",
                        "name": "Owners API",
                        "endpoints": [
                            {
                                "id": "get_owners",
                                "url": "/owners/v2/owners",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "name": "Get Owners",
                                "resourcePath": ""
                            },
                            {
                                "id": "get_an_ownerbyid",
                                "url": "/owners/v2/owners/:_ownerId",
                                "name": "Get an owner by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "ownerId",
                                        "name": "Owner Id",
                                        "description": "The ID of the owner you want to get.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "engagements",
                        "name": "Engagements API",
                        "endpoints": [
                            {
                                "id": "get_engagements",
                                "url": "/engagements/v1/engagements/paged",
                                "name": "Get all engagements",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": ""
                            },
                            {
                                "id": "get_dispositions",
                                "url": "/calling/v1/dispositions",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "name": "Get call dispositions",
                                "resourcePath": ""
                            },
                            {
                                "id": "get_engagement_id",
                                "url": "/engagements/v1/engagements/:_engagementId",
                                "name": "Get an Engagement",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "engagementId",
                                        "name": "Engagement Id",
                                        "description": "The ID of the engagement you want to get.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_engagements_associated",
                                "url": "/engagements/v1/engagements/associated/:_objectType/:_objectId/paged",
                                "name": "Get associated engagements",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "One of contact, company, or deal, depending on the object you want to fetch engagements for.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "objectId",
                                        "name": "Object Id",
                                        "description": "The ID of the associated object you want to fetch contacts for. This will be the vid for a contact, companyId for a company, or dealId for a deal.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_engagements_recent",
                                "url": "/engagements/v1/engagements/recent/modified",
                                "name": "Get recent engagements",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "name": "Since",
                                        "id": "since",
                                        "description": "A Unix timestamp in milliseconds. If this parameter is included, only records modified after the specified time will be returned.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deal_properties",
                        "name": "Deal Properties API",
                        "endpoints": [
                            {
                                "id": "get_deal_properties",
                                "url": "/properties/v1/deals/properties",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "name": "Get all deal properties",
                                "resourcePath": ""
                            },
                            {
                                "id": "get_deal_property",
                                "url": "/properties/v1/deals/properties/named/:_property_name",
                                "name": "Get a deal property",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "property_name",
                                        "name": "Property Name",
                                        "description": "The API name of the property that you wish to see metadata for.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_deal_property_group",
                                "url": "/properties/v1/deals/groups",
                                "name": "Get deal groups",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "name": "Include Properties",
                                        "id": "includeProperties",
                                        "description": "Returns all of the properties for each company property group.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_deal_property_group_id",
                                "url": "/properties/v1/deals/groups/named/:_property_group",
                                "name": "Get a deal group",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "property_group",
                                        "name": "Property Group",
                                        "description": "The API name of the property goup that you wish to see metadata for.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "name": "Include Properties",
                                        "id": "includeProperties",
                                        "description": "Returns all of the properties for each company property group.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deals",
                        "name": "Deals API",
                        "endpoints": [
                            {
                                "id": "get_all_deals",
                                "url": "/deals/v1/deal/paged",
                                "name": "Get all deals",
                                "resourcePath": "deals",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: dealname,amount. Either \"Properties\" or \"Properties with History\" can be used.",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "Properties with History",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. Works similarly to properties, but this parameter will include the history for the specified property, instead of just including the current value. Use this parameter when you need the full history of changes to a property's value.Either \"Properties\" or \"Properties with History\" can be used.",
                                        "type": "array"
                                    },
                                    {
                                        "id": "includeAssociations",
                                        "name": "Associations",
                                        "description": "Include the IDs of the associated contacts and companies in the results",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_modified_deals",
                                "url": "/deals/v1/deal/recent/modified",
                                "name": "Get recently modified deals",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "since": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since",
                                        "name": "Since",
                                        "fieldType": "date",
                                        "description": "Only return deals modified after timestamp x. x must be a UNIX formatted timestamp in milliseconds."
                                    },
                                    {
                                        "id": "includePropertyVersions",
                                        "name": "includePropertyVersions",
                                        "description": "By default, you will only get data for the most recent version of a property in the versions data.  If you include this parameter, you will get data for all previous versions.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_created_deals",
                                "url": "/deals/v1/deal/recent/created",
                                "name": "Get recently created deals",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "since": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since",
                                        "name": "Since",
                                        "fieldType": "input",
                                        "description": "Only return deals modified after timestamp x. x must be a UNIX formatted timestamp in milliseconds."
                                    },
                                    {
                                        "id": "includePropertyVersions",
                                        "name": "includePropertyVersions",
                                        "description": "By default, you will only get data for the most recent version of a property in the versions data.  If you include this parameter, you will get data for all previous versions.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_deal",
                                "url": "/deals/v1/deal/:_dealId",
                                "name": "Get a deal",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "dealId",
                                        "name": "Deal Id",
                                        "description": "Unique identifier for a particular company.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "includePropertyVersions",
                                        "name": "Include property versions",
                                        "fieldType": "select",
                                        "description": " If you include this parameter, you will get data for all previous versions",
                                        "options": [
                                            "true"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "companies",
                        "name": "Companies API",
                        "endpoints": [
                            {
                                "id": "get_all_companies",
                                "url": "/companies/v2/companies/paged",
                                "name": "Get all companies",
                                "resourcePath": "companies",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "fieldType": "input",
                                        "description": "To specify Comma seperated properties. For Ex: website,name. Either \"Properties\" or \"Properties with History\" can be used.",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "Properties with History",
                                        "fieldType": "input",
                                        "description": "Works similarly to properties, but this parameter will include the history for the specified property, instead of just including the current value. Use this parameter when you need the full history of changes to a property's value.Either \"Properties\" or \"Properties with History\" can be used.",
                                        "type": "array"
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_modified_companies",
                                "url": "/companies/v2/companies/recent/modified",
                                "name": "Get recently modified companies",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "since": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "queryParameters": [
                                    {
                                        "id": "count",
                                        "name": "Count",
                                        "description": "This parameter lets you specify the amount of contacts to return in your API call. The default for this parameter (if it isn't specified) is 20 contacts. The maximum amount of contacts you can have returned to you via this parameter is 100",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "since",
                                        "name": "Since",
                                        "fieldType": "date",
                                        "description": "Only return deals modified after timestamp x. x must be a UNIX formatted timestamp in milliseconds."
                                    }
                                ]
                            },
                            {
                                "id": "get_recently_created_companies",
                                "url": "/companies/v2/companies/recent/created",
                                "name": "Get recently created companies",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ]
                            },
                            {
                                "id": "get_contacts_of_a_company",
                                "url": "/companies/v2/companies/:_companyId/contacts",
                                "name": "Get Contacts of a Company",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "search_for_companies_by_domain",
                                "url": "/companies/v2/domains/:_domain/companies",
                                "name": "Search for companies by domain",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "mergePostBodyToPagingPostBody": true,
                                "method": "POST",
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "requestOptions.properties",
                                        "name": "properties",
                                        "description": "The value of account",
                                        "type": "array",
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "offset.isPrimary",
                                        "name": "isPrimary",
                                        "fieldType": "checkbox",
                                        "required": true
                                    },
                                    {
                                        "id": "offset.companyId",
                                        "name": "companyId",
                                        "defaultValue": 0,
                                        "readOnly": true,
                                        "fieldType": "input",
                                        "required": true
                                    },
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "defaultValue": 2,
                                        "readOnly": true,
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ],
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": {
                                        "offset": {
                                            "companyId": "{{data._PARENT.offset.companyId}}"
                                        }
                                    }
                                },
                                "pathParameters": [
                                    {
                                        "id": "domain",
                                        "name": "Domain",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_company",
                                "url": "/companies/v2/companies/:_companyId",
                                "name": "Get a company",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "analytics",
                        "name": "Analytics API",
                        "endpoints": [
                            {
                                "id": "get_broken_data",
                                "url": "/analytics/v2/reports/:_breakdown_by/:_time_period",
                                "name": "Get broken down data",
                                "resourcePath": "breakdowns",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "start": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYYMMDD"
                                },
                                "pathParameters": [
                                    {
                                        "id": "breakdown_by",
                                        "name": "Break down By",
                                        "fieldType": "select",
                                        "options": [
                                            "totals",
                                            "sessions",
                                            "sources",
                                            "geolocation",
                                            "utm-campaigns",
                                            "utm-contents",
                                            "utm-mediums",
                                            "utm-sources",
                                            "utm-terms"
                                        ],
                                        "required": true
                                    },
                                    {
                                        "id": "time_period",
                                        "name": "Time period",
                                        "fieldType": "select",
                                        "options": [
                                            "total",
                                            "daily",
                                            "weekly",
                                            "monthly",
                                            "summarize/daily",
                                            "summarize/weekly",
                                            "summarize/monthly",
                                            "summarize/weekly_starting_monday",
                                            "summarize/quarterly",
                                            "summarize/yearly",
                                            "summarize/total"
                                        ],
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "start",
                                        "name": "start",
                                        "fieldType": "date",
                                        "description": "The start date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "end",
                                        "name": "end",
                                        "fieldType": "date",
                                        "description": "The end date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "d1",
                                        "name": "First drilldown",
                                        "fieldType": "input",
                                        "description": "Used to drilldown into the data. This parameter is designed to reflect the functionality of the HubSpot sources reports. For example, when breaking down by sources, d1 could be organic to drill down into organic traffic data."
                                    },
                                    {
                                        "id": "d2",
                                        "name": "Second drilldown",
                                        "fieldType": "input",
                                        "description": "Used to further drill down into the data. Similar to d1, this reflects the functionality of the sources report. For example, if you have d1=organic, d2=hubspot would drill down into data for organic search traffic for the keyword `hubspot`."
                                    },
                                    {
                                        "id": "f",
                                        "name": "Filter",
                                        "fieldType": "input",
                                        "description": "Filter the returned data to include only the specified breakdown. This parameter can be included multiple times to filter for multiple breakdowns. For example, when breaking down by sources and using d1=organic to drill down into organic search traffic, you can get the data for the specific keywords `hubspot` and `marketing` using f=hubspot&f=marketing. NOTE: You must include at least 1 filter when the :time_period is monthly, weekly, or daily."
                                    },
                                    {
                                        "id": "e",
                                        "name": "Exclude",
                                        "fieldType": "input",
                                        "description": "Exclude data for the specified breakdown. This parameter can be included multiple times to exclude multiple breakdowns.For example, when breaking down by sources and using d1=referrals to drill down into referral traffic, you can exclude data for referral traffic from 'www.hubspot.com' by using e=www.hubspot.com."
                                    },
                                    {
                                        "id": "filterId",
                                        "name": "Analytics View ID",
                                        "fieldType": "input",
                                        "description": "The ID of an Analytics view. If included, the returned data will only include data that matches the view."
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort by",
                                        "fieldType": "input",
                                        "description": "If included, the results are sorted by the specified field."
                                    },
                                    {
                                        "id": "sortDir",
                                        "name": "Sort direction",
                                        "fieldType": "input",
                                        "description": "If a &sort= value is included in the request, this parameter will control the direction of sorted results. Must be one of ASC (ascending) or DESC (descending). Defaults to DESC if not included."
                                    }
                                ]
                            },
                            {
                                "id": "get_analytics_data_specific",
                                "url": "/analytics/v2/reports/:_object_type/:_time_period",
                                "name": "Get analytics data for specific objects",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "start": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYYMMDD"
                                },
                                "pathParameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "fieldType": "select",
                                        "options": [
                                            "event-completions",
                                            "forms",
                                            "pages",
                                            "social-assists"
                                        ],
                                        "required": true
                                    },
                                    {
                                        "id": "time_period",
                                        "name": "Time period",
                                        "fieldType": "select",
                                        "options": [
                                            "total",
                                            "daily",
                                            "weekly",
                                            "monthly",
                                            "summarize/daily",
                                            "summarize/weekly",
                                            "summarize/monthly",
                                            "summarize/weekly_starting_monday",
                                            "summarize/quarterly",
                                            "summarize/yearly",
                                            "summarize/total"
                                        ],
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "start",
                                        "name": "start",
                                        "fieldType": "date",
                                        "description": "The start date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "end",
                                        "name": "end",
                                        "fieldType": "date",
                                        "description": "The end date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "d1",
                                        "name": "First drilldown",
                                        "fieldType": "input",
                                        "description": "Used to drilldown into the data. This parameter is designed to reflect the functionality of the HubSpot sources reports. For example, when breaking down by sources, d1 could be organic to drill down into organic traffic data."
                                    },
                                    {
                                        "id": "d2",
                                        "name": "Second drilldown",
                                        "fieldType": "input",
                                        "description": "Used to further drill down into the data. Similar to d1, this reflects the functionality of the sources report. For example, if you have d1=organic, d2=hubspot would drill down into data for organic search traffic for the keyword `hubspot`."
                                    },
                                    {
                                        "id": "f",
                                        "name": "Filter",
                                        "fieldType": "input",
                                        "description": "ilter the returned data to include only the specified breakdown. This parameter can be included multiple times to filter for multiple breakdowns. For example, when breaking down by sources and using d1=organic to drill down into organic search traffic, you can get the data for the specific keywords `hubspot` and `marketing` using f=hubspot&f=marketing. NOTE: You must include at least 1 filter when the :time_period is monthly, weekly, or daily."
                                    },
                                    {
                                        "id": "e",
                                        "name": "Exclude",
                                        "fieldType": "input",
                                        "description": "Exclude data for the specified breakdown. This parameter can be included multiple times to exclude multiple breakdowns. For example, when breaking down by sources and using d1=referrals to drill down into referral traffic, you can exclude data for referral traffic from 'www.hubspot.com' by using e=www.hubspot.com."
                                    },
                                    {
                                        "id": "filterId",
                                        "name": "Analytics View ID",
                                        "fieldType": "input",
                                        "description": "The ID of an Analytics view. If included, the returned data will only include data that matches the view."
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort by",
                                        "fieldType": "input",
                                        "description": "If included, the results are sorted by the specified field."
                                    },
                                    {
                                        "id": "sortDir",
                                        "name": "Sort direction",
                                        "fieldType": "input",
                                        "description": "If a &sort= value is included in the request, this parameter will control the direction of sorted results. Must be one of ASC (ascending) or DESC (descending). Defaults to DESC if not included."
                                    }
                                ]
                            },
                            {
                                "id": "get_analytics_data_hosted",
                                "url": "/analytics/v2/reports/:_content_type/:_time_period",
                                "name": "Get data for HubSpot hosted content",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "start": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYYMMDD"
                                },
                                "pathParameters": [
                                    {
                                        "id": "content_type",
                                        "name": "Content type",
                                        "fieldType": "select",
                                        "options": [
                                            "landing-pages",
                                            "standard-pages",
                                            "blog-posts",
                                            "listing-pages",
                                            "knowledge-articles"
                                        ],
                                        "required": true
                                    },
                                    {
                                        "id": "time_period",
                                        "name": "Time period",
                                        "fieldType": "select",
                                        "options": [
                                            "total",
                                            "daily",
                                            "weekly",
                                            "monthly",
                                            "summarize/daily",
                                            "summarize/weekly",
                                            "summarize/monthly",
                                            "summarize/weekly_starting_monday",
                                            "summarize/quarterly",
                                            "summarize/yearly",
                                            "summarize/total"
                                        ],
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "start",
                                        "name": "start",
                                        "fieldType": "date",
                                        "description": "The start date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "end",
                                        "name": "end",
                                        "fieldType": "date",
                                        "description": "The end date for the data you want. Must be included as ISO 8601 format, YYYYMMDD. Note: The date is inclusive, and will be treated as being in the time zone of the portal."
                                    },
                                    {
                                        "id": "d1",
                                        "name": "First drilldown",
                                        "fieldType": "input",
                                        "description": "Used to drilldown into the data. This parameter is designed to reflect the functionality of the HubSpot sources reports. For example, when breaking down by sources, d1 could be organic to drill down into organic traffic data."
                                    },
                                    {
                                        "id": "d2",
                                        "name": "Second drilldown",
                                        "fieldType": "input",
                                        "description": "Used to further drill down into the data. Similar to d1, this reflects the functionality of the sources report. For example, if you have d1=organic, d2=hubspot would drill down into data for organic search traffic for the keyword `hubspot`."
                                    },
                                    {
                                        "id": "f",
                                        "name": "Filter",
                                        "fieldType": "input",
                                        "description": "ilter the returned data to include only the specified breakdown. This parameter can be included multiple times to filter for multiple breakdowns. For example, when breaking down by sources and using d1=organic to drill down into organic search traffic, you can get the data for the specific keywords `hubspot` and `marketing` using f=hubspot&f=marketing. NOTE: You must include at least 1 filter when the :time_period is monthly, weekly, or daily."
                                    },
                                    {
                                        "id": "e",
                                        "name": "Exclude",
                                        "fieldType": "input",
                                        "description": "Exclude data for the specified breakdown. This parameter can be included multiple times to exclude multiple breakdowns. For example, when breaking down by sources and using d1=referrals to drill down into referral traffic, you can exclude data for referral traffic from 'www.hubspot.com' by using e=www.hubspot.com."
                                    },
                                    {
                                        "id": "filterId",
                                        "name": "Analytics View ID",
                                        "fieldType": "input",
                                        "description": "The ID of an Analytics view. If included, the returned data will only include data that matches the view."
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort by",
                                        "fieldType": "input",
                                        "description": "If included, the results are sorted by the specified field."
                                    },
                                    {
                                        "id": "sortDir",
                                        "name": "Sort direction",
                                        "fieldType": "input",
                                        "description": "If a &sort= value is included in the request, this parameter will control the direction of sorted results. Must be one of ASC (ascending) or DESC (descending). Defaults to DESC if not included."
                                    }
                                ]
                            },
                            {
                                "id": "get_analytics_data_object",
                                "url": "/analytics/v2/reports/:_objectType/exists",
                                "name": "Check for the existence of analytics data for an object type",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object type",
                                        "fieldType": "select",
                                        "options": [
                                            "event-completions",
                                            "pages",
                                            "forms",
                                            "social-assists",
                                            "landing-pages",
                                            "standard-pages",
                                            "blog-posts",
                                            "listing-pages",
                                            "knowledge-articles"
                                        ],
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_events",
                                "url": "/reports/v2/events",
                                "name": "Get Events",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include Deleted",
                                        "fieldType": "select",
                                        "description": "If specified as true, include deleted events.",
                                        "options": [
                                            "true"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "lineitems",
                        "name": "Line Items API",
                        "endpoints": [
                            {
                                "id": "get_line_items",
                                "url": "/crm-objects/v1/objects/line_items/paged",
                                "name": "Get all line items",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "description": "By default, only the ID, a few other system fields, and the hs_product_id are returned for the line items. You can include other line item properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties. See the example for more details.",
                                        "required": true,
                                        "type": "array",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_lineitem",
                                "url": "/crm-objects/v1/objects/line_items/:_id",
                                "name": "Get a line item by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Line Item ID",
                                        "description": "The ID of the line item you want to get.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID, a few other system fields, and the hs_product_id property are returned for the line item. You can include other properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties. See the example for more details.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_changes_lineitems",
                                "url": "/crm-objects/v1/change-log/line_items",
                                "name": "Get a log of changes for line items",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "timestamp",
                                        "name": "Timestamp",
                                        "description": "The timestamp of the last change you pulled.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "changeType",
                                        "name": "Change Type",
                                        "description": "The last changeType you pulled.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "objectId",
                                        "name": "Object Id",
                                        "description": "The ID of the last object you received changes for.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_group_of_lineitem_by_id",
                                "url": "/crm-objects/v1/objects/line_items/batch-read",
                                "name": "Get a group of line items by ID",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "bodyParameters": [
                                    {
                                        "id": "ids",
                                        "name": "Line item IDs",
                                        "description": "An array of line item IDs that you want to get. You can include up to 100 IDs in a single request.",
                                        "required": true,
                                        "fieldType": "input",
                                        "type": "array"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID, a few other system fields, and the hs_product_id property are returned for the line item. You can include other properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties. See the example for more details.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "propertiesWithHistory",
                                        "description": "This parameter behaves exactly like the properties parameter above, with the exception that properties included with this parameter also return the full version history for the property.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_associations",
                        "name": "CRM Associations API",
                        "endpoints": [
                            {
                                "id": "get_associations_crm_obj",
                                "url": "crm-associations/v1/associations/:_objectId/HUBSPOT_DEFINED/:_definitionId",
                                "name": "Get associations for CRM object",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectId",
                                        "name": "Object ID",
                                        "description": "The ID of the object that you want to get the associations for.",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "definitionId",
                                        "name": "Association type",
                                        "description": "The ID of the type of associations you want.For example, if you have a contact (identified by its vid) and you want the associated tickets, you would use definition ID 15. If you have a ticket (identified by its objectId) and you want the associated contacts, you would use definition ID 16. See the table below for the full list of definition IDs",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contacts_lists",
                        "name": "Contact Lists API",
                        "endpoints": [
                            {
                                "id": "getallcontactlists",
                                "url": "/contacts/v1/lists",
                                "name": "Get all contacts",
                                "resourcePath": "lists",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "count",
                                        "name": "List Count",
                                        "description": "An integer that represents the number of lists that you want returned to your call. If the parameter is not included, it defaults to 20. The maximum accepted value is 250; higher values will be accepted but you will only get 250 records.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_static_contact_lists",
                                "url": "/contacts/v1/lists/static",
                                "name": "Get static contact lists",
                                "resourcePath": "lists",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "count",
                                        "name": "List Count",
                                        "description": "An integer that represents the number of lists that you want returned to your call. If the parameter is not included, it defaults to 20. The maximum accepted value is 250; higher values will be accepted but you will only get 250 records.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_contact_list_by_id",
                                "url": "/contacts/v1/lists/:_list_id",
                                "name": "Get a contact list by its unique ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "list_id",
                                        "name": "List ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_all_contact_lists",
                                "url": "/contacts/v1/lists/batch",
                                "name": "Get a group of contact lists",
                                "resourcePath": "lists",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "listId",
                                        "name": "List IDs",
                                        "fieldType": "input",
                                        "description": "An integer that represents the list IDs that you want returned to your call. As you can see in the example URL below, you can specify as many 'listId' parameters as you wish on the URL to return multiple lists at once. Any list IDs that are invalid will be ignored",
                                        "type": "array",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_dynamic_contact_lists",
                                "url": "/contacts/v1/lists/dynamic",
                                "name": "Get dynamic contact lists (active lists)",
                                "resourcePath": "lists",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "count",
                                        "name": "List Count",
                                        "description": "An integer that represents the number of lists that you want returned to your call. If the parameter is not included, it defaults to 20. The maximum accepted value is 250; higher values will be accepted but you will only get 250 records.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_contact_in_list",
                                "url": "/contacts/v1/lists/:_list_id/contacts/all",
                                "name": "Get recently added contacts from a list",
                                "resourcePath": "lists",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "vid-offset",
                                    "pageArgument": "vidOffset"
                                },
                                "pathParameters": [
                                    {
                                        "id": "list_id",
                                        "name": "List ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "timeOffset",
                                        "name": "Time Offset",
                                        "description": "Used in conjunction with the vidOffset paramter to page through the recent contacts. Every call to this endpoint will return a time-offset value. This value is used in the timeOffset parameter of the next call to get the next page of contacts.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "property",
                                        "name": "Property",
                                        "fieldType": "input",
                                        "description": "To specify comma seperated properties. For Ex: firstname,email",
                                        "type": "array"
                                    },
                                    {
                                        "id": "propertyMode",
                                        "name": "Property Mode",
                                        "fieldType": "select",
                                        "description": "To specify if the current value for a property should be fetched, or the value and all the historical values for that property. Default is “value_and_history”",
                                        "options": [
                                            "value_only",
                                            "value_and_history"
                                        ]
                                    },
                                    {
                                        "id": "formSubmissionMode",
                                        "name": "Form Submission Mode",
                                        "fieldType": "select",
                                        "description": "To specify which form submissions should be fetched. Default is “all”",
                                        "options": [
                                            "all",
                                            "none",
                                            "newest",
                                            "oldest"
                                        ]
                                    },
                                    {
                                        "id": "showListMemberships",
                                        "name": "List Memberships",
                                        "fieldType": "select",
                                        "description": "To indicate whether current list memberships should be fetched for the contact. Default is true",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog",
                        "name": "CMS Blog API",
                        "endpoints": [
                            {
                                "id": "list_blog",
                                "url": "/content/api/v2/blogs",
                                "name": "List blogs",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "get_blog_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id",
                                "name": "Get a blog by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "get_blog_versions_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id/versions",
                                "name": "List previous versions of the blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_blog_versions_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id/versions/:_version_id",
                                "name": "Get the previous version of the blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_authors",
                        "name": "CMS Blog Authors API",
                        "endpoints": [
                            {
                                "id": "list_blog_authors",
                                "url": "/blogs/v3/blog-authors",
                                "name": "List blog authors",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "name__icontains",
                                        "name": "fullName",
                                        "description": "Search for authors by full name. Supports exact value matching, 'contains' searching, and 'icontains' case-insensitive searching (e.g. name__icontains=author1,author2)",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "email",
                                        "name": "email",
                                        "description": "Search for authors by email. Supports exact value matching.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "search_blog_authors",
                                "url": "/blogs/v3/blog-authors/search",
                                "name": "Search blog authors",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "order",
                                        "name": "order",
                                        "description": "the attribute to order the results by. Prepend a '-' to invert.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "q",
                                        "name": "q",
                                        "description": "Search for authors whose names, emails, or url slugs contain the given string (q=X).",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "active",
                                        "name": "active",
                                        "fieldType": "input",
                                        "description": "Filter authors by whether or not they have published blog posts (true or false)"
                                    },
                                    {
                                        "id": "blog",
                                        "name": "blog",
                                        "fieldType": "input",
                                        "description": "Filter authors by the blog they have published to (value is a blog ID)"
                                    }
                                ]
                            },
                            {
                                "id": "get_blogauthor_by_id",
                                "url": "/blogs/v3/blog-authors/:_blog_id",
                                "name": "Get blog author by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_comments",
                        "name": "CMS Blog Comments API",
                        "endpoints": [
                            {
                                "id": "list_comments",
                                "url": "/comments/v3/comments",
                                "name": "List comments",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "portalId",
                                        "name": "portalId",
                                        "description": "The portal number associated with your api key/token",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "contentId",
                                        "name": "contentId",
                                        "description": "Allows you get comments for a specific blog post. Include 'contentId={post ID}' to only get comments for that post.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "state",
                                        "name": "state",
                                        "description": "Comment state.",
                                        "fieldType": "select",
                                        "options": [
                                            "APPROVED",
                                            "SPAM",
                                            "REJECTED",
                                            "PENDING_MODERATION"
                                        ]
                                    },
                                    {
                                        "id": "reverse",
                                        "name": "reverse",
                                        "description": "If you want comments oldest to newest, supply 'reverse=true'.",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "fieldType": "input",
                                        "description": "Matches arbitrary text within a comment."
                                    }
                                ]
                            },
                            {
                                "id": "get_blogcomment_by_id",
                                "url": "/comments/v3/comments/:_comment_id",
                                "name": "Get a blog comment by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "comment_id",
                                        "name": "Comment ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_post",
                        "name": "CMS Blog Post API",
                        "endpoints": [
                            {
                                "id": "list_blog_post",
                                "url": "/content/api/v2/blog-posts",
                                "name": "List blog posts",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Returns the posts that match the boolean lookup (e.g. archived=false returns all posts currently not archived).",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "state",
                                        "name": "state",
                                        "description": "",
                                        "fieldType": "select",
                                        "options": [
                                            "DRAFT",
                                            "PUBLISHED",
                                            "SCHEDULED"
                                        ]
                                    },
                                    {
                                        "id": "blog_author_id",
                                        "name": "blog_author_id",
                                        "description": "Returns the posts that match a particular blog author ID value.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "order_by",
                                        "name": "order_by",
                                        "description": "Return the posts ordered by a particular field value. Blog posts can currently only be sorted by publish_date. Use a negative value to sort in descending order (e.g. order_by=-publish_date).",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Returns the posts that match the name value. Supports exact, contains, icontains, ne lookups.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "description": "Returns the posts that match a particular slug value.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "campaign",
                                        "name": "campaign",
                                        "description": "Returns the posts that match the campaign guid. The campaign guid can be found in the campaign dashboard URL (e.g. https://app.hubspot.com/campaigns/:portal_id/#/details/:campaign_guid).",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "content_group_id",
                                        "name": "content_group_id",
                                        "fieldType": "input",
                                        "description": "Returns the posts that match the blog guid. The blog guid can be found in the blog dashboard URL (e.g. https://app.hubspot.com/blog/:portal_id/blogs/:blog_guid/analyze/dashboard)."
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    }
                                ]
                            },
                            {
                                "id": "get_blogpost_by_id",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id",
                                "name": "Get a blog post by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "Blog Post ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_current_autosave_buffer_by_id",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/buffer",
                                "name": "Gets the current contents of the auto-save buffer",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "Blog Post ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_autosave_buffer_differsby_id",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/has-buffered-changes",
                                "name": "Determine if the auto-save buffer differs from the live blog post",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "Blog Post ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_versions_blogpost_id",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/versions",
                                "name": "List previous versions of the blog post",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "Blog Post ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_versions_blogpost_version_id",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/versions/:_version_id",
                                "name": "Get the previous version of the blog post",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "Blog Post ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_topics",
                        "name": "CMS Blog Topics API",
                        "endpoints": [
                            {
                                "id": "list_blog_topics",
                                "url": "/blogs/v3/topics",
                                "name": "List blog topics",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Search for topics by id. Supports exact value matching and the 'in' range filter (e.g. id__in=348109009,348109019).",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Returns the posts that match the name value. Supports exact, contains, icontains, ne lookups.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "description": "Returns the posts that match a particular slug value.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    }
                                ]
                            },
                            {
                                "id": "search_blog_topics",
                                "url": "/blogs/v3/topics/search",
                                "name": "Search blog topics",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "q",
                                        "name": "q",
                                        "description": "Search for topics whose names or url slugs contain the given string.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "blog",
                                        "name": "blog",
                                        "description": "Filter topics by a blog they are used on (value is a blog ID).",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "active",
                                        "name": "active",
                                        "description": "Filter topics by whether or not they are associated with any published blog posts (true or false).",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Returns the posts that match the name value. Supports exact, contains, icontains, ne lookups.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "description": "Returns the posts that match a particular slug value.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    }
                                ]
                            },
                            {
                                "id": "get_blogpost_by_id",
                                "url": "/blogs/v3/topics/:_topic_id",
                                "name": "Get a blog topic by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "topic_id",
                                        "name": "Topic ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_domains",
                        "name": "CMS Domains API",
                        "endpoints": [
                            {
                                "id": "list_domains",
                                "url": "/cos-domains/v1/domains",
                                "name": "List domains",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Search for topics by id. Supports exact value matching and the 'in' range filter (e.g. id__in=348109009,348109019).",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "domain",
                                        "name": "domain",
                                        "description": "exact",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "is_resolving",
                                        "name": "is_resolving",
                                        "description": "exact.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "primary_site_page",
                                        "name": "primary_site_page",
                                        "description": "exact",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    }
                                ]
                            },
                            {
                                "id": "get_domain_by_id",
                                "url": "/cos-domains/v1/domains/:_domain_id",
                                "name": "Get a domain by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "domain_id",
                                        "name": "Domain ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_files",
                        "name": "CMS Files API",
                        "endpoints": [
                            {
                                "id": "list_all_files",
                                "url": "/filemanager/api/v2/files",
                                "name": "List the metadata for all files",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "alt_key",
                                        "name": "alt_key",
                                        "description": "Specify a file alt_key.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Get only archived or not archived files. This paramater is a boolean so it takes either a true or false value.",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "extension",
                                        "name": "extension",
                                        "description": "Get all files with a certain extension. e.g. extension=pdf returns all .pdf files.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "folder_id",
                                        "name": "folder_id",
                                        "description": "Get all files in a certain folder. By default all files are returned.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Search for topics by id. Supports exact value matching and the 'in' range filter (e.g. id__in=348109009,348109019).",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Get files with a certain naming convention. Available filters are exact, contains, icontains. Use the paramter followed by two underscores and the filter of choice. For example name__icontains=abc will return all files that have the characters abc (in a row) in the filename.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "type",
                                        "name": "type",
                                        "description": "Get files of a certain type. Available filters are exact and ne. Use the paramter followed by two underscores and the filter of choice. For example type__ne=IMG will return all files that are not images.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    }
                                ]
                            },
                            {
                                "id": "list_the_folder_metadta",
                                "url": "/filemanager/api/v2/folders",
                                "name": "List the folder metadata",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "deleted_at",
                                        "name": "deleted_at",
                                        "description": "Get folders deleted on or after a certain date. Available filers are exact, range, gt, gte, lt, lte. Use the parameter followed by two underscores and the filter of choice. For example deleted_at__lt=1431489600000 will return all files deleted before May 15, 2015. Filters take unix timestamps in milliseconds."
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Get a specific folder."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Get folders with a certain naming convention. Available filters are exact, contains, icontains. Use the paramter followed by two underscores and the filter of choice. For example name__icontains=abc will return all folders that have the characters abc (in a row) in the name."
                                    },
                                    {
                                        "id": "parent_folder_id",
                                        "name": "parent_folder_id",
                                        "description": "Get all folders in a specific folder. Available filers are exact, range, gt, gte, lt, lte. Use the parameter followed by two underscores and the filter of choice. For example parent_folder_id__lte=2857188310 will return all folders with an id less than or equal to 2857188310."
                                    }
                                ]
                            },
                            {
                                "id": "get_file_metadata",
                                "url": "/filemanager/api/v2/files/:_file_id",
                                "name": "Get file metadata",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "file_id",
                                        "name": "File ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_hubdb",
                        "name": "CMS HubDB API",
                        "endpoints": [
                            {
                                "id": "list_all_tables",
                                "url": "/hubdb/api/v2/tables",
                                "name": "Get all tables",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "objects"
                            },
                            {
                                "id": "get_details_specific_table",
                                "url": "/hubdb/api/v2/tables/:_tableId",
                                "name": "Get details for a specific table",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_blog_versions_by_id",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows",
                                "name": "List previous versions of the blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "orderBy",
                                        "name": "Order By",
                                        "fieldType": "input",
                                        "description": "Return the rows in the natural order of the specified column. You can reverse the sort by adding a - to the column name: orderBy=-bar. You can include this parameter multiple times to sort by multiple columns."
                                    },
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of rows to return in the response. Defaults to 1000."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_layouts",
                        "name": "CMS Layouts API",
                        "endpoints": [
                            {
                                "id": "list_layouts",
                                "url": "/content/api/v2/layouts",
                                "name": "List layouts",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "category_id",
                                        "name": "category_id",
                                        "fieldType": "input",
                                        "description": "exact"
                                    },
                                    {
                                        "id": "label",
                                        "name": "label",
                                        "fieldType": "input",
                                        "description": "exact."
                                    },
                                    {
                                        "id": "path",
                                        "name": "path",
                                        "fieldType": "input",
                                        "description": "exact."
                                    },
                                    {
                                        "id": "custom_head",
                                        "name": "custom_head",
                                        "fieldType": "input",
                                        "description": "Custom HTML added to the head of pages using the layout."
                                    },
                                    {
                                        "id": "include_default_custom_css",
                                        "name": "include_default_custom_css",
                                        "fieldType": "input",
                                        "description": "Flag to include the Primary CSS stylesheet. Defaults to use value from Site Settings. Can be overridden at the page level."
                                    },
                                    {
                                        "id": "enable_domain_stylesheet",
                                        "name": "enable_domain_stylesheet",
                                        "fieldType": "input",
                                        "description": "Flag to include the domain stylesheets for a page using the layout. Can be overridden at the page level."
                                    },
                                    {
                                        "id": "include_default_custom_css",
                                        "name": "include_default_custom_css",
                                        "fieldType": "input",
                                        "description": "List of references to stylesheets that are attached directly to the layout. Can be overridden at the page level."
                                    }
                                ]
                            },
                            {
                                "id": "get_layout_by_id",
                                "url": "/content/api/v2/layouts/:_layout_id",
                                "name": "Get the layout by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "layout_id",
                                        "name": "Layout ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_current_content_layout_by_id",
                                "url": "/content/api/v2/layouts/:_layout_id/buffer",
                                "name": "Gets the current contents of the auto-save buffer",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "layout_id",
                                        "name": "Layout ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_autosave_buffer_differs_by_id",
                                "url": "/content/api/v2/layouts/:_layout_id/has-buffered-changes",
                                "name": "Determine if the auto-save buffer differs from the live layout",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "layout_id",
                                        "name": "Layout ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "list_previous_versions",
                                "url": "/content/api/v2/layouts/:_layout_id/versions",
                                "name": "List previous versions of the layout",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "layout_id",
                                        "name": "Layout ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "list_previous_versions_of_layout",
                                "url": "/content/api/v2/layouts/:_layout_id/versions/:_version_id",
                                "name": "Get the previous version of the layout",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "layout_id",
                                        "name": "Layout ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_page_publishing",
                        "name": "CMS Page Publishing API",
                        "endpoints": [
                            {
                                "id": "list_pages",
                                "url": "/content/api/v2/pages",
                                "name": "List pages",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "publish_date__exact",
                                        "name": "publish_date exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "publish_date__lt",
                                        "name": "publish_date lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "publish_date__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "publish_date__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "publish_date__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "publish_date__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name__icontains",
                                        "name": "name icontains",
                                        "fieldType": "input",
                                        "description": "The case sensitive name of the blog"
                                    },
                                    {
                                        "id": "name__exact",
                                        "name": "name exact",
                                        "fieldType": "input",
                                        "description": "The exact name of the blog"
                                    },
                                    {
                                        "id": "name__in",
                                        "name": "name in",
                                        "fieldType": "input",
                                        "description": "The name in case sensitive of the blog"
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "campaign_exact",
                                        "name": "campaign",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "id__in",
                                        "name": "id in",
                                        "fieldType": "integer",
                                        "description": ""
                                    },
                                    {
                                        "id": "id__exact",
                                        "name": "id exact",
                                        "fieldType": "integer",
                                        "description": ""
                                    },
                                    {
                                        "id": "archived__exact",
                                        "name": "archived exact",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "is_draft__exact",
                                        "name": "is draft exact",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "slug__exact",
                                        "name": "slug exact",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "slug__in",
                                        "name": "slug in",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "subcategory__exact",
                                        "name": "subcategory exact",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "subcategory__in",
                                        "name": "subcategory in",
                                        "fieldType": "input",
                                        "description": ""
                                    }
                                ]
                            },
                            {
                                "id": "get_page_by_id",
                                "url": "/content/api/v2/pages/:_page_id",
                                "name": "Get a Page by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "page_id",
                                        "name": "Page ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_current_conetnts_autosave_buffer_by_id",
                                "url": "/content/api/v2/pages/:_page_id/buffer",
                                "name": "Gets the current contents of the auto-save buffer",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "page_id",
                                        "name": "Page ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_current_conetnts_autosave_buffered_changes_by_id",
                                "url": "/content/api/v2/pages/:_page_id/has-buffered-changes",
                                "name": "Determine if the auto-save buffer differs from the live Page",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "page_id",
                                        "name": "Page ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_versions_of_page_by_id",
                                "url": "/content/api/v2/pages/:_page_id/versions",
                                "name": "List previous versions of a Page",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "page_id",
                                        "name": "Page ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_site_maps",
                        "name": "CMS Site Maps",
                        "endpoints": [
                            {
                                "id": "list_site_maps",
                                "url": "/content/api/v2/site-maps",
                                "name": "List Site Maps",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "name__exact",
                                        "name": "name",
                                        "description": "the name identifier to fetch the records",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "id__exact",
                                        "name": "id",
                                        "description": "the id identifier to fetch the records",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    }
                                ]
                            },
                            {
                                "id": "get_sitemap_by_id",
                                "url": "/content/api/v2/site-maps/:_site_map_id",
                                "name": "Get a Site Map by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "site_map_id",
                                        "name": "Site Map ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_autosave_sitemap_by_id",
                                "url": "/content/api/v2/site-maps/:_sitemap_id/buffer",
                                "name": "Gets the current contents of the auto-save buffer",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "sitemap_id",
                                        "name": "Site Map ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_live_autobuffered_sitemap_by_id",
                                "url": "/content/api/v2/site-maps/:_sitemap_id/has-buffered-changes",
                                "name": "Determine if the auto-save buffer differs from the live SiteMap",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "sitemap_id",
                                        "name": "Site Map ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_sitemaps_versions_by_id",
                                "url": "/content/api/v2/site-maps/:_sitemap_id/versions",
                                "name": "List previous versions of a SiteMap",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "sitemap_id",
                                        "name": "Site Map ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_sitemap_versions_by_id",
                                "url": "/content/api/v2/site-maps/:_sitemap_id/versions/:_version_id",
                                "name": "Get the previous version of the Site Map",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "sitemap_id",
                                        "name": "Site Map ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_site_search",
                        "name": "CMS Site Search API",
                        "endpoints": [
                            {
                                "id": "search_site",
                                "url": "/contentsearch/v2/search",
                                "name": "Search your site",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "results",
                                "queryParameters": [
                                    {
                                        "id": "portalId",
                                        "name": "Portal ID",
                                        "description": "The ID of the portal the contact search should be performed against.",
                                        "fieldType": "integer",
                                        "required": true
                                    },
                                    {
                                        "id": "term",
                                        "name": "Search Term",
                                        "description": "The term to be used in the content search.",
                                        "fieldType": "integer",
                                        "required": true
                                    },
                                    {
                                        "id": "type",
                                        "name": "Type",
                                        "description": "Specifies the type of content to search. Can be one or more of SITE_PAGE, LANDING_PAGE, BLOG_POST, LISTING_PAGE, and KNOWLEDGE_ARTICLE. Defaults to all content types except LANDING_PAGE and KNOWLEDGE_ARTICLE",
                                        "fieldType": "array"
                                    },
                                    {
                                        "id": "Domain",
                                        "name": "domain",
                                        "description": "Specifies the domain(s) to be searched. Can be one or more of the portal's connected domains. Defaults to all domains.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "property",
                                        "name": "property",
                                        "description": "Specifies which properties to search for (defaulting to all properties). Options are title, description, and html. For blog posts, additional search properties are author_full_name, author_handle, and tag.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "groupId",
                                        "name": "Group ID",
                                        "fieldType": "integer",
                                        "description": "Specifies which blog(s) to be searched by blog ID. Can be used multiple times to search more than one blog."
                                    },
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "fieldType": "integer",
                                        "description": "Specifies a specific HubDB table to search. Only returns results from the specified table. Can be used in tandem with the hubdbQuery parameter to further filter results."
                                    },
                                    {
                                        "id": "hubdbQuery",
                                        "name": "HubDB Query",
                                        "fieldType": "input",
                                        "description": "Specify a HubDB query to further filter the search results. Used in tandem with the tableId parameter above."
                                    },
                                    {
                                        "id": "pathPrefix",
                                        "name": "Path Prefix",
                                        "fieldType": "input",
                                        "description": "Specifies a path prefix to filter search results. Will only return results with URL paths that start with the specified parameter. Can be used multiple times."
                                    },
                                    {
                                        "id": "matchPrefix",
                                        "name": "Match Prefix",
                                        "fieldType": "input",
                                        "description": "Inverts the behavior of the pathPrefix filter when set to 'false'. (Defaults to true)."
                                    },
                                    {
                                        "id": "popularityBoost",
                                        "name": "Popularity Boost",
                                        "fieldType": "integer",
                                        "description": "Specifies how strongly a result is boosted based on its view count. Defaults to 1.0."
                                    },
                                    {
                                        "id": "maxBoost",
                                        "name": "Maximum Boost",
                                        "fieldType": "integer",
                                        "description": "Specifies the maximum amount a result will be boosted based on its view count. Defaults to 5.0."
                                    },
                                    {
                                        "id": "boostRecent",
                                        "name": "Recency Boost",
                                        "fieldType": "input",
                                        "description": "Specifies a relative time window where scores of documents published outside this time window decay. This can only be used for blog posts. For example, boostRecent=10d will boost documents published within the last 10 days. Supported timeunits are ms (milliseconds), s (seconds), m (minutes), h (hours), d (days)."
                                    },
                                    {
                                        "id": "minScore",
                                        "name": "Minimum Score",
                                        "fieldType": "input",
                                        "description": "Specifies the minimum score threshold to return a given result. This parameter is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall."
                                    },
                                    {
                                        "id": "length",
                                        "name": "Length",
                                        "fieldType": "select",
                                        "options": [
                                            "SHORT",
                                            "LONG"
                                        ],
                                        "description": "Specifies the length of the search results. Can be set to LONG or SHORT. Setting this parameter to SHORT will return a short highlight of the meta description. Setting this parameter to LONG will build the snippet based on the html/content of the page. If you are not using the snippet, setting this parameter to SHORT will give a slight performance improvement."
                                    },
                                    {
                                        "id": "analytics",
                                        "name": "Analytics",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ],
                                        "description": "Specifies whether or not to enable tracking links. Defaults to false. When set to true, the content's URL will be replaced with a tracking link."
                                    },
                                    {
                                        "id": "autocomplete",
                                        "name": "Autocomplete",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ],
                                        "description": "Specifies whether or not you are showing autocomplete results. Defaults to false. If you're not showing autocomplete results, this parameter should be excluded."
                                    }
                                ]
                            },
                            {
                                "id": "get_indexed_properties_by_id",
                                "url": "/contentsearch/v2/search/:_documentId",
                                "name": "Get indexed properties",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "documentId",
                                        "name": "Document ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "type",
                                        "name": "Type",
                                        "fieldType": "select",
                                        "options": [
                                            "SITE_PAGE",
                                            "BLOG_POST",
                                            "KNOWLEDGE_ARTICLE"
                                        ],
                                        "required": true,
                                        "description": "Specifies the minimum score threshold to return a given result. This parameter is intentionally set low by default in order to return many results. Increase this for higher precision, but less recall."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_templates",
                        "name": "CMS Templates API",
                        "endpoints": [
                            {
                                "id": "list_templates",
                                "url": "/content/api/v2/templates",
                                "name": "List Templates",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "id__exact",
                                        "name": "id",
                                        "fieldType": "input",
                                        "description": "The id unique identifier"
                                    },
                                    {
                                        "id": "is_available_for_new_content_exact",
                                        "name": "is_available_for_new_content",
                                        "fieldType": "input",
                                        "description": "exact"
                                    },
                                    {
                                        "id": "label_exact",
                                        "name": "label",
                                        "fieldType": "input",
                                        "description": ""
                                    },
                                    {
                                        "id": "path_exact",
                                        "name": "path",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    }
                                ]
                            },
                            {
                                "id": "get_template_by_id",
                                "url": "/content/api/v2/templates/:_template_id",
                                "name": "Get the Template by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "template_id",
                                        "name": "Template ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_autosave_buffer_by_id",
                                "url": "/content/api/v2/templates/:_template_id/buffer",
                                "name": "Gets the current contents of the auto-save buffer",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "template_id",
                                        "name": "Template ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_autosave_differs_buffer_by_id",
                                "url": "/content/api/v2/templates/:_template_id/has-buffered-changes",
                                "name": "Determine if the auto-save buffer differs from the live Template",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "template_id",
                                        "name": "Template ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "getpreviousversionsid",
                                "url": "/content/api/v2/templates/:_template_id/versions",
                                "name": "List previous versions of the Template",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "template_id",
                                        "name": "Template ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_versions_id",
                                "url": "/content/api/v2/templates/:_template_id/versions/:_version_id",
                                "name": "Get the previous version of the Template",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "template_id",
                                        "name": "Template ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_url_mappings",
                        "name": "CMS URL Mappings API",
                        "endpoints": [
                            {
                                "id": "list_url_mappings",
                                "url": "/url-mappings/v3/url-mappings",
                                "name": "List url mappings",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "created__gt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "id__in",
                                        "name": "id",
                                        "description": "Search for mappings by id. Supports exact value matching and the 'in' range filter (e.g. id__in=348109009,348109019)",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "routePrefix",
                                        "name": "routePrefix",
                                        "description": "Search for mappings with a specific routePrefix string value. Must be an exact value match.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "destination",
                                        "name": "destination",
                                        "description": "Search for mappings with a specific destination string value. Must be an exact value match.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "contentGroupId",
                                        "name": "contentGroupId",
                                        "description": "Search for mappings created for a specific content group ID (aka blog ID). Must be an exact value match.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "name__in",
                                        "name": "name",
                                        "description": "Search for mappings by internal name. Supports exact value matching and the 'in' range filter (e.g. name__in=list-by-author,list-by-topic).",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "isOnlyAfterNotFound",
                                        "name": "isOnlyAfterNotFound",
                                        "description": "Filter results by this boolean field's value (true, false)",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "isRegex",
                                        "name": "isRegex",
                                        "description": "Filter results by this boolean field's value (true, false)",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "isMatchFullUrl",
                                        "name": "isMatchFullUrl",
                                        "description": "Filter results by this boolean field's value (true, false)",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "isPattern",
                                        "name": "isPattern",
                                        "description": "Filter results by this boolean field's value (true, false)",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "description": "Use the casing=snake parameter to change the API's casing for all query parameters (including those above) and JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deletedAt",
                                        "name": "deletedAt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    }
                                ]
                            },
                            {
                                "id": "get_url_mapping_by_id",
                                "url": "/url-mappings/v3/url-mappings/:_url_mapping_id",
                                "name": "Get the url mapping by ID",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "url_mapping_id",
                                        "name": "URL Mapping ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "casing",
                                        "name": "casing",
                                        "fieldType": "input",
                                        "description": "Use the casing=snake parameter to change the API's casing for returned JSON fields (below) to snake_case, rather than camelCase, which is the default. This option is provided for backwards-compatibility and ease of migration from Content v2 APIs, which used snake_case."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_pipelines",
                        "name": "CRM Pipelines API",
                        "endpoints": [
                            {
                                "id": "list_pipelines",
                                "url": "/crm-pipelines/v1/pipelines/:_object_type",
                                "name": "Get all pipelines for a specified object type",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object Type",
                                        "required": true,
                                        "fieldType": "select",
                                        "options": [
                                            "deals",
                                            "tickets"
                                        ]
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "includeInactive",
                                        "name": "Include inactive",
                                        "description": "Whether or not to include inactive pipelines. Inactive pipelines and stages cannot be used when creating or updating objects.",
                                        "fieldType": "select",
                                        "options": [
                                            "EXCLUDE_DELETED",
                                            "INCLUDE_DELETED"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_blog_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id",
                                "name": "Get a blog by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "get_blog_versions_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id/versions",
                                "name": "List previous versions of the blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            },
                            {
                                "id": "get_previous_blog_versions_by_id",
                                "url": "/content/api/v2/blogs/:_blog_id/versions/:_version_id",
                                "name": "Get the previous version of the blog",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "blog_id",
                                        "name": "Blog ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "version_id",
                                        "name": "Version ID",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "created__exact",
                                        "name": "Created exact",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lt",
                                        "name": "Created lt",
                                        "fieldType": "date",
                                        "description": "When the post was created, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gt",
                                        "name": "Created gt",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__gte",
                                        "name": "Created gte",
                                        "fieldType": "date",
                                        "description": "When the post was first created,greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__lte",
                                        "name": "Created lte",
                                        "fieldType": "date",
                                        "description": "When the post was first created, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "created__range",
                                        "name": "Created range",
                                        "fieldType": "date",
                                        "description": "When the post was first created, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "updated__exact",
                                        "name": "Updated exact",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lt",
                                        "name": "Updated lt",
                                        "fieldType": "date",
                                        "description": "When the post was Updated, less than the time in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gt",
                                        "name": "Updated gt",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated ,greater than in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__gte",
                                        "name": "Updated gte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, greater than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__lte",
                                        "name": "Updated lte",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, less than or equal in milliseconds since the epoch."
                                    },
                                    {
                                        "id": "updated__range",
                                        "name": "Updated range",
                                        "fieldType": "date",
                                        "description": "When the post was first Updated, in milliseconds within range since the epoch."
                                    },
                                    {
                                        "id": "deleted_at",
                                        "name": "Deleted at",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_exact",
                                        "name": "Deleted exact",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gt",
                                        "name": "Deleted gt",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "deleted_gte",
                                        "name": "Deleted gte",
                                        "fieldType": "date",
                                        "description": "When the post was deleted, in milliseconds since the epoch. Zero if the blog post was never deleted. Use a DELETE request to delete the post, do not set this directly."
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "fieldType": "input",
                                        "description": "The internal name of the blog"
                                    },
                                    {
                                        "id": "allow_comments",
                                        "name": "allow_comments",
                                        "fieldType": "select",
                                        "description": "Are comments enabled for the blog",
                                        "options": [
                                            "true",
                                            "false"
                                        ]
                                    },
                                    {
                                        "id": "html_title",
                                        "name": "html_title",
                                        "fieldType": "input",
                                        "description": "The title in the <title> attribute of the page, shows up in the browsers title bar and as the title in Google search results."
                                    },
                                    {
                                        "id": "public_title",
                                        "name": "public_title",
                                        "fieldType": "input",
                                        "description": "The header of the blog."
                                    },
                                    {
                                        "id": "root_url",
                                        "name": "root_url",
                                        "fieldType": "input",
                                        "description": "The full URL with domain and scheme to the blog post."
                                    },
                                    {
                                        "id": "slug",
                                        "name": "slug",
                                        "fieldType": "input",
                                        "description": "The path of the URL on which the post will live. Changing this will change the URL."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "email_subscriptions",
                        "name": "Email Subscription API",
                        "endpoints": [
                            {
                                "id": "get_email_subscriptions",
                                "url": "/email/public/v1/subscriptions",
                                "doesNotSupportPaging": true,
                                "name": "Get email subscription types for a Hub ID",
                                "resourcePath": "subscriptionDefinitions",
                                "queryParameters": [
                                    {
                                        "name": "HubSpot Portal ID",
                                        "id": "portalId",
                                        "description": "The HubSpot Portal ID for the portal that you're making the call for.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "list_subscriptions_timeline",
                                "url": "/email/public/v1/subscriptions/timeline",
                                "name": "View subscriptions timeline for a portal",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "startTimestamp": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "timeline",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "startTimestamp",
                                        "name": "Start Timestamp",
                                        "fieldType": "date",
                                        "description": "Only return timeline items which occurred at or after the given timestamp (in milliseconds since epoch)."
                                    },
                                    {
                                        "id": "changeType",
                                        "name": "Change Type",
                                        "fieldType": "date",
                                        "description": "Only return timeline changes of the specified type (case-sensitive). The possible types are described in the Email Subscriptions Bible."
                                    },
                                    {
                                        "id": "endTimestamp",
                                        "name": "End Timestamp",
                                        "fieldType": "date",
                                        "description": "Only return timeline items which occurred at or before the given timestamp (in milliseconds since epoch)."
                                    },
                                    {
                                        "id": "includeSnapshots",
                                        "name": "Include Snapshots",
                                        "fieldType": "input",
                                        "description": "Include the user's full subscription snapshot with each timeline item. This snapshot is equivalent to what this endpoint would have returned at that time."
                                    }
                                ]
                            },
                            {
                                "id": "get_email_subscriptions_by_email_address",
                                "url": "/email/public/v1/subscriptions/:_email_address",
                                "name": "Get email subscription status for an email address",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "email_address",
                                        "name": "Email Address",
                                        "description": "The email address for which you are requesting subscription status.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "email_events",
                        "name": "Email Events API",
                        "endpoints": [
                            {
                                "id": "get_all_campaigns",
                                "url": "/email/public/v1/campaigns/by-id",
                                "name": "Get all campaign IDs for a portal",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "campaigns",
                                "queryParameters": [
                                    {
                                        "name": "Limit",
                                        "id": "limit",
                                        "description": "Limit the maximum number of results you would like returned.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "get_all_recent_campaigns",
                                "url": "/email/public/v1/campaigns",
                                "name": "Get campaign IDs with recent activity for a portal",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "campaigns",
                                "queryParameters": [
                                    {
                                        "name": "Limit",
                                        "id": "limit",
                                        "description": "Limit the maximum number of results you would like returned.",
                                        "fieldType": "integer"
                                    }
                                ]
                            },
                            {
                                "id": "list_emil_events",
                                "url": "/email/public/v1/events",
                                "name": "Get email events ",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "startTimestamp": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "events",
                                "queryParameters": [
                                    {
                                        "id": "appId",
                                        "name": "HubSpot App ID",
                                        "description": "Only return events which correspond to the given HubSpot Application ID.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "campaignId",
                                        "name": "HubSpot Campaign ID",
                                        "description": "Only return events from the given HubSpot Campaign ID.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "eventType",
                                        "name": "Event Type",
                                        "description": "Only return events of the specified type (case-sensitive). The possible types are described in the Email Events Bible.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "recipient",
                                        "name": "Recipient Email Address",
                                        "description": "Only return events related to the given recipient.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Defaults to 20.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "startTimestamp",
                                        "name": "Start Timestamp",
                                        "fieldType": "date",
                                        "description": "Only return timeline items which occurred at or after the given timestamp (in milliseconds since epoch)."
                                    },
                                    {
                                        "id": "excludeFilteredEvents",
                                        "name": "Exclude Filtered Events",
                                        "fieldType": "select",
                                        "options": [
                                            "true",
                                            "false"
                                        ],
                                        "description": "Only return timeline changes of the specified type (case-sensitive). The possible types are described in the Email Subscriptions Bible."
                                    },
                                    {
                                        "id": "endTimestamp",
                                        "name": "End Timestamp",
                                        "fieldType": "date",
                                        "description": "Only return timeline items which occurred at or before the given timestamp (in milliseconds since epoch)."
                                    }
                                ]
                            },
                            {
                                "id": "get_email_subscriptions_by_email_address",
                                "url": "/email/public/v1/events/:_created/:_eventid",
                                "name": "Get Email Event By ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "created",
                                        "name": "Event Creation Timestamp",
                                        "description": "The creation timestamp (in milliseconds since epoch) of the event to return.",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "eventid",
                                        "name": "Event ID",
                                        "description": "The unique ID of the event to return.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_extensions_api",
                        "name": "CRM Extensions API",
                        "endpoints": [
                            {
                                "id": "view_an_object_type",
                                "name": "View an object type",
                                "url": "/extensions/sales-objects/v1/object-types/:_object-type-id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "object-type-id",
                                        "name": "object-type-id",
                                        "description": "The id of the object type you want to get.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "events_api",
                        "name": "Events API",
                        "endpoints": [
                            {
                                "id": "getevents",
                                "url": "/reports/v2/events",
                                "name": "Get Events",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include Deleted",
                                        "fieldType": "select",
                                        "description": "If specified as true, include deleted events.",
                                        "options": [
                                            "true"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "get_events",
                                "url": "/reports/v2/events/:_id",
                                "name": "Get Events by id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Event ID",
                                        "description": "The ID of the specific event you're looking to pull.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include Deleted",
                                        "fieldType": "select",
                                        "description": "If specified as true, will return a deleted event. Otherwise, requesting deleted events by ID will return a 404.",
                                        "options": [
                                            "true"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "social_media_api",
                        "name": "Social Media API",
                        "endpoints": [
                            {
                                "id": "get_publishing_channels",
                                "name": "Get Publishing Channels",
                                "url": "/broadcast/v1/channels/setting/publish/current",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "get_broadcast_messages",
                                "name": "Get Broadcast Messages",
                                "url": "/broadcast/v1/broadcasts",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "since": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "queryParameters": [
                                    {
                                        "id": "since",
                                        "name": "created at",
                                        "description": "Only include broadcasts created at or more recently than given timestamp (milliseconds from epoch)."
                                    },
                                    {
                                        "id": "status",
                                        "name": "status",
                                        "description": "Only include broadcasts in matching state (success, waiting, canceled, error_fatal)."
                                    },
                                    {
                                        "id": "channelGuid",
                                        "name": "channel",
                                        "description": "Only include broadcasts created on a specific channel."
                                    }
                                ]
                            },
                            {
                                "id": "get_a_broadcast_message",
                                "name": "Get a Broadcast Message",
                                "url": "/broadcast/v1/broadcasts/:_broadcast_guid",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "broadcast_guid",
                                        "name": "broadcast_guid",
                                        "description": "Unique identifier for a specific broadcast.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "marketing_email_api",
                        "name": "Marketing Email API",
                        "endpoints": [
                            {
                                "id": "get_all_marketing_emails",
                                "name": "Get all marketing emails",
                                "url": "/marketing-emails/v1/emails",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "orderBy",
                                        "name": "Order by",
                                        "description": "Return the emails ordered by a particular field value. Use a negative value to sort in descending order (e.g. orderBy=-created)."
                                    }
                                ]
                            },
                            {
                                "id": "get_a_marketing_email",
                                "name": "Get a marketing email",
                                "url": "/marketing-emails/v1/emails/:_id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": " Email ID",
                                        "description": "The ID of the email that you want to get the details for.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_revisions_of_a_marketing_email",
                                "name": "Get revisions of a marketing email",
                                "url": "marketing-emails/v1/emails/:_id/versions",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "description": "The ID of the email that you want to get the revisions for.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_the_statistics_for_a_marketing_email",
                                "name": "Get the statistics for a marketing email",
                                "url": "/marketing-emails/v1/emails/with-statistics/:_email_id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "email_id",
                                        "name": "Email ID",
                                        "description": "The ID of the email that you want to get the details for.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_all_marketing_email_statistics",
                                "name": "Get all marketing email statistics",
                                "url": "/marketing-emails/v1/emails/with-statistics",
                                "resourcePath": "objects",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ]
                            },
                            {
                                "id": "determine_the_buffer_of_a_marketing_email",
                                "name": "Determine the buffer of a marketing email",
                                "url": "/marketing-emails/v1/emails/:_id/has-buffered-changes",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "description": "The ID of the email.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "timeline_api",
                        "name": "Timeline API",
                        "endpoints": [
                            {
                                "id": "get_the_details_for_an_existing_event",
                                "name": "Get the details for an existing event",
                                "url": "/integrations/v1/:_application-id/timeline/event/:_event-type-id/:_event-id",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "event-id",
                                        "name": "event-id",
                                        "description": "The ID of the event you want to retrieve.",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "name": "event-type-id",
                                        "description": "The event type that you're creating. This must line up with the application-id.",
                                        "required": true
                                    },
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the application that the event type was created for.  The eventTypeId must line up with this application-id.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_timeline_event_types",
                                "name": "Get timeline event types",
                                "url": "/integrations/v1/:_application-id/timeline/event-types",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app, created inside your HubSpot Developer portal.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "userId",
                                        "name": "userId",
                                        "description": "",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_properties_for_event_type",
                                "name": "Get properties for event type",
                                "url": "/integrations/v1/:_application-id/timeline/event-types/:_event-type-id/properties",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "event-type-id",
                                        "name": "event-type-id",
                                        "description": "The ID of the event type that you want to get the properties for. ",
                                        "required": true
                                    },
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the application that the event type belongs to.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "userId",
                                        "name": "userId",
                                        "description": "",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "workflow_api",
                        "name": "Workflows API",
                        "endpoints": [
                            {
                                "id": "get_all_workflows",
                                "name": "Get all workflows",
                                "url": "/automation/v3/workflows",
                                "doesNotSupportPaging": true
                            },
                            {
                                "id": "get_a_specific_workflows",
                                "name": "Get a specific workflows",
                                "url": "/automation/v3/workflows/:_workflowId",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "workflowId",
                                        "name": "Workflow ID",
                                        "description": "The ID of the workflow you wish to see metadata for.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "errors",
                                        "name": "errors",
                                        "description": "includes coded workflow validation errors and warnings at various points throughout the workflow structure.",
                                        "fieldType": "select",
                                        "options": [
                                            "true"
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "current_enrollments",
                                "name": "Current enrollments",
                                "url": "/automation/v2/workflows/enrollments/contacts/:_vid",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "vid",
                                        "name": "Contact VID",
                                        "description": "The VID of the contact in question.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_performance_stats_for_a_workflow",
                                "name": "Get performance stats for a workflow",
                                "url": "/automation/v3/performance/workflow/:_workflowId",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "workflowId",
                                        "name": "Workflow VID",
                                        "description": "The ID of the workflow you wish to see metadata for.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "start",
                                        "name": "Start date",
                                        "description": "The start date for the data you want. Must be specified as a millisecond timestamp.",
                                        "required": true
                                    },
                                    {
                                        "id": "end",
                                        "name": "End date",
                                        "description": "The end date for the data you want. Must be specified as a millisecond timestamp.",
                                        "required": true
                                    },
                                    {
                                        "id": "bucket",
                                        "name": "Time period",
                                        "description": "The time period used to group the data. Must be one of DAY, WEEK, or MONTH."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_object_properties_api",
                        "name": "CRM Object Properties API",
                        "endpoints": [
                            {
                                "id": "get_all_object_properties",
                                "name": "Get all object properties",
                                "url": "/properties/v2/:_object_type/properties",
                                "doesNotSupportPaging": true,
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want the properties for. Must be one of: tickets, line_items, products.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "get_all_object_properties_groups",
                                "name": "Get all object property groups",
                                "url": "/properties/v2/:_object_type/groups",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want the properties for. Must be one of: tickets, line_items, products.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "tickets",
                        "name": "Tickets API",
                        "endpoints": [
                            {
                                "id": "get_tickets",
                                "url": "/crm-objects/v1/objects/tickets/paged",
                                "name": "Get all tickets",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "resourcePath": "objects",
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Ticket Properties",
                                        "description": "By default, only the ID and a few other system fields are returned for the products. You can include product properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "Ticket properties (with history)",
                                        "description": "This parameter behaves exactly like the properties parameter above, with the exception that properties included with this parameter also return the full version history for the property.",
                                        "type": "array",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_ticket_by_id",
                                "url": "/crm-objects/v1/objects/tickets/:_id",
                                "name": "Get a ticket by ID",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "name": "Ticket ID",
                                        "description": "The ID of the ticket you want to get.",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "property",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID and a few other system fields are returned for the product. You can include product properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_log_of_changes_tickets",
                                "url": "/crm-objects/v1/change-log/tickets",
                                "name": "Get a log of changes for tickets",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "timestamp",
                                        "name": "Timestamp",
                                        "description": "The timestamp of the last change you pulled.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "changeType",
                                        "name": "Change Type",
                                        "description": "The last changeType you pulled.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "objectId",
                                        "name": "Object ID",
                                        "description": "The ID of the last object you received changes for.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_group_of_tickets_by_id",
                                "url": "/crm-objects/v1/objects/tickets/batch-read",
                                "name": "Get a group of tickets by ID",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "bodyParameters": [
                                    {
                                        "id": "ids",
                                        "name": "Ticket IDs",
                                        "description": "An array of Ticket IDs that you want to get. You can include up to 100 IDs in a single request.",
                                        "required": true,
                                        "type": "array",
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Product Properties",
                                        "type": "array",
                                        "description": "By default, only the ID, a few other system fields, and the hs_product_id property are returned for the line item. You can include other properties in the response by requesting them in the URL. This parameter can be included multiple times to request multiple properties. See the example for more details.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "includeDeletes",
                                        "name": "Include deleted",
                                        "description": "By default, deleted records will not be returned by the API. You can include this parameter to make sure that records are returned even when they are deleted.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "propertiesWithHistory",
                                        "description": "This parameter behaves exactly like the properties parameter above, with the exception that properties included with this parameter also return the full version history for the property.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "version": "v3",
                "resources": [
                    {
                        "id": "companies",
                        "name": "CRM API : Companies",
                        "endpoints": [
                            {
                                "id": "get_all_companies",
                                "url": "/crm/v3/objects/companies",
                                "name": "List",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_companies",
                                "name": "Search for Companies",
                                "url": "/crm/v3/objects/companies/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_company",
                                "url": "/crm/v3/objects/companies/:_companyId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "description": "The unique company id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_company_by_type",
                                "name": "List associations of a company by type",
                                "url": "/crm/v3/objects/companies/:_companyId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "description": "The unique company id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_companies_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/companies/batch/read",
                                "name": "Read a batch of companies by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_files",
                        "name": "CMS API : Files",
                        "endpoints": [
                            {
                                "id": "search_files",
                                "url": "/files/v3/files/search",
                                "name": "Search files",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "results",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The number of items to return. Maximum limit is 100.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "Desired file properties in the return object.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "description": "The maximum offset of items for a given search is 10000."
                                    },
                                    {
                                        "id": "before",
                                        "name": "Before",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "fieldType": "input",
                                        "description": "Sort files by a given field."
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Search files by given ID.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Search for files containing the given name.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Search files by time of creation."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Search files by time of latest updated."
                                    },
                                    {
                                        "id": "path",
                                        "name": "Path",
                                        "fieldType": "input",
                                        "description": "Search files by path."
                                    },
                                    {
                                        "id": "parentFolderId",
                                        "name": "Parent Folder Id",
                                        "fieldType": "input",
                                        "description": "Search files within given folder ID."
                                    },
                                    {
                                        "id": "size",
                                        "name": "Size",
                                        "fieldType": "input",
                                        "description": "Query by file size."
                                    },
                                    {
                                        "id": "height",
                                        "name": "Height",
                                        "fieldType": "integer",
                                        "description": "Search files by height of image or video."
                                    },
                                    {
                                        "id": "width",
                                        "name": "Width",
                                        "fieldType": "integer",
                                        "description": "Search files by width of image or video."
                                    },
                                    {
                                        "id": "encoding",
                                        "name": "Encoding",
                                        "fieldType": "input",
                                        "description": "Search files with specified encoding."
                                    },
                                    {
                                        "id": "type",
                                        "name": "Type",
                                        "fieldType": "input",
                                        "description": "Filter by provided file type."
                                    },
                                    {
                                        "id": "extension",
                                        "name": "Extension",
                                        "fieldType": "input",
                                        "description": "Search files by given extension."
                                    },
                                    {
                                        "id": "url",
                                        "name": "URL",
                                        "fieldType": "input",
                                        "description": "Search for given URL"
                                    },
                                    {
                                        "id": "isUsableInContent",
                                        "name": "Is Usable In Content",
                                        "fieldType": "input",
                                        "description": "If true shows files that have been marked to be used in new content. It false shows files that should not be used in new content."
                                    },
                                    {
                                        "id": "allowsAnonymousAccess",
                                        "name": "Allows Anonymous Access",
                                        "fieldType": "input",
                                        "description": "If 'true' will show private files; if 'false' will show public files"
                                    }
                                ]
                            },
                            {
                                "id": "get_file_by_id",
                                "url": "/files/v3/files/:_fileId",
                                "name": "Get file by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "fileId",
                                        "name": "File Id",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "get_signed_uRL_to_access_private_file",
                                "url": "/files/v3/files/:_fileId/signed-url",
                                "name": "Get signed URL to access private file",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "fileId",
                                        "name": "File Id",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "size",
                                        "name": "Size",
                                        "description": "For image files. This will resize the image to the desired size before sharing. Does not affect the original file, just the file served by this signed URL.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "expirationSeconds",
                                        "name": "Expiration Seconds",
                                        "description": "How long in seconds the link will provide access to the file.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "upscale",
                                        "name": "Upscale",
                                        "description": "If size is provided, this will upscale the image to fit the size dimensions.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "search_folders",
                                "url": "/files/v3/folders/search",
                                "name": "Search folders",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAt": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "results",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "Limit of results to return. Max limit is 100.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "Properties that should be included in the returned folders.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "description": "The maximum offset of items for a given search is 10000. Narrow your search down if you are reaching this limit."
                                    },
                                    {
                                        "id": "before",
                                        "name": "Before",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "fieldType": "input",
                                        "description": "Sort results by given property. For example -name sorts by name field descending, name sorts by name field ascending."
                                    },
                                    {
                                        "id": "id",
                                        "name": "id",
                                        "description": "Search folder by given ID.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "name",
                                        "name": "name",
                                        "description": "Search for folders containing the specified name.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Search for folders with the given creation timestamp."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Search for folder at given update timestamp."
                                    },
                                    {
                                        "id": "path",
                                        "name": "Path",
                                        "fieldType": "input",
                                        "description": "Search for folders by path."
                                    },
                                    {
                                        "id": "parentFolderId",
                                        "name": "Parent Folder Id",
                                        "fieldType": "input",
                                        "description": "Search for folders with the given parent folder ID."
                                    }
                                ]
                            },
                            {
                                "id": "get_folder_by_id",
                                "url": "/files/v3/folders/:_folderId",
                                "name": "Get folder by ID",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "folderId",
                                        "name": "Folder Id",
                                        "required": true,
                                        "fieldType": "integer"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "fieldType": "input",
                                        "description": "Properties to set on returned folder."
                                    }
                                ]
                            },
                            {
                                "id": "get_folder_by_path",
                                "url": "/files/v3/folders/:_folderPath",
                                "name": "Get folder by path",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "folderPath",
                                        "name": "Folder Path",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "fieldType": "input",
                                        "description": "Properties to set on returned folder."
                                    }
                                ]
                            },
                            {
                                "id": "check_import_status",
                                "url": "/files/v3/files/import-from-url/async/tasks/:_taskId/status",
                                "name": "Check import status",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "taskId",
                                        "name": "Task Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "check_folder_update_status",
                                "url": "/files/v3/folders/update/async/tasks/:_taskId/status",
                                "name": "Check folder update status",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "taskId",
                                        "name": "Task Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "owners",
                        "name": "CRM API : Owners",
                        "endpoints": [
                            {
                                "id": "get_a_page_of_owners",
                                "url": "/crm/v3/owners/",
                                "name": "Get a page of owners",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "email",
                                        "name": "Email",
                                        "description": "Filter by email address (optional)."
                                    }
                                ]
                            },
                            {
                                "id": "read_an_owner_by_given_id_or_userid",
                                "url": "/crm/v3/owners/:_ownerId",
                                "name": "Read an owner by given id or userId",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "ownerId",
                                        "name": "Owner Id",
                                        "description": "The unique owner id or user id.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "By default value is id. If want fetch the owner details by user id then use the id as userId."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contacts",
                        "name": "CRM API : Contacts",
                        "endpoints": [
                            {
                                "id": "get_all_contacts",
                                "url": "/crm/v3/objects/contacts",
                                "name": "List",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "get_a_contact",
                                "url": "/crm/v3/objects/contacts/:_contactId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "contactId",
                                        "name": "Contact Id",
                                        "required": true,
                                        "description": "The unique Contact id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_contact_by_type",
                                "name": "List associations of a contact by type",
                                "url": "/crm/v3/objects/contacts/:_contactId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "contactId",
                                        "name": "Contact Id",
                                        "required": true,
                                        "description": "The unique Contact id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, line_items, products, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "search_for_contacts",
                                "name": "Search for contacts",
                                "url": "/crm/v3/objects/contacts/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_contacts_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/contacts/batch/read",
                                "name": "Read a batch of contacts by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deals",
                        "name": "CRM API : Deals",
                        "endpoints": [
                            {
                                "id": "get_all_deals",
                                "url": "/crm/v3/objects/deals",
                                "name": "List",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_deals",
                                "name": "Search for Deals",
                                "url": "/crm/v3/objects/deals/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_deal",
                                "url": "/crm/v3/objects/deals/:_dealId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "dealId",
                                        "name": "Deal Id",
                                        "required": true,
                                        "description": "The unique deal id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_deal_by_type",
                                "name": "List associations of a deal by type",
                                "url": "/crm/v3/objects/deals/:_dealId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "dealId",
                                        "name": "Deal Id",
                                        "required": true,
                                        "description": "The unique Deal id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, line_items, products, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_deals_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/deals/batch/read",
                                "name": "Read a batch of deals by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "line_items",
                        "name": "CRM API : Line Items",
                        "endpoints": [
                            {
                                "id": "get_all_line_items",
                                "url": "/crm/v3/objects/line_items",
                                "name": "List",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, company, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_line_items",
                                "name": "Search for Line Items",
                                "url": "/crm/v3/objects/line_items/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_line_items",
                                "url": "/crm/v3/objects/line_items/:_lineItemId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "lineItemId",
                                        "name": "Line Item Id",
                                        "required": true,
                                        "description": "The unique lineitem id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_line_item_by_type",
                                "name": "List associations of a line item by type",
                                "url": "/crm/v3/objects/line_items/:_lineItemId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "lineItemId",
                                        "name": "Line Item Id",
                                        "required": true,
                                        "description": "The unique line item id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, contact, products, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_line_items_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/line_items/batch/read",
                                "name": "Read a batch of line items by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "products",
                        "name": "CRM API : Products",
                        "endpoints": [
                            {
                                "id": "get_all_products",
                                "url": "/crm/v3/objects/products",
                                "name": "List",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, company, line_items, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_products",
                                "name": "Search for Products",
                                "url": "/crm/v3/objects/products/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_products",
                                "url": "/crm/v3/objects/products/:_productId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "required": true,
                                        "description": "The unique product id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_products_by_type",
                                "name": "List associations of a products by type",
                                "url": "/crm/v3/objects/products/:_productId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "required": true,
                                        "description": "The unique product id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, contact, line_items, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_products_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/products/batch/read",
                                "name": "Read a batch of products by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "tickets",
                        "name": "CRM API : Tickets",
                        "endpoints": [
                            {
                                "id": "get_all_tickets",
                                "url": "/crm/v3/objects/tickets",
                                "name": "List",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, company, line_items, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_tickets",
                                "name": "Search for Tickets",
                                "url": "/crm/v3/objects/tickets/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_tickets",
                                "url": "/crm/v3/objects/tickets/:_ticketId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "ticketId",
                                        "name": "Ticket Id",
                                        "required": true,
                                        "description": "The unique ticket id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            },
                            {
                                "id": "list_associations_of_a_tickets_by_type",
                                "name": "List associations of a tickets by type",
                                "url": "/crm/v3/objects/tickets/:_ticketId/associations/:_toObjectType",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "ticketId",
                                        "name": "Ticket Id",
                                        "required": true,
                                        "description": "The unique ticket id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, contact, line_items, tickets, quotes",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_tickets_by_internal_id_or_unique_property_values",
                                "url": "/crm/v3/objects/tickets/batch/read",
                                "name": "Read a batch of tickets by internal ID, or unique property values",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "PropertiesWithHistory",
                                        "description": "PropertiesWithHistory",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "IDProperty",
                                        "description": "",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "fieldType": "input",
                                        "description": "",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pipelines",
                        "name": "CRM API : Pipelines",
                        "endpoints": [
                            {
                                "id": "retrieve_all_pipelines",
                                "name": "Retrieve all pipelines",
                                "url": "/crm/v3/pipelines/:_objectType",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported pipeline object types are tickets and deals.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "return_a_pipeline_by_id",
                                "name": "Return a pipeline by ID",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported pipeline object types are tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "description": "The unique pipeline id.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "return_all_stages_of_pipeline",
                                "name": "Return all stages of a pipeline",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId/stages",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported pipeline object types are tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "description": "The unique pipeline id.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "return_a_pipeline_stages_by_id",
                                "name": "Return a pipeline stage by ID",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId/stages/:_stageId",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported pipeline object types are tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "description": "The unique pipeline id.",
                                        "required": true
                                    },
                                    {
                                        "id": "stageId",
                                        "name": "Stage Id",
                                        "description": "The unique stage id.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "properties",
                        "name": "CRM API : Properties",
                        "endpoints": [
                            {
                                "id": "read_all_properties",
                                "name": "Read all properties",
                                "url": "/crm/v3/properties/:_objectType",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "read_a_property",
                                "name": "Read a property",
                                "url": "/crm/v3/properties/:_objectType/:_propertyName",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "propertyName",
                                        "name": "Property Name",
                                        "description": "The unique property Name."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    }
                                ]
                            },
                            {
                                "id": "read_all_property_group",
                                "name": "Read all property groups",
                                "url": "/crm/v3/properties/:_objectType/groups",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_property_group",
                                "name": "Read a property group",
                                "url": "/crm/v3/properties/:_objectType/groups/:_groupName",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "groupName",
                                        "name": "Group Name",
                                        "description": "The unique group name.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_properties",
                                "url": "/crm/v3/properties/:_objectType/batch/read",
                                "name": "Read a batch of properties",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    }
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "description": "Provide the name of the property to read or modify.",
                                        "fieldType": "input",
                                        "required": true,
                                        "type": "array"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "associations",
                        "name": "CRM API : Associations",
                        "endpoints": [
                            {
                                "id": "list_association_types",
                                "name": "List association types",
                                "url": "/crm/v3/associations/:_fromObjectType/:_toObjectType/types",
                                "doesNotSupportPaging": true,
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "fromObjectType",
                                        "name": "From Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "read_a_batch_of_associations",
                                "url": "/crm/v3/associations/:_fromObjectType/:_toObjectType/batch/read",
                                "name": "Read a batch of associations",
                                "doesNotSupportPaging": true,
                                "method": "POST",
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "fromObjectType",
                                        "name": "From Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "required": true
                                    }
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "inputs",
                                        "name": "inputs",
                                        "description": "Provide the unique ID in inputs that identifies an object.",
                                        "required": true,
                                        "fieldType": "input",
                                        "type": "array"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_domains",
                        "name": "CMS API : Domains",
                        "endpoints": [
                            {
                                "id": "get_current_domains",
                                "url": "/cms/v3/domains",
                                "name": "Get Current Domains",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAfter": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "results",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "Maximum number of results per page.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "select",
                                        "options": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "id": "before",
                                        "name": "Before",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "Enter the properties.",
                                        "fieldType": "array"
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "fieldType": "array",
                                        "description": "Sort the response data."
                                    },
                                    {
                                        "id": "updatedBefore",
                                        "name": "Updated Before",
                                        "fieldType": "input",
                                        "description": "Only return domains updated before this date."
                                    },
                                    {
                                        "id": "updatedAfter",
                                        "name": "Updated After",
                                        "fieldType": "input",
                                        "description": "Only return domains updated after this date."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Only return domains updated at this date."
                                    },
                                    {
                                        "id": "createdBefore",
                                        "name": "Created Before",
                                        "fieldType": "input",
                                        "description": "Only return domains created before this date."
                                    },
                                    {
                                        "id": "createdAfter",
                                        "name": "Created After",
                                        "fieldType": "input",
                                        "description": "Only return domains created after this date."
                                    },
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Only return domains created at this date."
                                    }
                                ]
                            },
                            {
                                "id": "get_a_single_domain",
                                "url": "/cms/v3/domains/:_domainId",
                                "name": "Get a Single Domain",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "domainId",
                                        "name": "Domain ID",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "integer"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_url_redirects",
                        "name": "CMS API : URL redirects",
                        "endpoints": [
                            {
                                "id": "get_current_redirects",
                                "url": "/cms/v3/url-redirects",
                                "name": "Get current redirects",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAfter": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "x"
                                },
                                "resourcePath": "results",
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "Maximum number of results per page.",
                                        "fieldType": "integer"
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived.",
                                        "fieldType": "select",
                                        "options": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "id": "before",
                                        "name": "Before",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "Enter the properties.",
                                        "fieldType": "array"
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "fieldType": "array",
                                        "description": "Sort the response data."
                                    },
                                    {
                                        "id": "updatedBefore",
                                        "name": "Updated Before",
                                        "fieldType": "input",
                                        "description": "Only return redirects last updated before this date."
                                    },
                                    {
                                        "id": "updatedAfter",
                                        "name": "Updated After",
                                        "fieldType": "input",
                                        "description": "Only return redirects last updated after this date."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Only return redirects last updated on exactly this date."
                                    },
                                    {
                                        "id": "createdBefore",
                                        "name": "Created Before",
                                        "fieldType": "input",
                                        "description": "Only return redirects created before this date."
                                    },
                                    {
                                        "id": "createdAfter",
                                        "name": "Created After",
                                        "fieldType": "input",
                                        "description": "Only return redirects created after this date."
                                    },
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Only return redirects created at this date."
                                    }
                                ]
                            },
                            {
                                "id": "get_details_for_a_redirect",
                                "url": "/cms/v3/url-redirects/:_urlRedirectId",
                                "name": "Get details for a redirect",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "urlRedirectId",
                                        "name": "URL Redirect ID",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blog_authors",
                        "name": "CMS API : Blog Authors",
                        "endpoints": [
                            {
                                "id": "get_all_blog_authors",
                                "url": "/cms/v3/blogs/authors",
                                "name": "Get all Blog Authors",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAfter": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss.SSSZ"
                                },
                                "queryParameters": [
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors created at exactly the specified time."
                                    },
                                    {
                                        "id": "createdAfter",
                                        "name": "Created After",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors created after the specified time."
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "createdBefore",
                                        "name": "Created Before",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors created before the specified time."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors last updated at exactly the specified time."
                                    },
                                    {
                                        "id": "updatedAfter",
                                        "name": "Updated After",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors last updated after the specified time."
                                    },
                                    {
                                        "id": "updatedBefore",
                                        "name": "Updated Before",
                                        "fieldType": "input",
                                        "description": "Only return Blog Authors last updated before the specified time."
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "description": "Specifies which fields to use for sorting results. Valid fields are name, createdAt, updatedAt, createdBy, updatedBy. createdAt will be used by default.",
                                        "fieldType": "select",
                                        "options": [
                                            "name",
                                            "createdAt",
                                            "updatedAt",
                                            "createdBy",
                                            "updatedBy"
                                        ]
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "description": "The maximum number of results to return. Default is 100.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "archived ",
                                        "name": "Archived ",
                                        "description": "Specifies whether to return archived Blog Authors. Defaults to false.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_a_blog_author",
                                "url": "/cms/v3/blogs/authors/:_objectId",
                                "name": "Retrieve a Blog Author",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived ",
                                        "description": "Specifies whether to return archived Blog Authors. Defaults to false.",
                                        "fieldType": "input"
                                    }
                                ],
                                "pathParameters": [
                                    {
                                        "id": "objectId",
                                        "name": "Object Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blog_tags",
                        "name": "CMS API : Blog Tags",
                        "endpoints": [
                            {
                                "id": "get_all_blog_tags",
                                "url": "/cms/v3/blogs/tags",
                                "name": "Get all Blog Tags",
                                "resourcePath": "",
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "delta": {
                                    "defaults": {
                                        "updatedAfter": "{{{lastExportDateTime}}}"
                                    },
                                    "dateFormat": "YYYY-MM-DDTHH:mm:ss.SSSZ"
                                },
                                "queryParameters": [
                                    {
                                        "id": "createdAt",
                                        "name": "Created At",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags created at exactly the specified time."
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "createdAfter",
                                        "name": "Created After",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags created after the specified time."
                                    },
                                    {
                                        "id": "createdBefore",
                                        "name": "Created Before",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags created before the specified time."
                                    },
                                    {
                                        "id": "updatedAt",
                                        "name": "Updated At",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags last updated at exactly the specified time."
                                    },
                                    {
                                        "id": "updatedAfter",
                                        "name": "Updated After",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags last updated after the specified time."
                                    },
                                    {
                                        "id": "updatedBefore",
                                        "name": "Updated Before",
                                        "fieldType": "input",
                                        "description": "Only return Blog Tags last updated before the specified time."
                                    },
                                    {
                                        "id": "sort",
                                        "name": "Sort",
                                        "description": "Specifies which fields to use for sorting results. Valid fields are name, createdAt, updatedAt, createdBy, updatedBy. createdAt will be used by default.",
                                        "fieldType": "select",
                                        "options": [
                                            "name",
                                            "createdAt",
                                            "updatedAt",
                                            "createdBy",
                                            "updatedBy"
                                        ]
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "description": "The maximum number of results to return. Default is 100.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "archived ",
                                        "name": "Archived ",
                                        "description": "Specifies whether to return archived Blog Tags. Defaults to false.",
                                        "fieldType": "input"
                                    }
                                ]
                            },
                            {
                                "id": "retrieve_a_blog_tag",
                                "url": "/cms/v3/blogs/tags/:_objectId",
                                "name": "Retrieve a Blog Tag",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "queryParameters": [
                                    {
                                        "id": "archived",
                                        "name": "Archived ",
                                        "description": "Specifies whether to return archived Blog Tags. Defaults to false.",
                                        "fieldType": "input"
                                    }
                                ],
                                "pathParameters": [
                                    {
                                        "id": "objectId",
                                        "name": "Object Id",
                                        "required": true,
                                        "fieldType": "input"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_custom_objects",
                        "name": "CRM API : Custom Objects",
                        "endpoints": [
                            {
                                "id": "list_all_custom_objects",
                                "name": "List all custom objects",
                                "url": "/crm/v3/objects/:_objectType",
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "resourcePath": "results",
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "fieldType": "input",
                                        "description": "Enter the object type."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "limit",
                                        "name": "limit",
                                        "description": "The maximum number of results to display per page.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "description": "The paging cursor token of the last successfully read resource will be returned as the paging.next.after JSON property of a paged response containing more results.",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "before",
                                        "name": "Before",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "Enter the properties.",
                                        "fieldType": "array"
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "fieldType": "input",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "fieldType": "select",
                                        "description": "Whether to return only results that have been archived.",
                                        "options": [
                                            true,
                                            false
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "search_for_custom_object",
                                "name": "Search for Custom Object",
                                "url": "/crm/v3/objects/:_objectType/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "Enter the object type.",
                                        "required": true
                                    }
                                ],
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "read_a_custom_object",
                                "url": "/crm/v3/objects/:_objectType/:_objectId",
                                "name": "Read a custom object",
                                "resourcePath": "",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "Enter the object type",
                                        "required": true,
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "objectId",
                                        "name": "Object ID",
                                        "description": "Enter the Object ID.",
                                        "fieldType": "input",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "quotes",
                        "name": "Quotes",
                        "endpoints": [
                            {
                                "id": "get_all_quotes",
                                "url": "/crm/v3/objects/quotes",
                                "name": "List",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "token",
                                    "nextPagePath": "paging.next.after",
                                    "pageArgument": "after"
                                },
                                "supportedExportTypes": [
                                    "delta",
                                    "test"
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "propertiesWithHistory",
                                        "name": "propertiesWithHistory",
                                        "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request."
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "description": "The maximum number of results to display per page."
                                    }
                                ]
                            },
                            {
                                "id": "search_for_quotes",
                                "name": "Search",
                                "url": "/crm/v3/objects/quotes/search",
                                "method": "POST",
                                "resourcePath": "results",
                                "paging": {
                                    "pagingMethod": "postbody",
                                    "pagingPostBody": "{{#if data._PARENT.paging.next.after}}\n {\n   {{#each export.rest.postBody}}\n   \"{{@key}}\": {{{jsonSerialize this}}},\n   {{/each}}\n \"after\":\"{{data._PARENT.paging.next.after}}\"\n }\n {{/if}}\n"
                                },
                                "mergePostBodyToPagingPostBody": true,
                                "delta": {
                                    "defaults": {
                                        "filterGroups": [
                                            {
                                                "filters": [
                                                    {
                                                        "propertyName": "hs_lastmodifieddate",
                                                        "operator": "GTE",
                                                        "value": "{{lastExportDateTime}}"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "dateFormat": "x"
                                },
                                "supportedExportTypes": [
                                    "test",
                                    "delta"
                                ],
                                "postBody": {},
                                "bodyParameters": [
                                    {
                                        "id": "filterGroups",
                                        "name": "filterGroups",
                                        "description": "Enter the filterGroups in array format. For example:- [\r\n    {\r\n      \"filters\": [\r\n        {\r\n          \"propertyName\": \"id\",\r\n          \"operator\": \"EQ\",\r\n          \"value\": \"149551\"\r\n        }\r\n      ]\r\n    }\r\n  ]. List of operators:- EQ, NEQ, LT, LTE, GT, GTE, HAS_PROPERTY, NOT_HAS_PROPERTY, CONTAINS_TOKEN, NOT_CONTAINS_TOKEN.",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "sorts",
                                        "name": "sorts",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "query",
                                        "name": "query",
                                        "type": "string",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored. For example:- [\r\n    \"id\": \"1\"\r\n  ]",
                                        "type": "array",
                                        "fieldType": "input"
                                    },
                                    {
                                        "id": "limit",
                                        "name": "Limit",
                                        "fieldType": "input",
                                        "description": "The maximum number of results to display per page. Default is 10.",
                                        "type": "string"
                                    },
                                    {
                                        "id": "after",
                                        "name": "After",
                                        "fieldType": "input",
                                        "type": "string"
                                    }
                                ]
                            },
                            {
                                "id": "get_a_quote",
                                "url": "/crm/v3/objects/quotes/:_quoteId",
                                "name": "Read",
                                "doesNotSupportPaging": true,
                                "pathParameters": [
                                    {
                                        "id": "quoteId",
                                        "name": "Quote Id",
                                        "required": true,
                                        "description": "The unique Quote id."
                                    }
                                ],
                                "queryParameters": [
                                    {
                                        "id": "properties",
                                        "name": "Properties",
                                        "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
                                    },
                                    {
                                        "id": "associations",
                                        "name": "Associations",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes."
                                    },
                                    {
                                        "id": "archived",
                                        "name": "Archived",
                                        "description": "Whether to return only results that have been archived."
                                    },
                                    {
                                        "id": "idProperty",
                                        "name": "Id Property",
                                        "description": "The name of a property whose values are unique for this object type."
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "import": {
        "labels": {
            "version": "API Version"
        },
        "urlResolution": [
            "/contacts/v1/contact",
            "/contacts/v1/contact/vid/:_contact_id/profile",
            "/contacts/v1/contact/createOrUpdate/email/:_contact_email",
            "/contacts/v1/contact/vid/:_contact_id",
            "/companies/v2/companies",
            "/companies/v2/companies/:_companyId"
        ],
        "versions": [
            {
                "version": "v1",
                "resources": [
                    {
                        "id": "contacts",
                        "name": "Contacts API",
                        "sampleData": {
                            "country": "02139",
                            "num_unique_conversion_events": "02139",
                            "hs_email_quarantined": "Australia",
                            "hs_analytics_revenue": "Australia",
                            "createdate": "Australia",
                            "days_to_close": "Australia",
                            "hs_email_optout": "Australia",
                            "hubspot_owner_id": "Australia",
                            "annualrevenue": "Australia",
                            "hs_analytics_num_page_views": "Australia",
                            "state": "Australia",
                            "fax": "Australia",
                            "hs_email_optout_4528066": "Australia",
                            "zip": "Australia",
                            "notes_last_updated": "Australia",
                            "hs_lifecyclestage_subscriber_date": "Australia",
                            "hs_analytics_average_page_views": "Australia",
                            "lastname": "Australia",
                            "twitterhandle": "Australia",
                            "phone": "Australia",
                            "num_conversion_events": "Australia",
                            "hs_analytics_num_event_completions": "Australia",
                            "salutation": "Australia",
                            "firstname": "Australia",
                            "city": "Australia",
                            "blog_default_hubspot_blog_5346270881_subscription": "Australia",
                            "hs_all_team_ids": "Australia",
                            "test_property": "Australia",
                            "hs_social_num_broadcast_clicks": "Australia",
                            "industry": "Australia",
                            "hs_persona": "Australia",
                            "hs_analytics_last_timestamp": "Australia",
                            "twitterbio": "Australia",
                            "hs_analytics_num_visits": "Australia",
                            "hubspot_team_id": "Australia",
                            "hs_social_linkedin_clicks": "Australia",
                            "hs_analytics_last_visit_timestamp": "Australia",
                            "hs_social_last_engagement": "Australia",
                            "num_contacted_notes": "Australia",
                            "hs_analytics_source": "Australia",
                            "hs_searchable_calculated_phone_number": "Australia",
                            "hs_email_domain": "Australia",
                            "hs_analytics_first_touch_converting_campaign": "Australia",
                            "company": "Australia",
                            "hs_all_owner_ids": "Australia",
                            "email": "Australia",
                            "notes_next_activity_date": "Australia",
                            "linkedinbio": "Australia",
                            "website": "Australia",
                            "hs_email_optout_4528147": "Australia",
                            "closedate": "Australia",
                            "address": "Australia",
                            "jobtitle": "Australia",
                            "hs_analytics_first_visit_timestamp": "Australia",
                            "lastmodifieddate": "Australia",
                            "numemployees": "Australia",
                            "hs_analytics_first_timestamp": "Australia",
                            "hs_social_google_plus_clicks": "Australia",
                            "hs_analytics_last_touch_converting_campaign": "Australia",
                            "message": "Australia",
                            "engagements_last_meeting_booked": "Australia",
                            "hs_social_facebook_clicks": "Australia",
                            "notes_last_contacted": "Australia",
                            "hubspot_owner_assigneddate": "Australia",
                            "twitterprofilephoto": "Australia",
                            "hs_lead_status": "Australia",
                            "hs_social_twitter_clicks": "Australia",
                            "hs_analytics_source_data_2": "Australia",
                            "hs_analytics_source_data_1": "Australia",
                            "lifecyclestage": "Australia",
                            "hs_email_optout_4528110": "Australia",
                            "num_notes": "Australia",
                            "form-submissions": "Australia",
                            "list-memberships": "Australia",
                            "identity-profiles": "Australia",
                            "merge-audits": "Australia",
                            "vid": "259429"
                        },
                        "operations": [
                            {
                                "id": "create_a_contact",
                                "url": "/contacts/v1/contact",
                                "name": "Create a contact",
                                "method": "POST",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"property\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_for_contacts",
                                        "extract": "contacts[0].vid"
                                    }
                                },
                                "requiredMappings": [
                                    "email"
                                ]
                            },
                            {
                                "id": "update_a_contact",
                                "url": "/contacts/v1/contact/vid/:_contact_id/profile",
                                "name": "Update a contact",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"property\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "method": "POST",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "contact_id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_for_contacts",
                                        "extract": "contacts[0].vid"
                                    }
                                },
                                "requiredMappings": [
                                    "email"
                                ]
                            },
                            {
                                "id": "update_a_contact_by_email",
                                "url": "/contacts/v1/contact/email/:_email/profile",
                                "name": "Update a contact by email",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"property\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "email",
                                        "required": true,
                                        "in": "path",
                                        "name": "Email",
                                        "description": "The email address of the record that you want to update."
                                    }
                                ],
                                "requiredMappings": [
                                    "email"
                                ]
                            },
                            {
                                "id": "create_update_contact",
                                "url": "/contacts/v1/contact/createOrUpdate/email/:_contact_email",
                                "name": "Create or Update a contact",
                                "method": "POST",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"property\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "requiredMappings": [
                                    "email"
                                ],
                                "parameters": [
                                    {
                                        "id": "contact_email",
                                        "name": "Contact Email",
                                        "description": "Email ID of the Contact",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_contact",
                                "url": "/contacts/v1/contact/vid/:_contact_id",
                                "name": "Delete a contact",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "contact_id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_for_contacts",
                                        "extract": "contacts[0].vid"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "company_properties",
                        "name": "Company Properties API",
                        "sampleData": {
                            "name": "pro1",
                            "label": "Property",
                            "description": "Another property being created as an example.",
                            "groupName": "companyinformation",
                            "type": "string",
                            "fieldType": "text",
                            "hidden": false,
                            "options": [],
                            "searchableInGlobalSearch": false,
                            "hubspotDefined": null,
                            "calculated": false,
                            "externalOptions": false,
                            "deleted": false,
                            "createdAt": 1530863124613,
                            "updatedAt": 1530863124613,
                            "formField": false,
                            "displayOrder": 1,
                            "readOnlyValue": false,
                            "displayName": "An updated custom group",
                            "readOnlyDefinition": false,
                            "mutableDefinitionNotDeletable": false,
                            "favorited": false,
                            "favoritedOrder": -1,
                            "displayMode": "current_value",
                            "showCurrencySymbol": null,
                            "createdUserId": null,
                            "textDisplayHint": null,
                            "numberDisplayHint": null,
                            "optionsAreMutable": null,
                            "referencedObjectType": null,
                            "isCustomizedDefault": false,
                            "updatedUserId": null
                        },
                        "operations": [
                            {
                                "id": "create_company_property",
                                "url": "/properties/v1/companies/properties",
                                "name": "Create a company property",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type",
                                    "fieldType",
                                    "label"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_company_property_group",
                                "url": "/properties/v1/companies/groups",
                                "name": "Create a company property group",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name",
                                    "displayName"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_company_property_group",
                                "url": "/properties/v1/companies/groups/named/:_group_name",
                                "name": "Update a company property group",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name",
                                    "displayName"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_company_property",
                                "url": "/properties/v1/companies/properties/named/:_property_name",
                                "name": "Update a company property",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type",
                                    "fieldType",
                                    "label"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_company_property",
                                "url": [
                                    "/properties/v1/companies/properties/named/:_property_name",
                                    "/properties/v1/companies/properties"
                                ],
                                "name": "Create or Update a specific company property",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type",
                                    "fieldType",
                                    "label"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_company_property_group",
                                "url": [
                                    "/properties/v1/companies/groups/named/:_group_name",
                                    "/properties/v1/companies/groups"
                                ],
                                "name": "Create or Update a specific company property group",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name",
                                    "displayName"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_company_property",
                                "url": "/properties/v1/companies/properties/named/:_property_name",
                                "name": "Delete a company property",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_company_property_group",
                                "url": "/properties/v1/companies/groups/named/:_group_name",
                                "name": "Delete a company property group",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contact_properties",
                        "name": "Contact Properties API",
                        "sampleData": {
                            "name": "colors",
                            "label": "A New Custom Property",
                            "description": "A new property for you",
                            "groupName": "contactinformation",
                            "type": "string",
                            "fieldType": "text",
                            "hidden": false,
                            "options": [],
                            "displayName": "Details about color choices",
                            "displayOrder": 6,
                            "hubspotDefined": null,
                            "searchableInGlobalSearch": false,
                            "calculated": false,
                            "externalOptions": false,
                            "deleted": false,
                            "createdAt": 1530869135266,
                            "updatedAt": 1530869135266,
                            "formField": true,
                            "readOnlyValue": false,
                            "readOnlyDefinition": false,
                            "mutableDefinitionNotDeletable": false,
                            "favorited": false,
                            "favoritedOrder": -1,
                            "displayMode": "current_value",
                            "showCurrencySymbol": null,
                            "referencedObjectType": null,
                            "isCustomizedDefault": false,
                            "createdUserId": null,
                            "textDisplayHint": null,
                            "numberDisplayHint": null,
                            "optionsAreMutable": null,
                            "updatedUserId": null
                        },
                        "operations": [
                            {
                                "id": "create_contact_property",
                                "url": "/properties/v1/contacts/properties",
                                "name": "Create a new property",
                                "method": "POST",
                                "requiredMappings": [
                                    "name",
                                    "type",
                                    "groupName"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_contact_property",
                                "url": "/properties/v1/contacts/properties/named/:_property_name",
                                "name": "Update a property",
                                "method": "PUT",
                                "requiredMappings": [
                                    "name",
                                    "type",
                                    "groupName"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_contact_property",
                                "url": [
                                    "/properties/v1/contacts/properties/named/:_property_name",
                                    "/properties/v1/contacts/properties"
                                ],
                                "name": "Create or Update a specific property",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name",
                                    "type",
                                    "groupName"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_contact_property_group",
                                "url": "/properties/v1/contacts/groups",
                                "name": "Create a property group",
                                "method": "POST",
                                "requiredMappings": [
                                    "name",
                                    "displayName"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_contact_property_group",
                                "url": "/properties/v1/contacts/groups/named/:_group_name",
                                "name": "Update a property group",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_contact_property_group",
                                "url": [
                                    "/properties/v1/contacts/groups/named/:_group_name",
                                    "/properties/v1/contacts/groups"
                                ],
                                "name": "Create or Update a specific property group",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name",
                                    "displayName"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_contact_property",
                                "url": "/properties/v1/contacts/properties/named/:_property_name",
                                "name": "Delete a property",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_contact_property_group",
                                "url": "/properties/v1/contacts/groups/named/:_group_name",
                                "name": "Delete a property group",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deal_properties",
                        "name": "Deal Properties API",
                        "sampleData": {
                            "name": "invoice_number",
                            "label": "Invoice Number",
                            "description": "",
                            "groupName": "dealinformation",
                            "type": "enumeration",
                            "fieldType": "select",
                            "options": [
                                {
                                    "description": null,
                                    "value": "Taken",
                                    "readOnly": null,
                                    "label": "Taken",
                                    "displayOrder": 0,
                                    "hidden": false,
                                    "doubleData": null
                                },
                                {
                                    "description": null,
                                    "value": "Not Taken",
                                    "readOnly": null,
                                    "label": "Not_Taken",
                                    "displayOrder": 0,
                                    "hidden": false,
                                    "doubleData": null
                                }
                            ],
                            "properties": [
                                {
                                    "name": "hs_campaign",
                                    "label": "Campaign",
                                    "description": "The marketing campaign the deal is associated with",
                                    "groupName": "dealinformation",
                                    "type": "string",
                                    "fieldType": "text",
                                    "options": [],
                                    "calculated": false,
                                    "readOnlyValue": false,
                                    "externalOptions": true,
                                    "formField": false,
                                    "displayOrder": -1,
                                    "readOnlyDefinition": true,
                                    "hidden": true,
                                    "mutableDefinitionNotDeletable": true,
                                    "displayMode": "current_value",
                                    "hubspotDefined": true
                                }
                            ],
                            "displayName": "Updated Invoicing",
                            "formField": true,
                            "displayOrder": 10,
                            "readOnlyValue": false,
                            "readOnlyDefinition": false,
                            "hidden": false,
                            "mutableDefinitionNotDeletable": false,
                            "calculated": false,
                            "externalOptions": false,
                            "displayMode": "current_value"
                        },
                        "operations": [
                            {
                                "id": "create_deal_property",
                                "url": "/properties/v1/deals/properties",
                                "name": "Create a deal property",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_deals_property",
                                "url": "/properties/v1/deals/properties/named/:_property_name",
                                "name": "Update a deal property",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_deals_property",
                                "url": [
                                    "/properties/v1/deals/properties/named/:_property_name",
                                    "/properties/v1/deals/properties"
                                ],
                                "name": "Create or Update a specific deal property",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name",
                                    "groupName",
                                    "type"
                                ],
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_deals_property_group",
                                "url": "/properties/v1/deals/groups",
                                "name": "Create a deal property group",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_deals_property_group",
                                "url": "/properties/v1/deals/groups/named/:_group_name",
                                "name": "Update a deal property group",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_deals_property_group",
                                "url": [
                                    "/properties/v1/deals/groups/named/:_group_name",
                                    "/properties/v1/deals/groups"
                                ],
                                "name": "Create or Update a specific deal property group",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_deals_property",
                                "url": "/properties/v1/deals/properties/named/:_property_name",
                                "name": "Delete a deal property",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "property_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_deals_property_group",
                                "url": "/properties/v1/deals/groups/named/:_group_name",
                                "name": "Delete a deal property group",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "group_name",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "engagements",
                        "name": "Engagements API",
                        "sampleData": {
                            "engagement": {
                                "id": 852759947,
                                "portalId": 3919727,
                                "active": true,
                                "createdAt": 1523485751033,
                                "lastUpdated": 1523485751033,
                                "createdBy": 3496570,
                                "modifiedBy": 3496570,
                                "ownerId": 30324751,
                                "type": "NOTE",
                                "timestamp": 1523485751033
                            },
                            "associations": {
                                "contactIds": [],
                                "companyIds": [],
                                "dealIds": [],
                                "ownerIds": [],
                                "workflowIds": [],
                                "ticketIds": [],
                                "contentIds": []
                            },
                            "attachments": [],
                            "metadata": {
                                "body": "<p>Test Note 1</p>"
                            }
                        },
                        "operations": [
                            {
                                "id": "create_engagements",
                                "url": "/engagements/v1/engagements",
                                "name": "Create an Engagement",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "engagement.active",
                                    "engagement.type",
                                    "metadata.body"
                                ],
                                "parameters": [
                                    {
                                        "id": "engagementId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_engagements",
                                "url": "/engagements/v1/engagements/:_engagementId",
                                "name": "Update an Engagement",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "engagement.active",
                                    "engagement.type",
                                    "metadata.body"
                                ],
                                "parameters": [
                                    {
                                        "id": "engagementId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_engagements",
                                "url": [
                                    "/engagements/v1/engagements/:_engagementId",
                                    "/engagements/v1/engagements"
                                ],
                                "name": "Create or Update an Engagement",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "engagement.active",
                                    "engagement.type",
                                    "metadata.body"
                                ],
                                "parameters": [
                                    {
                                        "id": "engagementId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_engagements",
                                "url": "/engagements/v1/engagements/:_engagementId",
                                "name": "Delete an Engagement",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "engagementId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "forms",
                        "name": "Forms API",
                        "sampleData": {
                            "name": "DemoForm",
                            "action": "",
                            "method": "",
                            "cssClass": "",
                            "redirect": "",
                            "submitText": "Submit",
                            "followUpId": "",
                            "notifyRecipients": "",
                            "leadNurturingCampaignId": "",
                            "formFieldGroups": [
                                {
                                    "fields": [
                                        {
                                            "name": "firstname",
                                            "label": "First Name",
                                            "type": "string",
                                            "fieldType": "text",
                                            "description": "",
                                            "groupName": "",
                                            "displayOrder": 0,
                                            "required": false,
                                            "selectedOptions": [],
                                            "options": [],
                                            "validation": {
                                                "name": "",
                                                "message": "",
                                                "data": "",
                                                "useDefaultBlockList": false
                                            },
                                            "enabled": true,
                                            "hidden": false,
                                            "defaultValue": "",
                                            "isSmartField": false,
                                            "unselectedLabel": "",
                                            "placeholder": ""
                                        }
                                    ],
                                    "default": true,
                                    "isSmartGroup": false
                                },
                                {
                                    "fields": [
                                        {
                                            "name": "lastname",
                                            "label": "Last Name",
                                            "type": "string",
                                            "fieldType": "text",
                                            "description": "",
                                            "groupName": "",
                                            "displayOrder": 1,
                                            "required": false,
                                            "selectedOptions": [],
                                            "options": [],
                                            "validation": {
                                                "name": "",
                                                "message": "",
                                                "data": "",
                                                "useDefaultBlockList": false
                                            },
                                            "enabled": true,
                                            "hidden": false,
                                            "defaultValue": "",
                                            "isSmartField": false,
                                            "unselectedLabel": "",
                                            "placeholder": ""
                                        }
                                    ],
                                    "default": true,
                                    "isSmartGroup": false
                                },
                                {
                                    "fields": [
                                        {
                                            "name": "adress_1",
                                            "label": "Adress 1",
                                            "type": "string",
                                            "fieldType": "text",
                                            "description": "",
                                            "groupName": "",
                                            "displayOrder": 2,
                                            "required": false,
                                            "selectedOptions": [],
                                            "options": [],
                                            "validation": {
                                                "name": "",
                                                "message": "",
                                                "data": "",
                                                "useDefaultBlockList": false
                                            },
                                            "enabled": true,
                                            "hidden": false,
                                            "defaultValue": "",
                                            "isSmartField": false,
                                            "unselectedLabel": "",
                                            "placeholder": ""
                                        }
                                    ],
                                    "default": true,
                                    "isSmartGroup": false
                                }
                            ],
                            "createdAt": 1318534279910,
                            "updatedAt": 1413919291011,
                            "performableHtml": "",
                            "migratedFrom": "ld",
                            "ignoreCurrentValues": false,
                            "metaData": [],
                            "deletable": true
                        },
                        "operations": [
                            {
                                "id": "create_forms",
                                "url": "/forms/v2/forms",
                                "name": "Create a form",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "guid",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_forms",
                                "url": "/forms/v2/forms/:_form_guid",
                                "name": "Update a form",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "form_guid",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_form",
                                "url": [
                                    "/forms/v2/forms/:_form_guid",
                                    "/forms/v2/forms"
                                ],
                                "name": "Create or Update a specific form",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "form_guid",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_forms",
                                "url": "/forms/v2/forms/:_form_guid",
                                "name": "Delete a form",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "form_guid",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "products",
                        "name": "Products API",
                        "sampleData": {
                            "name": "DemoForm",
                            "description": "11",
                            "price": "1",
                            "recurringbillingfrequency": "annually",
                            "hs_lastmodifieddate": "",
                            "objectId": 1642796
                        },
                        "operations": [
                            {
                                "id": "create_products",
                                "url": "/crm-objects/v1/objects/products",
                                "name": "Create a product",
                                "method": "POST",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "supportIgnoreExisting": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_product",
                                "url": "/crm-objects/v1/objects/products/:_id",
                                "name": "Update a product",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_product",
                                "url": [
                                    "/crm-objects/v1/objects/products/:_id",
                                    "/crm-objects/v1/objects/products"
                                ],
                                "name": "Create or Update a specific product",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "name"
                                ],
                                "body": [
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_product",
                                "url": "/crm-objects/v1/objects/products/:_id",
                                "name": "Delete a product",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_a_group_of_products",
                                "url": "/crm-objects/v1/objects/products/batch-create",
                                "name": "Create a group of products",
                                "method": "POST",
                                "body": "[[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]]",
                                "requiredMappings": [
                                    "name",
                                    "price"
                                ]
                            },
                            {
                                "id": "delete_a_group_of_products",
                                "url": "/crm-objects/v1/objects/products/batch-delete",
                                "name": "Delete a group of products",
                                "sampleData": {
                                    "ids": [
                                        1642813,
                                        1645205
                                    ]
                                },
                                "method": "POST",
                                "requiredMappings": [
                                    "ids"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "ecommerce_bridge",
                        "name": "Ecommerce Bridge API",
                        "sampleData": {
                            "enabled": false,
                            "importOnInstall": true,
                            "productSyncSettings": {
                                "properties": [
                                    {
                                        "propertyName": "my_name_field",
                                        "dataType": "STRING",
                                        "targetHubspotProperty": "name"
                                    },
                                    {
                                        "propertyName": "image",
                                        "dataType": "STRING",
                                        "targetHubspotProperty": "ip__ecomm_bridge__product_image"
                                    }
                                ]
                            },
                            "dealSyncSettings": {
                                "properties": []
                            },
                            "lineItemSyncSettings": {
                                "properties": []
                            },
                            "contactSyncSettings": {
                                "properties": []
                            }
                        },
                        "operations": [
                            {
                                "id": "create_ecommerce_settings",
                                "url": "/extensions/ecomm/v1/installs",
                                "name": "Install ecommerce settings",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "uninstall_ecommerce_settings",
                                "url": "/extensions/ecomm/v1/installs/uninstall",
                                "name": "Uninstall ecommerce settings",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deals",
                        "name": "Deals API",
                        "sampleData": {
                            "dealname": "Australia",
                            "num_associated_contacts": "Australia",
                            "description": "Australia",
                            "createdate": "Australia",
                            "hubspot_owner_id": "Australia",
                            "num_contacted_notes": "Australia",
                            "hs_analytics_source": "Australia",
                            "hs_createdate": "Australia",
                            "notes_next_activity_date": "Australia",
                            "dealtype": "Australia",
                            "notes_last_updated": "Australia",
                            "closed_lost_reason": "Australia",
                            "amount": "Australia",
                            "portalId": 3919727,
                            "dealId": 347534103,
                            "isDeleted": false,
                            "closedate": "Australia",
                            "engagements_last_meeting_booked": "Australia",
                            "pipeline": "Australia",
                            "hs_lastmodifieddate": "Australia",
                            "notes_last_contacted": "Australia",
                            "hubspot_owner_assigneddate": "Australia",
                            "associated_contacts": "Australia",
                            "dealstage": "Australia",
                            "closed_won_reason": "Australia",
                            "hs_analytics_source_data_2": "Australia",
                            "hs_analytics_source_data_1": "Australia",
                            "num_notes": "Australia",
                            "objectId": 93630457
                        },
                        "operations": [
                            {
                                "id": "create_a_deal",
                                "url": "/deals/v1/deal",
                                "name": "Create a deal",
                                "method": "POST",
                                "body": "{\"associations\": {    \"associatedCompanyIds\": [      {{data.associations.associatedCompanyIds}}    ],    \"associatedVids\": [      {{data.associations.associatedVids}}    ]  },    \"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "requiredMappings": [
                                    "dealname"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_deal",
                                "url": "/deals/v1/deal/:_dealId",
                                "name": "Update a deal",
                                "method": "PUT",
                                "body": "{\"associations\": {    \"associatedCompanyIds\": [      {{data.associations.associatedCompanyIds}}    ],    \"associatedVids\": [      {{data.associations.associatedVids}}    ]  },    \"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "dealname"
                                ],
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_deal",
                                "url": [
                                    "/deals/v1/deal/:_dealId",
                                    "/deals/v1/deal"
                                ],
                                "name": "Create or Update a deal",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "dealname"
                                ],
                                "body": [
                                    "{\"associations\": {    \"associatedCompanyIds\": [      {{data.associations.associatedCompanyIds}}    ],    \"associatedVids\": [      {{data.associations.associatedVids}}    ]  },    \"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                    "{\"associations\": {    \"associatedCompanyIds\": [      {{data.associations.associatedCompanyIds}}    ],    \"associatedVids\": [      {{data.associations.associatedVids}}    ]  },    \"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}"
                                ],
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_deal",
                                "url": "/deals/v1/deal/:_dealId",
                                "name": "Delete a deal",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "companies",
                        "name": "Companies API",
                        "sampleData": {
                            "companyId": "23456",
                            "portalId": "23456",
                            "twitterfollowers": "A company name",
                            "description": "qwe",
                            "owneremail": "qwe",
                            "country": "qwe",
                            "city": "qwe",
                            "timezone": "qwe",
                            "facebook_company_page": "qwe",
                            "hs_all_team_ids": "qwe",
                            "createdate": "qwe",
                            "web_technologies": "qwe",
                            "total_money_raised": "qwe",
                            "industry": "qwe",
                            "numberofemployees": "qwe",
                            "days_to_close": "qwe",
                            "type": "qwe",
                            "customize": "qwe",
                            "twitterbio": "qwe",
                            "linkedin_company_page": "qwe",
                            "hubspot_team_id": "qwe",
                            "hubspot_owner_id": "qwe",
                            "annualrevenue": "qwe",
                            "state": "qwe",
                            "hs_all_owner_ids": "qwe",
                            "facebookfans": "qwe",
                            "linkedinbio": "A company name",
                            "zip": "A company name",
                            "website": "A company name",
                            "closedate": "A company name",
                            "address": "A company name",
                            "address2": "A company name",
                            "ownername": "A company name",
                            "twitterhandle": "A company name",
                            "hs_lastmodifieddate": "A company name",
                            "phone": "A company name",
                            "hubspot_owner_assigneddate": "A company name",
                            "domain": "A company name",
                            "name": "A company name",
                            "is_public": "A company name",
                            "hs_lead_status": "A company name",
                            "lifecyclestage": "A company name",
                            "googleplus_page": "A company name",
                            "additionalDomains": "A company name",
                            "stateChanges": "A company name",
                            "objectId": 17433026,
                            "mergeAudits": "A company name"
                        },
                        "operations": [
                            {
                                "id": "create_a_company",
                                "url": "/companies/v2/companies",
                                "name": "Create a company",
                                "method": "POST",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "update_a_company",
                                "url": "/companies/v2/companies/:_companyId",
                                "name": "Update a company",
                                "method": "PUT",
                                "body": "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "create_or_update_a_company",
                                "url": [
                                    "/companies/v2/companies/:_companyId",
                                    "/companies/v2/companies"
                                ],
                                "name": "Create or Update a company",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "body": [
                                    "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}",
                                    "{\"properties\": [{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]}"
                                ],
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "delete_a_company",
                                "url": "/companies/v2/companies/:_companyId",
                                "name": "Delete a company",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "lineitems",
                        "name": "Line Items API",
                        "sampleData": {
                            "hs_product_id": "1231",
                            "quantity": "11",
                            "price": "1",
                            "name": "demo",
                            "objectId": 9954744,
                            "hs_lastmodifieddate": "",
                            "amount": "99",
                            "description": "data"
                        },
                        "operations": [
                            {
                                "id": "create_line_item",
                                "url": "/crm-objects/v1/objects/line_items",
                                "name": "Create a line item",
                                "method": "POST",
                                "requiredMappings": [
                                    "hs_product_id"
                                ],
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_line_item",
                                "url": "/crm-objects/v1/objects/line_items/:_id",
                                "name": "Update a line item",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "method": "PUT",
                                "requiredMappings": [
                                    "hs_product_id"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_line_item",
                                "url": [
                                    "/crm-objects/v1/objects/line_items/:_id",
                                    "/crm-objects/v1/objects/line_items"
                                ],
                                "name": "Create or Update a specific line item",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "hs_product_id"
                                ],
                                "body": [
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_line_item",
                                "url": "/crm-objects/v1/objects/line_items/:_id",
                                "name": "Delete a line item",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_a_group_of_line_items",
                                "url": "/crm-objects/v1/objects/line_items/batch-create",
                                "name": "Create a group of line items",
                                "method": "POST",
                                "body": "[[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]]",
                                "requiredMappings": [
                                    "hs_product_id"
                                ]
                            },
                            {
                                "id": "delete_a_group_of_line_items",
                                "url": "/crm-objects/v1/objects/line_items/batch-delete",
                                "name": "Delete a group of line items",
                                "method": "POST",
                                "sampleData": {
                                    "ids": [
                                        1642813,
                                        1645205
                                    ]
                                },
                                "requiredMappings": [
                                    "ids"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_associations",
                        "name": "CRM Associations API",
                        "sampleData": {
                            "fromObjectId": 496346,
                            "toObjectId": 176602,
                            "category": "HUBSPOT_DEFINED",
                            "definitionId": 15
                        },
                        "operations": [
                            {
                                "id": "create_crm_association",
                                "url": "/crm-associations/v1/associations",
                                "name": "Create CRM association",
                                "method": "PUT",
                                "requiredMappings": [
                                    "fromObjectId",
                                    "toObjectId",
                                    "category",
                                    "definitionId"
                                ]
                            },
                            {
                                "id": "delete_crm_association",
                                "url": "/crm-associations/v1/associations/delete",
                                "name": "Delete CRM association",
                                "method": "PUT",
                                "requiredMappings": [
                                    "fromObjectId",
                                    "toObjectId",
                                    "category",
                                    "definitionId"
                                ]
                            },
                            {
                                "id": "create_multiple_association",
                                "url": "/crm-associations/v1/associations/create-batch",
                                "name": "Create multiple associations between CRM objects",
                                "body": "[ { {{#each data}}{{#if @index}},{{/if}}\"{{@key}}\": {{{jsonSerialize this}}} {{/each}} } ]",
                                "method": "PUT",
                                "requiredMappings": [
                                    "fromObjectId",
                                    "toObjectId",
                                    "category",
                                    "definitionId"
                                ]
                            },
                            {
                                "id": "delete_multiple_association",
                                "url": "/crm-associations/v1/associations/delete-batch",
                                "name": "Delete multiple associations between CRM objects",
                                "body": "[ { {{#each data}}{{#if @index}},{{/if}}\"{{@key}}\": {{{jsonSerialize this}}} {{/each}} } ]",
                                "method": "PUT",
                                "requiredMappings": [
                                    "fromObjectId",
                                    "toObjectId",
                                    "category",
                                    "definitionId"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_authors",
                        "name": "CMS Blog Authors API",
                        "sampleData": {
                            "fullName": "Hub Spot",
                            "email": "testapi@hubspot.com",
                            "userId": null,
                            "username": "testapi@hubspot.com",
                            "bio": "",
                            "website": "",
                            "twitter": "",
                            "linkedin": "",
                            "facebook": "",
                            "avatar": ""
                        },
                        "operations": [
                            {
                                "id": "create_blog_author",
                                "name": "Create blog author",
                                "url": "/blogs/v3/blog-authors",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_blog_authors",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "email"
                                ]
                            },
                            {
                                "id": "update_blog_author",
                                "name": "Update blog author",
                                "url": "/blogs/v3/blog-authors/:_id",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_blog_authors",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "create_update_blog_author",
                                "name": "Create or Update blog author",
                                "url": [
                                    "/blogs/v3/blog-authors/:_id",
                                    "/blogs/v3/blog-authors"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_blog_authors",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "email"
                                ]
                            },
                            {
                                "id": "delete_blog_author",
                                "name": "Delete blog author",
                                "url": "/blogs/v3/blog-authors/:_id",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "pathParameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_blog_authors",
                                        "extract": "objects[0].id"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_topics",
                        "name": "CMS Blog Topics API",
                        "sampleData": {
                            "name": "Hey an updated Topic",
                            "description": "This is an updated topic description"
                        },
                        "operations": [
                            {
                                "id": "create_blog_topic",
                                "name": "Create blog topic",
                                "url": "/blogs/v3/topics",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_blog_topics",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "update_blog_topic",
                                "name": "Update blog topic",
                                "url": "/blogs/v3/topics/:_topic-id",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "topic-id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_blog_topics",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "create_update_blog_topic",
                                "name": "Create or Update blog topic",
                                "url": [
                                    "/blogs/v3/topics/:_topic-id",
                                    "/blogs/v3/topics"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "topic-id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_blog_topics",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "delete_blog_topic",
                                "name": "Delete blog topic",
                                "url": "/blogs/v3/topics/:_topic-id",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "topic-id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "search_blog_topics",
                                        "extract": "objects[0].id"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "cms_hubdb",
                        "name": "CMS HubDB API",
                        "operations": [
                            {
                                "id": "create_a_new_Table",
                                "name": "Create a new table",
                                "url": "/hubdb/api/v2/tables",
                                "method": "POST",
                                "sampleData": {
                                    "name": "New Table",
                                    "columns": [
                                        {
                                            "name": "Name",
                                            "type": "TEXT"
                                        },
                                        {
                                            "name": "choices",
                                            "type": "SELECT",
                                            "options": [
                                                {
                                                    "name": "one",
                                                    "type": "option"
                                                },
                                                {
                                                    "name": "two",
                                                    "type": "option"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "clone_a_table",
                                "name": "Clone a table",
                                "url": "/hubdb/api/v2/tables/:_tableId/clone",
                                "method": "POST",
                                "sampleData": {
                                    "newName": "Test Table (Cloned)"
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table to be cloned.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_table",
                                "name": "Update a table",
                                "url": "/hubdb/api/v2/tables/:_tableId",
                                "method": "PUT",
                                "sampleData": {
                                    "name": "New Table",
                                    "publishedAt": 1483246800000,
                                    "useForPages": true,
                                    "columns": [
                                        {
                                            "name": "Name",
                                            "type": "TEXT"
                                        },
                                        {
                                            "name": "choices",
                                            "type": "SELECT",
                                            "options": [
                                                {
                                                    "name": "one",
                                                    "type": "option"
                                                },
                                                {
                                                    "name": "two",
                                                    "type": "option"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table to be updated.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_a_table",
                                "name": "Create or Update a table",
                                "url": [
                                    "/hubdb/api/v2/tables/:_tableId",
                                    "/hubdb/api/v2/tables"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "sampleData": {
                                    "name": "New Table",
                                    "publishedAt": 1483246800000,
                                    "useForPages": true,
                                    "columns": [
                                        {
                                            "name": "Name",
                                            "type": "TEXT"
                                        },
                                        {
                                            "name": "choices",
                                            "type": "SELECT",
                                            "options": [
                                                {
                                                    "name": "one",
                                                    "type": "option"
                                                },
                                                {
                                                    "name": "two",
                                                    "type": "option"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_table",
                                "name": "Delete a table",
                                "url": "/hubdb/api/v2/tables/:_tableId",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "add_a_new_row_to_a_table",
                                "name": "Add a new row to a table",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows",
                                "method": "POST",
                                "sampleData": {
                                    "path": "row7",
                                    "name": "Page 7",
                                    "values": {
                                        "1": "New Row Text",
                                        "2": {
                                            "id": 4,
                                            "name": "d",
                                            "type": "option"
                                        },
                                        "3": {
                                            "lat": 41.836826,
                                            "long": -88.461914,
                                            "type": "location"
                                        },
                                        "4": {
                                            "url": "http://domain.com/image.jpg",
                                            "type": "image"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table you want to add the row to.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "clone_a_row",
                                "name": "Clone a row",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows/:_rowId/clone",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table that contains the row to be cloned.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "name": "Row ID",
                                        "in": "path",
                                        "description": "The ID of the row to be cloned.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "Update_a_row",
                                "name": "Update a row",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows/:_rowId",
                                "method": "PUT",
                                "sampleData": {
                                    "path": "row7",
                                    "name": "Page 7",
                                    "values": {
                                        "1": "New Row Text",
                                        "2": {
                                            "id": 4,
                                            "name": "d",
                                            "type": "option"
                                        },
                                        "3": {
                                            "lat": 41.836826,
                                            "long": -88.461914,
                                            "type": "location"
                                        },
                                        "4": {
                                            "url": "http://domain.com/image.jpg",
                                            "type": "image"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table the row belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "name": "Row ID",
                                        "in": "path",
                                        "description": "The ID of the row you want to update.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_Update_a_row",
                                "name": "Create or Update a row",
                                "url": [
                                    "/hubdb/api/v2/tables/:_tableId/rows/:_rowId",
                                    "/hubdb/api/v2/tables/:_tableId/rows"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "sampleData": {
                                    "path": "row7",
                                    "name": "Page 7",
                                    "values": {
                                        "1": "New Row Text",
                                        "2": {
                                            "id": 4,
                                            "name": "d",
                                            "type": "option"
                                        },
                                        "3": {
                                            "lat": 41.836826,
                                            "long": -88.461914,
                                            "type": "location"
                                        },
                                        "4": {
                                            "url": "http://domain.com/image.jpg",
                                            "type": "image"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table the row belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_row",
                                "name": "Delete a row",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows/:_rowId",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table the row belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_row_cell",
                                "name": "Update a row cell",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows/:_rowId/cells/:_cellId",
                                "method": "PUT",
                                "sampleData": {
                                    "values": {
                                        "1": "New Row Text",
                                        "2": {
                                            "id": 4,
                                            "name": "d",
                                            "type": "option"
                                        },
                                        "3": {
                                            "lat": 41.836826,
                                            "long": -88.461914,
                                            "type": "location"
                                        },
                                        "4": {
                                            "url": "http://domain.com/image.jpg",
                                            "type": "image"
                                        }
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table the row belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "name": "Row ID",
                                        "in": "path",
                                        "description": "The ID of the row the cell belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "cellId",
                                        "name": "Cell ID",
                                        "in": "path",
                                        "description": "The ID of the column that you want to update.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_cell_from_a_row",
                                "name": "Delete a cell from a row",
                                "url": "/hubdb/api/v2/tables/:_tableId/rows/:_rowId/cells/:_cellId",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table the row belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "rowId",
                                        "name": "Row ID",
                                        "in": "path",
                                        "description": "The ID of the row the cell belongs to.",
                                        "required": true
                                    },
                                    {
                                        "id": "cellId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "publish_the_draft_table_to_live",
                                "name": "Publish the draft table to live",
                                "url": "/hubdb/api/v2/tables/:_tableId/publish",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table you want to publish.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "revert_the_draft_data_for_a_table",
                                "name": "Revert the draft data for a table",
                                "url": "/hubdb/api/v2/tables/:_tableId/revert",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "tableId",
                                        "name": "Table ID",
                                        "in": "path",
                                        "description": "The ID of the table you want to revert the data for.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_page_publishing",
                        "name": "CMS Page Publishing API",
                        "operations": [
                            {
                                "id": "create_a_new_page",
                                "name": "Create a new page",
                                "url": "/content/api/v2/pages",
                                "method": "POST",
                                "sampleData": {
                                    "name": "My Testing Page123",
                                    "campaign": "",
                                    "campaign_name": "",
                                    "footer_html": "",
                                    "head_html": "",
                                    "is_draft": "false",
                                    "meta_description": "",
                                    "meta_keywords": "",
                                    "password": "",
                                    "publish_date": "",
                                    "publish_immediately": "true",
                                    "slug": "",
                                    "subcategory": "landing_page",
                                    "widget_containers": "",
                                    "widgets": ""
                                },
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "update_a_page",
                                "name": "Update a page",
                                "url": "/content/api/v2/pages/:_page_id",
                                "method": "PUT",
                                "sampleData": {
                                    "name": "My Testing Page123",
                                    "campaign": "",
                                    "campaign_name": "",
                                    "footer_html": "",
                                    "head_html": "",
                                    "is_draft": "false",
                                    "meta_description": "",
                                    "meta_keywords": "",
                                    "password": "",
                                    "publish_date": "",
                                    "publish_immediately": "true",
                                    "slug": "",
                                    "subcategory": "landing_page",
                                    "widget_containers": "",
                                    "widgets": ""
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "create_update_a_page",
                                "name": "Create or Update a page",
                                "url": [
                                    "/content/api/v2/pages/:_page_id",
                                    "/content/api/v2/pages"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "sampleData": {
                                    "name": "My Testing Page123",
                                    "campaign": "",
                                    "campaign_name": "",
                                    "footer_html": "",
                                    "head_html": "",
                                    "is_draft": "false",
                                    "meta_description": "",
                                    "meta_keywords": "",
                                    "password": "",
                                    "publish_date": "",
                                    "publish_immediately": "true",
                                    "slug": "",
                                    "subcategory": "landing_page",
                                    "widget_containers": "",
                                    "widgets": ""
                                },
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "delete_a_page",
                                "name": "Delete a page",
                                "url": "/content/api/v2/pages/:_page_id",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "update_the_auto-save_buffer",
                                "name": "Updates the auto-save buffer",
                                "url": "/content/api/v2/pages/:_page_id/buffer",
                                "method": "PUT",
                                "sampleData": {
                                    "name": "My Testing Page123",
                                    "campaign": "",
                                    "campaign_name": "",
                                    "footer_html": "",
                                    "head_html": "",
                                    "is_draft": "false",
                                    "meta_description": "",
                                    "meta_keywords": "",
                                    "password": "",
                                    "publish_date": "",
                                    "publish_immediately": "true",
                                    "slug": "",
                                    "subcategory": "landing_page",
                                    "widget_containers": "",
                                    "widgets": ""
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "clone_a_page",
                                "name": "Clone a page",
                                "url": "/content/api/v2/pages/:_page_id/clone",
                                "method": "POST",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "publishes_or_unpublishes_a_Page",
                                "name": "Publishes or unpublishes a Page",
                                "url": "/content/api/v2/pages/:_page_id/publish-action",
                                "method": "POST",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "action": "schedule-publish"
                                },
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "action"
                                ]
                            },
                            {
                                "id": "copies_the_contents_of_auto-save_buffer_into_live",
                                "name": "Copies the contents of auto-save buffer into live",
                                "url": "/content/api/v2/pages/:_page_id/push-buffer-live",
                                "method": "POST",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "restores_a_previously_deleted_page",
                                "name": "Restores a previously deleted page",
                                "url": "/content/api/v2/pages/:_page_id/restore-deleted",
                                "method": "PUT",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "validates_the_auto-save_buffer_of_the_Page",
                                "name": "Validates the auto-save buffer of the Page",
                                "url": "/content/api/v2/pages/:_page_id/validate-buffer",
                                "method": "POST",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "page_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_pages",
                                        "extract": "objects[0].id"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_post",
                        "name": "CMS Blog Post API",
                        "operations": [
                            {
                                "id": "create_a_new_blog_post",
                                "name": "Create a new blog post",
                                "url": "/content/api/v2/blog-posts",
                                "method": "POST",
                                "sampleData": {
                                    "ab": false,
                                    "ab_variation": false,
                                    "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "analytics_page_id": "9665694062",
                                    "analytics_page_type": "blog-post",
                                    "archived": false,
                                    "are_comments_allowed": true,
                                    "attached_stylesheets": [],
                                    "author_at": 1557908534312,
                                    "blueprint_type_id": 0,
                                    "category": 3,
                                    "category_id": 3,
                                    "comment_count": 0,
                                    "composition_id": 0,
                                    "content_access_rule_ids": [],
                                    "content_group": 9129311969,
                                    "content_group_id": 9129311969,
                                    "content_type_category": 3,
                                    "content_type_category_id": 3,
                                    "created": 1557908491366,
                                    "created_time": 1557908491366,
                                    "css": {},
                                    "css_text": "",
                                    "ctas": null,
                                    "current_state": "DRAFT",
                                    "currently_published": false,
                                    "deleted_at": 0,
                                    "domain": "",
                                    "enable_google_amp_output_override": false,
                                    "featured_image": "",
                                    "featured_image_alt_text": "",
                                    "featured_image_height": 0,
                                    "featured_image_length": 0,
                                    "featured_image_width": 0,
                                    "flex_areas": {},
                                    "freeze_date": 1557908534312,
                                    "has_content_access_rules": false,
                                    "has_user_changes": true,
                                    "html_title": "My first API blog post!",
                                    "id": 9665694062,
                                    "is_captcha_required": true,
                                    "is_draft": true,
                                    "is_instant_email_enabled": false,
                                    "is_published": false,
                                    "is_social_publishing_enabled": false,
                                    "keywords": [],
                                    "label": "My first API blog post!",
                                    "layout_sections": {},
                                    "list_template": "generated_layouts/9129380208.html",
                                    "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "mab": false,
                                    "mab_master": false,
                                    "mab_variant": false,
                                    "meta": {
                                        "attached_stylesheets": [],
                                        "post_summary": null,
                                        "has_user_changes": true,
                                        "last_edit_session_id": null,
                                        "last_edit_update_id": null,
                                        "html_title": "My first API blog post!",
                                        "tag_ids": [],
                                        "topic_ids": []
                                    },
                                    "name": "My first API blog post!",
                                    "page_redirected": false,
                                    "page_title": "My first API blog post!",
                                    "parent_blog": {
                                        "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "allow_comments": true,
                                        "amp_body_color": "#404040",
                                        "amp_body_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_body_font_size": "18",
                                        "amp_custom_css": "",
                                        "amp_header_background_color": "#ffffff",
                                        "amp_header_color": "#1e1e1e",
                                        "amp_header_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_header_font_size": "36",
                                        "amp_link_color": "#416bb3",
                                        "amp_logo_alt": "",
                                        "amp_logo_height": 0,
                                        "amp_logo_src": "",
                                        "amp_logo_width": 0,
                                        "analytics_page_id": 9129311969,
                                        "attached_stylesheets": [],
                                        "captcha_after_days": 7,
                                        "captcha_always": false,
                                        "category_id": 3,
                                        "close_comments_older": 0,
                                        "comment_date_format": "medium",
                                        "comment_form_guid": "952d783f-7f01-410d-a599-79ef5fcb7f92",
                                        "comment_max_thread_depth": 1,
                                        "comment_moderation": false,
                                        "comment_notification_emails": [],
                                        "comment_should_create_contact": false,
                                        "comment_verification_text": "",
                                        "cos_object_type": "BLOG",
                                        "created": 1556202153258,
                                        "created_date_time": 1556202153258,
                                        "default_group_style_id": "",
                                        "default_notification_from_name": "",
                                        "default_notification_reply_to": "",
                                        "deleted_at": 0,
                                        "description": "",
                                        "domain": "",
                                        "domain_when_published": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "email_api_subscription_id": 6602112,
                                        "enable_google_amp_output": true,
                                        "enable_social_auto_publishing": false,
                                        "html_footer": "",
                                        "html_footer_is_shared": true,
                                        "html_head": "",
                                        "html_head_is_shared": true,
                                        "html_keywords": [],
                                        "html_title": "",
                                        "id": 9129311969,
                                        "item_layout_id": 9129380208,
                                        "item_template_is_shared": true,
                                        "item_template_path": "generated_layouts/9129380208.html",
                                        "label": "Data rule",
                                        "listing_layout_id": 9129380208,
                                        "listing_template_path": "generated_layouts/9129380208.html",
                                        "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "month_filter_format": "MMMM yyyy",
                                        "name": "Data rule",
                                        "portal_id": 5761317,
                                        "post_html_footer": "",
                                        "post_html_head": "",
                                        "posts_per_listing_page": 10,
                                        "posts_per_rss_feed": 10,
                                        "public_access_rules": [],
                                        "public_access_rules_enabled": false,
                                        "public_title": "Data rule",
                                        "publish_date_format": "medium",
                                        "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "root_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "show_social_link_facebook": true,
                                        "show_social_link_linkedin": true,
                                        "show_social_link_twitter": true,
                                        "show_summary_in_emails": true,
                                        "show_summary_in_listing": true,
                                        "show_summary_in_rss": true,
                                        "slug": "",
                                        "social_account_twitter": "",
                                        "subscription_contacts_property": "blog_data_rule_9129311969_subscription",
                                        "subscription_form_guid": "ba48b977-5a15-4a92-bfaf-82f3ecc29efa",
                                        "subscription_lists_by_type": {},
                                        "updated": 1556202153258,
                                        "updated_date_time": 1556202153258,
                                        "url_base": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "url_segments": {
                                            "all": "all",
                                            "archive": "archive",
                                            "author": "author",
                                            "page": "page",
                                            "tag": "tag"
                                        },
                                        "use_featured_image_in_summary": true,
                                        "uses_default_template": false
                                    },
                                    "past_mab_experiment_ids": [],
                                    "personas": [],
                                    "placement_guids": [],
                                    "portal_id": 5761317,
                                    "post_body_rss": "",
                                    "post_email_content": "",
                                    "post_featured_image_if_enabled": "",
                                    "post_list_content": "",
                                    "post_list_summary_featured_image": "",
                                    "post_rss_content": "",
                                    "post_rss_summary_featured_image": "",
                                    "post_summary_rss": "",
                                    "post_template": "generated_layouts/9129380208.html",
                                    "preview_key": "HRhkgMsd",
                                    "processing_status": "",
                                    "public_access_rules": [],
                                    "public_access_rules_enabled": false,
                                    "publish_date": 0,
                                    "publish_date_local_time": 0,
                                    "publish_date_localized": {
                                        "date": 0,
                                        "format": "medium"
                                    },
                                    "published_url": "",
                                    "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "rss_summary_featured_image": "",
                                    "slug": "-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "state": "DRAFT",
                                    "subcategory": "normal_blog_post",
                                    "synced_with_blog_root": true,
                                    "tag_ids": [],
                                    "tag_list": [],
                                    "tag_names": [],
                                    "team_perms": [],
                                    "template_path": "",
                                    "template_path_for_render": "generated_layouts/9129380208.html",
                                    "title": "My first API blog post!",
                                    "topic_ids": [],
                                    "topic_list": [],
                                    "topic_names": [],
                                    "topics": [],
                                    "translated_content": {},
                                    "tweet_immediately": false,
                                    "unpublished_at": 0,
                                    "updated": 1557908534312,
                                    "upsize_featured_image": false,
                                    "url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "use_featured_image": true,
                                    "user_perms": [],
                                    "widget_containers": {},
                                    "widgetcontainers": {},
                                    "widgets": {}
                                },
                                "requiredMappings": [
                                    "name",
                                    "content_group_id"
                                ]
                            },
                            {
                                "id": "update_the_blog_post",
                                "name": "Update the blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id",
                                "method": "PUT",
                                "sampleData": {
                                    "ab": false,
                                    "ab_variation": false,
                                    "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "analytics_page_id": "9665694062",
                                    "analytics_page_type": "blog-post",
                                    "archived": false,
                                    "are_comments_allowed": true,
                                    "attached_stylesheets": [],
                                    "author_at": 1557908534312,
                                    "blueprint_type_id": 0,
                                    "category": 3,
                                    "category_id": 3,
                                    "comment_count": 0,
                                    "composition_id": 0,
                                    "content_access_rule_ids": [],
                                    "content_group": 9129311969,
                                    "content_group_id": 9129311969,
                                    "content_type_category": 3,
                                    "content_type_category_id": 3,
                                    "created": 1557908491366,
                                    "created_time": 1557908491366,
                                    "css": {},
                                    "css_text": "",
                                    "ctas": null,
                                    "current_state": "DRAFT",
                                    "currently_published": false,
                                    "deleted_at": 0,
                                    "domain": "",
                                    "enable_google_amp_output_override": false,
                                    "featured_image": "",
                                    "featured_image_alt_text": "",
                                    "featured_image_height": 0,
                                    "featured_image_length": 0,
                                    "featured_image_width": 0,
                                    "flex_areas": {},
                                    "freeze_date": 1557908534312,
                                    "has_content_access_rules": false,
                                    "has_user_changes": true,
                                    "html_title": "My first API blog post!",
                                    "id": 9665694062,
                                    "is_captcha_required": true,
                                    "is_draft": true,
                                    "is_instant_email_enabled": false,
                                    "is_published": false,
                                    "is_social_publishing_enabled": false,
                                    "keywords": [],
                                    "label": "My first API blog post!",
                                    "layout_sections": {},
                                    "list_template": "generated_layouts/9129380208.html",
                                    "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "mab": false,
                                    "mab_master": false,
                                    "mab_variant": false,
                                    "meta": {
                                        "attached_stylesheets": [],
                                        "post_summary": null,
                                        "has_user_changes": true,
                                        "last_edit_session_id": null,
                                        "last_edit_update_id": null,
                                        "html_title": "My first API blog post!",
                                        "tag_ids": [],
                                        "topic_ids": []
                                    },
                                    "name": "My first API blog post!",
                                    "page_redirected": false,
                                    "page_title": "My first API blog post!",
                                    "parent_blog": {
                                        "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "allow_comments": true,
                                        "amp_body_color": "#404040",
                                        "amp_body_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_body_font_size": "18",
                                        "amp_custom_css": "",
                                        "amp_header_background_color": "#ffffff",
                                        "amp_header_color": "#1e1e1e",
                                        "amp_header_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_header_font_size": "36",
                                        "amp_link_color": "#416bb3",
                                        "amp_logo_alt": "",
                                        "amp_logo_height": 0,
                                        "amp_logo_src": "",
                                        "amp_logo_width": 0,
                                        "analytics_page_id": 9129311969,
                                        "attached_stylesheets": [],
                                        "captcha_after_days": 7,
                                        "captcha_always": false,
                                        "category_id": 3,
                                        "close_comments_older": 0,
                                        "comment_date_format": "medium",
                                        "comment_form_guid": "952d783f-7f01-410d-a599-79ef5fcb7f92",
                                        "comment_max_thread_depth": 1,
                                        "comment_moderation": false,
                                        "comment_notification_emails": [],
                                        "comment_should_create_contact": false,
                                        "comment_verification_text": "",
                                        "cos_object_type": "BLOG",
                                        "created": 1556202153258,
                                        "created_date_time": 1556202153258,
                                        "default_group_style_id": "",
                                        "default_notification_from_name": "",
                                        "default_notification_reply_to": "",
                                        "deleted_at": 0,
                                        "description": "",
                                        "domain": "",
                                        "domain_when_published": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "email_api_subscription_id": 6602112,
                                        "enable_google_amp_output": true,
                                        "enable_social_auto_publishing": false,
                                        "html_footer": "",
                                        "html_footer_is_shared": true,
                                        "html_head": "",
                                        "html_head_is_shared": true,
                                        "html_keywords": [],
                                        "html_title": "",
                                        "id": 9129311969,
                                        "item_layout_id": 9129380208,
                                        "item_template_is_shared": true,
                                        "item_template_path": "generated_layouts/9129380208.html",
                                        "label": "Data rule",
                                        "listing_layout_id": 9129380208,
                                        "listing_template_path": "generated_layouts/9129380208.html",
                                        "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "month_filter_format": "MMMM yyyy",
                                        "name": "Data rule",
                                        "portal_id": 5761317,
                                        "post_html_footer": "",
                                        "post_html_head": "",
                                        "posts_per_listing_page": 10,
                                        "posts_per_rss_feed": 10,
                                        "public_access_rules": [],
                                        "public_access_rules_enabled": false,
                                        "public_title": "Data rule",
                                        "publish_date_format": "medium",
                                        "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "root_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "show_social_link_facebook": true,
                                        "show_social_link_linkedin": true,
                                        "show_social_link_twitter": true,
                                        "show_summary_in_emails": true,
                                        "show_summary_in_listing": true,
                                        "show_summary_in_rss": true,
                                        "slug": "",
                                        "social_account_twitter": "",
                                        "subscription_contacts_property": "blog_data_rule_9129311969_subscription",
                                        "subscription_form_guid": "ba48b977-5a15-4a92-bfaf-82f3ecc29efa",
                                        "subscription_lists_by_type": {},
                                        "updated": 1556202153258,
                                        "updated_date_time": 1556202153258,
                                        "url_base": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "url_segments": {
                                            "all": "all",
                                            "archive": "archive",
                                            "author": "author",
                                            "page": "page",
                                            "tag": "tag"
                                        },
                                        "use_featured_image_in_summary": true,
                                        "uses_default_template": false
                                    },
                                    "past_mab_experiment_ids": [],
                                    "personas": [],
                                    "placement_guids": [],
                                    "portal_id": 5761317,
                                    "post_body_rss": "",
                                    "post_email_content": "",
                                    "post_featured_image_if_enabled": "",
                                    "post_list_content": "",
                                    "post_list_summary_featured_image": "",
                                    "post_rss_content": "",
                                    "post_rss_summary_featured_image": "",
                                    "post_summary_rss": "",
                                    "post_template": "generated_layouts/9129380208.html",
                                    "preview_key": "HRhkgMsd",
                                    "processing_status": "",
                                    "public_access_rules": [],
                                    "public_access_rules_enabled": false,
                                    "publish_date": 0,
                                    "publish_date_local_time": 0,
                                    "publish_date_localized": {
                                        "date": 0,
                                        "format": "medium"
                                    },
                                    "published_url": "",
                                    "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "rss_summary_featured_image": "",
                                    "slug": "-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "state": "DRAFT",
                                    "subcategory": "normal_blog_post",
                                    "synced_with_blog_root": true,
                                    "tag_ids": [],
                                    "tag_list": [],
                                    "tag_names": [],
                                    "team_perms": [],
                                    "template_path": "",
                                    "template_path_for_render": "generated_layouts/9129380208.html",
                                    "title": "My first API blog post!",
                                    "topic_ids": [],
                                    "topic_list": [],
                                    "topic_names": [],
                                    "topics": [],
                                    "translated_content": {},
                                    "tweet_immediately": false,
                                    "unpublished_at": 0,
                                    "updated": 1557908534312,
                                    "upsize_featured_image": false,
                                    "url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "use_featured_image": true,
                                    "user_perms": [],
                                    "widget_containers": {},
                                    "widgetcontainers": {},
                                    "widgets": {}
                                },
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_the_blog_post",
                                "name": "Create or Update a blog post",
                                "url": [
                                    "/content/api/v2/blog-posts/:_blog_post_id",
                                    "/content/api/v2/blog-posts"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "sampleData": {
                                    "ab": false,
                                    "ab_variation": false,
                                    "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "analytics_page_id": "9665694062",
                                    "analytics_page_type": "blog-post",
                                    "archived": false,
                                    "are_comments_allowed": true,
                                    "attached_stylesheets": [],
                                    "author_at": 1557908534312,
                                    "blueprint_type_id": 0,
                                    "category": 3,
                                    "category_id": 3,
                                    "comment_count": 0,
                                    "composition_id": 0,
                                    "content_access_rule_ids": [],
                                    "content_group": 9129311969,
                                    "content_group_id": 9129311969,
                                    "content_type_category": 3,
                                    "content_type_category_id": 3,
                                    "created": 1557908491366,
                                    "created_time": 1557908491366,
                                    "css": {},
                                    "css_text": "",
                                    "ctas": null,
                                    "current_state": "DRAFT",
                                    "currently_published": false,
                                    "deleted_at": 0,
                                    "domain": "",
                                    "enable_google_amp_output_override": false,
                                    "featured_image": "",
                                    "featured_image_alt_text": "",
                                    "featured_image_height": 0,
                                    "featured_image_length": 0,
                                    "featured_image_width": 0,
                                    "flex_areas": {},
                                    "freeze_date": 1557908534312,
                                    "has_content_access_rules": false,
                                    "has_user_changes": true,
                                    "html_title": "My first API blog post!",
                                    "id": 9665694062,
                                    "is_captcha_required": true,
                                    "is_draft": true,
                                    "is_instant_email_enabled": false,
                                    "is_published": false,
                                    "is_social_publishing_enabled": false,
                                    "keywords": [],
                                    "label": "My first API blog post!",
                                    "layout_sections": {},
                                    "list_template": "generated_layouts/9129380208.html",
                                    "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "mab": false,
                                    "mab_master": false,
                                    "mab_variant": false,
                                    "meta": {
                                        "attached_stylesheets": [],
                                        "post_summary": null,
                                        "has_user_changes": true,
                                        "last_edit_session_id": null,
                                        "last_edit_update_id": null,
                                        "html_title": "My first API blog post!",
                                        "tag_ids": [],
                                        "topic_ids": []
                                    },
                                    "name": "My first API blog post!",
                                    "page_redirected": false,
                                    "page_title": "My first API blog post!",
                                    "parent_blog": {
                                        "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "allow_comments": true,
                                        "amp_body_color": "#404040",
                                        "amp_body_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_body_font_size": "18",
                                        "amp_custom_css": "",
                                        "amp_header_background_color": "#ffffff",
                                        "amp_header_color": "#1e1e1e",
                                        "amp_header_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_header_font_size": "36",
                                        "amp_link_color": "#416bb3",
                                        "amp_logo_alt": "",
                                        "amp_logo_height": 0,
                                        "amp_logo_src": "",
                                        "amp_logo_width": 0,
                                        "analytics_page_id": 9129311969,
                                        "attached_stylesheets": [],
                                        "captcha_after_days": 7,
                                        "captcha_always": false,
                                        "category_id": 3,
                                        "close_comments_older": 0,
                                        "comment_date_format": "medium",
                                        "comment_form_guid": "952d783f-7f01-410d-a599-79ef5fcb7f92",
                                        "comment_max_thread_depth": 1,
                                        "comment_moderation": false,
                                        "comment_notification_emails": [],
                                        "comment_should_create_contact": false,
                                        "comment_verification_text": "",
                                        "cos_object_type": "BLOG",
                                        "created": 1556202153258,
                                        "created_date_time": 1556202153258,
                                        "default_group_style_id": "",
                                        "default_notification_from_name": "",
                                        "default_notification_reply_to": "",
                                        "deleted_at": 0,
                                        "description": "",
                                        "domain": "",
                                        "domain_when_published": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "email_api_subscription_id": 6602112,
                                        "enable_google_amp_output": true,
                                        "enable_social_auto_publishing": false,
                                        "html_footer": "",
                                        "html_footer_is_shared": true,
                                        "html_head": "",
                                        "html_head_is_shared": true,
                                        "html_keywords": [],
                                        "html_title": "",
                                        "id": 9129311969,
                                        "item_layout_id": 9129380208,
                                        "item_template_is_shared": true,
                                        "item_template_path": "generated_layouts/9129380208.html",
                                        "label": "Data rule",
                                        "listing_layout_id": 9129380208,
                                        "listing_template_path": "generated_layouts/9129380208.html",
                                        "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "month_filter_format": "MMMM yyyy",
                                        "name": "Data rule",
                                        "portal_id": 5761317,
                                        "post_html_footer": "",
                                        "post_html_head": "",
                                        "posts_per_listing_page": 10,
                                        "posts_per_rss_feed": 10,
                                        "public_access_rules": [],
                                        "public_access_rules_enabled": false,
                                        "public_title": "Data rule",
                                        "publish_date_format": "medium",
                                        "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "root_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "show_social_link_facebook": true,
                                        "show_social_link_linkedin": true,
                                        "show_social_link_twitter": true,
                                        "show_summary_in_emails": true,
                                        "show_summary_in_listing": true,
                                        "show_summary_in_rss": true,
                                        "slug": "",
                                        "social_account_twitter": "",
                                        "subscription_contacts_property": "blog_data_rule_9129311969_subscription",
                                        "subscription_form_guid": "ba48b977-5a15-4a92-bfaf-82f3ecc29efa",
                                        "subscription_lists_by_type": {},
                                        "updated": 1556202153258,
                                        "updated_date_time": 1556202153258,
                                        "url_base": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "url_segments": {
                                            "all": "all",
                                            "archive": "archive",
                                            "author": "author",
                                            "page": "page",
                                            "tag": "tag"
                                        },
                                        "use_featured_image_in_summary": true,
                                        "uses_default_template": false
                                    },
                                    "past_mab_experiment_ids": [],
                                    "personas": [],
                                    "placement_guids": [],
                                    "portal_id": 5761317,
                                    "post_body_rss": "",
                                    "post_email_content": "",
                                    "post_featured_image_if_enabled": "",
                                    "post_list_content": "",
                                    "post_list_summary_featured_image": "",
                                    "post_rss_content": "",
                                    "post_rss_summary_featured_image": "",
                                    "post_summary_rss": "",
                                    "post_template": "generated_layouts/9129380208.html",
                                    "preview_key": "HRhkgMsd",
                                    "processing_status": "",
                                    "public_access_rules": [],
                                    "public_access_rules_enabled": false,
                                    "publish_date": 0,
                                    "publish_date_local_time": 0,
                                    "publish_date_localized": {
                                        "date": 0,
                                        "format": "medium"
                                    },
                                    "published_url": "",
                                    "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "rss_summary_featured_image": "",
                                    "slug": "-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "state": "DRAFT",
                                    "subcategory": "normal_blog_post",
                                    "synced_with_blog_root": true,
                                    "tag_ids": [],
                                    "tag_list": [],
                                    "tag_names": [],
                                    "team_perms": [],
                                    "template_path": "",
                                    "template_path_for_render": "generated_layouts/9129380208.html",
                                    "title": "My first API blog post!",
                                    "topic_ids": [],
                                    "topic_list": [],
                                    "topic_names": [],
                                    "topics": [],
                                    "translated_content": {},
                                    "tweet_immediately": false,
                                    "unpublished_at": 0,
                                    "updated": 1557908534312,
                                    "upsize_featured_image": false,
                                    "url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "use_featured_image": true,
                                    "user_perms": [],
                                    "widget_containers": {},
                                    "widgetcontainers": {},
                                    "widgets": {}
                                },
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "content_group_id"
                                ]
                            },
                            {
                                "id": "clone_the_blog_post",
                                "name": "Clone the blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/clone",
                                "method": "PUT",
                                "sampleData": {
                                    "ab": false,
                                    "ab_variation": false,
                                    "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "analytics_page_id": "9665694062",
                                    "analytics_page_type": "blog-post",
                                    "archived": false,
                                    "are_comments_allowed": true,
                                    "attached_stylesheets": [],
                                    "author_at": 1557908534312,
                                    "blueprint_type_id": 0,
                                    "category": 3,
                                    "category_id": 3,
                                    "comment_count": 0,
                                    "composition_id": 0,
                                    "content_access_rule_ids": [],
                                    "content_group": 9129311969,
                                    "content_group_id": 9129311969,
                                    "content_type_category": 3,
                                    "content_type_category_id": 3,
                                    "created": 1557908491366,
                                    "created_time": 1557908491366,
                                    "css": {},
                                    "css_text": "",
                                    "ctas": null,
                                    "current_state": "DRAFT",
                                    "currently_published": false,
                                    "deleted_at": 0,
                                    "domain": "",
                                    "enable_google_amp_output_override": false,
                                    "featured_image": "",
                                    "featured_image_alt_text": "",
                                    "featured_image_height": 0,
                                    "featured_image_length": 0,
                                    "featured_image_width": 0,
                                    "flex_areas": {},
                                    "freeze_date": 1557908534312,
                                    "has_content_access_rules": false,
                                    "has_user_changes": true,
                                    "html_title": "My first API blog post!",
                                    "id": 9665694062,
                                    "is_captcha_required": true,
                                    "is_draft": true,
                                    "is_instant_email_enabled": false,
                                    "is_published": false,
                                    "is_social_publishing_enabled": false,
                                    "keywords": [],
                                    "label": "My first API blog post!",
                                    "layout_sections": {},
                                    "list_template": "generated_layouts/9129380208.html",
                                    "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "mab": false,
                                    "mab_master": false,
                                    "mab_variant": false,
                                    "meta": {
                                        "attached_stylesheets": [],
                                        "post_summary": null,
                                        "has_user_changes": true,
                                        "last_edit_session_id": null,
                                        "last_edit_update_id": null,
                                        "html_title": "My first API blog post!",
                                        "tag_ids": [],
                                        "topic_ids": []
                                    },
                                    "name": "My first API blog post!",
                                    "page_redirected": false,
                                    "page_title": "My first API blog post!",
                                    "parent_blog": {
                                        "absolute_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "allow_comments": true,
                                        "amp_body_color": "#404040",
                                        "amp_body_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_body_font_size": "18",
                                        "amp_custom_css": "",
                                        "amp_header_background_color": "#ffffff",
                                        "amp_header_color": "#1e1e1e",
                                        "amp_header_font": "'Helvetica Neue', Helvetica, Arial, sans-serif",
                                        "amp_header_font_size": "36",
                                        "amp_link_color": "#416bb3",
                                        "amp_logo_alt": "",
                                        "amp_logo_height": 0,
                                        "amp_logo_src": "",
                                        "amp_logo_width": 0,
                                        "analytics_page_id": 9129311969,
                                        "attached_stylesheets": [],
                                        "captcha_after_days": 7,
                                        "captcha_always": false,
                                        "category_id": 3,
                                        "close_comments_older": 0,
                                        "comment_date_format": "medium",
                                        "comment_form_guid": "952d783f-7f01-410d-a599-79ef5fcb7f92",
                                        "comment_max_thread_depth": 1,
                                        "comment_moderation": false,
                                        "comment_notification_emails": [],
                                        "comment_should_create_contact": false,
                                        "comment_verification_text": "",
                                        "cos_object_type": "BLOG",
                                        "created": 1556202153258,
                                        "created_date_time": 1556202153258,
                                        "default_group_style_id": "",
                                        "default_notification_from_name": "",
                                        "default_notification_reply_to": "",
                                        "deleted_at": 0,
                                        "description": "",
                                        "domain": "",
                                        "domain_when_published": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "email_api_subscription_id": 6602112,
                                        "enable_google_amp_output": true,
                                        "enable_social_auto_publishing": false,
                                        "html_footer": "",
                                        "html_footer_is_shared": true,
                                        "html_head": "",
                                        "html_head_is_shared": true,
                                        "html_keywords": [],
                                        "html_title": "",
                                        "id": 9129311969,
                                        "item_layout_id": 9129380208,
                                        "item_template_is_shared": true,
                                        "item_template_path": "generated_layouts/9129380208.html",
                                        "label": "Data rule",
                                        "listing_layout_id": 9129380208,
                                        "listing_template_path": "generated_layouts/9129380208.html",
                                        "live_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "month_filter_format": "MMMM yyyy",
                                        "name": "Data rule",
                                        "portal_id": 5761317,
                                        "post_html_footer": "",
                                        "post_html_head": "",
                                        "posts_per_listing_page": 10,
                                        "posts_per_rss_feed": 10,
                                        "public_access_rules": [],
                                        "public_access_rules_enabled": false,
                                        "public_title": "Data rule",
                                        "publish_date_format": "medium",
                                        "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "root_url": "http://testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "show_social_link_facebook": true,
                                        "show_social_link_linkedin": true,
                                        "show_social_link_twitter": true,
                                        "show_summary_in_emails": true,
                                        "show_summary_in_listing": true,
                                        "show_summary_in_rss": true,
                                        "slug": "",
                                        "social_account_twitter": "",
                                        "subscription_contacts_property": "blog_data_rule_9129311969_subscription",
                                        "subscription_form_guid": "ba48b977-5a15-4a92-bfaf-82f3ecc29efa",
                                        "subscription_lists_by_type": {},
                                        "updated": 1556202153258,
                                        "updated_date_time": 1556202153258,
                                        "url_base": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                        "url_segments": {
                                            "all": "all",
                                            "archive": "archive",
                                            "author": "author",
                                            "page": "page",
                                            "tag": "tag"
                                        },
                                        "use_featured_image_in_summary": true,
                                        "uses_default_template": false
                                    },
                                    "past_mab_experiment_ids": [],
                                    "personas": [],
                                    "placement_guids": [],
                                    "portal_id": 5761317,
                                    "post_body_rss": "",
                                    "post_email_content": "",
                                    "post_featured_image_if_enabled": "",
                                    "post_list_content": "",
                                    "post_list_summary_featured_image": "",
                                    "post_rss_content": "",
                                    "post_rss_summary_featured_image": "",
                                    "post_summary_rss": "",
                                    "post_template": "generated_layouts/9129380208.html",
                                    "preview_key": "HRhkgMsd",
                                    "processing_status": "",
                                    "public_access_rules": [],
                                    "public_access_rules_enabled": false,
                                    "publish_date": 0,
                                    "publish_date_local_time": 0,
                                    "publish_date_localized": {
                                        "date": 0,
                                        "format": "medium"
                                    },
                                    "published_url": "",
                                    "resolved_domain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                                    "rss_summary_featured_image": "",
                                    "slug": "-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "state": "DRAFT",
                                    "subcategory": "normal_blog_post",
                                    "synced_with_blog_root": true,
                                    "tag_ids": [],
                                    "tag_list": [],
                                    "tag_names": [],
                                    "team_perms": [],
                                    "template_path": "",
                                    "template_path_for_render": "generated_layouts/9129380208.html",
                                    "title": "My first API blog post!",
                                    "topic_ids": [],
                                    "topic_list": [],
                                    "topic_names": [],
                                    "topics": [],
                                    "translated_content": {},
                                    "tweet_immediately": false,
                                    "unpublished_at": 0,
                                    "updated": 1557908534312,
                                    "upsize_featured_image": false,
                                    "url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-f7814500-8743-4cd3-9edf-f5524b58ea95",
                                    "use_featured_image": true,
                                    "user_perms": [],
                                    "widget_containers": {},
                                    "widgetcontainers": {},
                                    "widgets": {}
                                },
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_the_blog_post",
                                "name": "Delete the blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "publsh_or_unpublish_a_blog_post",
                                "name": "Publish or unpublish a blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/publish-action",
                                "method": "POST",
                                "sampleData": {
                                    "action": "schedule-publish"
                                },
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "action"
                                ]
                            },
                            {
                                "id": "updates_the_auto_save_buffer",
                                "name": "Updates the auto-save buffer",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/buffer",
                                "method": "PUT",
                                "sampleData": {
                                    "slug": "/blog/2013/10/my-first-api-blog-post",
                                    "post_body": "<p>Hey guys! I'm using the <b>API</b>! Woohoo!</p>",
                                    "post_summary": "<p>Hey guys!</p>",
                                    "publish_immediately": false,
                                    "publish_date": 1381266273000,
                                    "campaign": "43a0c102-4e62-4527-849a-21c9bc40c908",
                                    "campaign_name": "Fall 2013 Season End Clearance",
                                    "meta_description": "A post about posts",
                                    "topic_ids": [],
                                    "blog_author_id": ""
                                },
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "validates_the_auto_save_buffer_version_of_the_blog_post",
                                "name": "Validates the auto-save buffer version of the blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/validate-buffer",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "copies_the_contents_of_auto_save_buffer_into_live_blog_post",
                                "name": "Copies the contents of the auto-save buffer into live blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/push-buffer-live",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "restore_a_previously_deleted_blog_post",
                                "name": "Restores a previously deleted blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/restore-deleted",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "restore_a_previous_version_of_the_blog_post",
                                "name": "Restore a previous version of the blog post",
                                "url": "/content/api/v2/blog-posts/:_blog_post_id/versions/restore",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "blog_post_id",
                                        "name": "blog_post_id",
                                        "description": "Unique identifier for a particular blog.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_templates",
                        "name": "CMS Templates API",
                        "operations": [
                            {
                                "id": "create_a_template",
                                "name": "Create a new template",
                                "url": "/content/api/v2/templates",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "sampleData": {
                                    "category_id": 1,
                                    "folder": "examples",
                                    "is_available_for_new_content": "False",
                                    "template_type": 4,
                                    "path": "custom/page/examples/a-new-template.html",
                                    "source": "The template source goes here"
                                }
                            },
                            {
                                "id": "update_the_template",
                                "name": "Update the template",
                                "url": "/content/api/v2/templates/:_template_id",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "template_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "sampleData": {
                                    "category_id": 1,
                                    "folder": "examples",
                                    "is_available_for_new_content": "False",
                                    "template_type": 4,
                                    "path": "custom/page/examples/a-new-template.html",
                                    "source": "The template source goes here"
                                }
                            },
                            {
                                "id": "create_or_update_the_template",
                                "name": "Create or Update the template",
                                "url": [
                                    "/content/api/v2/templates/:_template_id",
                                    "/content/api/v2/templates"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "template_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "sampleData": {
                                    "category_id": 1,
                                    "folder": "examples",
                                    "is_available_for_new_content": "False",
                                    "template_type": 4,
                                    "path": "custom/page/examples/a-new-template.html",
                                    "source": "The template source goes here"
                                }
                            },
                            {
                                "id": "copies_the_contents_of_auto-save_buffer_into_live",
                                "name": "Copies the contents of auto-save buffer into live",
                                "url": "/content/api/v2/templates/:_template_id/push-buffer-live",
                                "method": "POST",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "template_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "restores_a_previously_deleted_template",
                                "name": "Restores a previously deleted template",
                                "url": "/content/api/v2/templates/:_template_id/restore-deleted",
                                "method": "POST",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "template_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_url_mappings",
                        "name": "CMS URL Mappings API",
                        "sampleData": {
                            "contentGroupId": null,
                            "destination": "http://62515.sites.hubspot.com/the-destination-url",
                            "isMatchFullUrl": false,
                            "isMatchQueryString": false,
                            "isOnlyAfterNotFound": true,
                            "isPattern": false,
                            "isRegex": false,
                            "name": "",
                            "portalId": 62515,
                            "precedence": 1000000008,
                            "redirectStyle": null,
                            "routePrefix": "/the-original-source",
                            "siteId": null
                        },
                        "operations": [
                            {
                                "id": "create_a_new_url_mapping",
                                "name": "Create a new url mapping",
                                "url": "/url-mappings/v3/url-mappings",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_url_mappings",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "routePrefix",
                                    "destination"
                                ]
                            },
                            {
                                "id": "update_the_url_mapping",
                                "name": "Update the url mapping",
                                "url": "/url-mappings/v3/url-mappings/:_url_mapping_id",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "url_mapping_id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_url_mappings",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "delete_the_url_mapping",
                                "name": "Delete the url mapping",
                                "url": "/url-mappings/v3/url-mappings/:_url_mapping_id",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "url_mapping_id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_url_mappings",
                                        "extract": "objects[0].id"
                                    }
                                }
                            },
                            {
                                "id": "create_or_update_a_url_mapping",
                                "name": "Create or Update a url mapping",
                                "url": [
                                    "/url-mappings/v3/url-mappings/:_url_mapping_id",
                                    "/url-mappings/v3/url-mappings"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "url_mapping_id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "howToFindIdentifier": {
                                    "lookup": {
                                        "id": "list_url_mappings",
                                        "extract": "objects[0].id"
                                    }
                                },
                                "requiredMappings": [
                                    "routePrefix",
                                    "destination"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_blog_comments",
                        "name": "CMS Blog Comments API",
                        "operations": [
                            {
                                "id": "create_new_comment",
                                "name": "Create new comment",
                                "url": "/comments/v3/comments",
                                "method": "POST",
                                "sampleData": {
                                    "comment": "This is a test blog comment",
                                    "contentId": "6513512292",
                                    "collectionId": "6513512292",
                                    "contentAuthorEmail": "",
                                    "contentAuthorName": "",
                                    "contentPermalink": "",
                                    "contentTitle": "This is a test blog title",
                                    "userEmail": "tester@gmail.com",
                                    "userName": "tester",
                                    "userUrl": ""
                                },
                                "requiredMappings": [
                                    "comment",
                                    "userEmail",
                                    "collectionId",
                                    "userName"
                                ]
                            },
                            {
                                "id": "delete_the_comment",
                                "name": "Delete the comment",
                                "url": "/comments/v3/comments/:_comment_id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "comment_id",
                                        "name": "comment_id",
                                        "in": "path",
                                        "description": "Unique identifier for a particular blog.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "restore_deleted_comment",
                                "name": "Restore deleted comment",
                                "url": "/comments/v3/comments/:_comment_id/restore",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "comment_id",
                                        "name": "comment_id",
                                        "in": "path",
                                        "description": "Unique identifier for a particular blog.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "social_media_api",
                        "name": "Social Media API",
                        "operations": [
                            {
                                "id": "create_a_broadcast_message",
                                "name": "Create a Broadcast Message",
                                "url": "/broadcast/v1/broadcasts",
                                "method": "POST",
                                "sampleData": {
                                    "channelGuid": "7c13e300-e43f-3aa0-a842-93956cb214e9",
                                    "triggerAt": 1513825797000,
                                    "status": "DRAFT",
                                    "content": {
                                        "body": "A simple message with a link http://blog.hubspot.com",
                                        "photoUrl": "http://cdn2.hubspot.net/hubfs/53/sprocket_web-2.png"
                                    }
                                },
                                "requiredMappings": [
                                    "channelGuid"
                                ]
                            },
                            {
                                "id": "cancel_a_broadcast_message",
                                "name": "Cancel a Broadcast Message",
                                "url": "/broadcast/v1/broadcasts/:_broadcast_guid",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "broadcast_guid",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "timeline_api",
                        "name": "Timeline API",
                        "operations": [
                            {
                                "id": "create_or_update_a_group_of_timeline_event",
                                "name": "Create or Update a group of  timeline event",
                                "method": "PUT",
                                "url": "/integrations/v1/:_application‐id/timeline/event/batch",
                                "sampleData": {
                                    "eventWrappers": [
                                        {
                                            "id": "3",
                                            "objectId": 1,
                                            "email": "test@test.com",
                                            "utk": "89b5afb740d41f4cd6651ac5237edf09",
                                            "eventTypeId": "123",
                                            "presentationId": "9876543",
                                            "extraData": {
                                                "name": "JohnDoe",
                                                "weather": "Cloudy"
                                            },
                                            "timelineIFrame": {
                                                "linkLabel": "View external data",
                                                "iframeLabel": "Example iframe",
                                                "iframeUri": "https://www.example.com",
                                                "width": 800,
                                                "height": 300
                                            }
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "application‐id",
                                        "name": "application-id",
                                        "description": "The ID of the application that the event type was created for.  The eventTypeId used in the request body must line up with this application-id.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "eventWrappers[*].id",
                                    "eventWrappers[*].eventTypeId"
                                ]
                            },
                            {
                                "id": "create_new_timeline_event_type",
                                "name": "Create new timeline event type",
                                "url": "/integrations/v1/:application-id/timeline/event-types",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "name": "New Event Type",
                                    "applicationId": "123",
                                    "objectType": "CONTACT",
                                    "headerTemplate": "# Title for event {{id}}\nThis is an event for {{objectType}}",
                                    "detailTemplate": "This event happened on {{#formatDate timestamp}}{{/formatDate}}"
                                },
                                "parameters": [
                                    {
                                        "id": "application‐id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "applicationId"
                                ]
                            },
                            {
                                "id": "update_a_timeline_event_type",
                                "name": "Update a timeline event type",
                                "url": "/integrations/v1/:application-id/timeline/event-types/:_event-type-id",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "name": "New Event Type",
                                    "applicationId": "123",
                                    "objectType": "CONTACT",
                                    "headerTemplate": "# Title for event {{id}}\nThis is an event for {{objectType}}",
                                    "detailTemplate": "This event happened on {{#formatDate timestamp}}{{/formatDate}}"
                                },
                                "parameters": [
                                    {
                                        "id": "application‐id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "applicationId"
                                ]
                            },
                            {
                                "id": "create_or_update_a_timeline_event_type",
                                "name": "Create or Update a timeline event type",
                                "url": [
                                    "/integrations/v1/:application-id/timeline/event-types/:_event-type-id",
                                    "/integrations/v1/:application-id/timeline/event-types"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "sampleData": {
                                    "name": "New Event Type",
                                    "applicationId": "123",
                                    "objectType": "CONTACT",
                                    "headerTemplate": "# Title for event {{id}}\nThis is an event for {{objectType}}",
                                    "detailTemplate": "This event happened on {{#formatDate timestamp}}{{/formatDate}}"
                                },
                                "parameters": [
                                    {
                                        "id": "application‐id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "applicationId"
                                ]
                            },
                            {
                                "id": "delete_a_timeline_event_type",
                                "name": "Delete timeline event type",
                                "url": "/integrations/v1/:application-id/timeline/event-types/:_event-type-id",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "application‐id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_property_for_event_type",
                                "name": "Create property for event type",
                                "url": "/integrations/v1/:_application-id/timeline/event-types/:_event-type-id/properties",
                                "method": "POST",
                                "sampleData": {
                                    "name": "size",
                                    "propertyType": "Enumeration",
                                    "label": "size",
                                    "options": [
                                        {
                                            "value": "large",
                                            "label": "Large"
                                        }
                                    ],
                                    "objectProperty": "company"
                                },
                                "parameters": [
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "name": "event-type-id",
                                        "in": "path",
                                        "description": "The ID of the event type that you want to create the property for.",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "propertyType",
                                    "label"
                                ]
                            },
                            {
                                "id": "update_property_for_event_type",
                                "name": "Update property for event type",
                                "url": "/integrations/v1/:_application-id/timeline/event-types/:_event-type-id/properties",
                                "method": "PUT",
                                "sampleData": {
                                    "id": 12,
                                    "name": "size",
                                    "propertyType": "Enumeration",
                                    "label": "size",
                                    "options": [
                                        {
                                            "value": "large",
                                            "label": "Large"
                                        }
                                    ],
                                    "objectProperty": "company"
                                },
                                "parameters": [
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "name": "event-type-id",
                                        "in": "path",
                                        "description": "The ID of the event type that you want to create the property for.",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "id"
                                ]
                            },
                            {
                                "id": "delete_property_for_event_type",
                                "name": "Delete property for event type",
                                "url": "/integrations/v1/:_application-id/timeline/event-types/:_event-type-id/properties/:_property-id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "application-id",
                                        "name": "application-id",
                                        "description": "The ID of the OAuth app you're creating the event type for.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "event-type-id",
                                        "name": "event-type-id",
                                        "in": "path",
                                        "description": "The ID of the event type that you want to create the property for.",
                                        "required": true
                                    },
                                    {
                                        "id": "property-id",
                                        "name": "property-id",
                                        "in": "path",
                                        "description": "The ID of the property you want to delete.",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "workflow_api",
                        "name": "Workflows API",
                        "operations": [
                            {
                                "id": "enroll_a_contact_into_a_workflow",
                                "name": "Enroll a contact into a workflow",
                                "url": "/automation/v2/workflows/:_workflowId/enrollments/contacts/:_email",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "workflowId",
                                        "name": "Workflow ID",
                                        "description": "The ID of the workflow you wish to see metadata for.",
                                        "required": true
                                    },
                                    {
                                        "id": "email",
                                        "name": "Email Address",
                                        "description": "The email of the contact you wish to enroll in the workflow.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "unenroll_a_contact_from_a_workflow",
                                "name": "Unenroll a contact from a workflow",
                                "url": "/automation/v2/workflows/:_workflowId/enrollments/contacts/:_email",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "workflowId",
                                        "name": "Workflow ID",
                                        "description": "The ID of the workflow you wish to see metadata for.",
                                        "required": true
                                    },
                                    {
                                        "id": "email",
                                        "name": "Email Address",
                                        "description": "The email of the contact you wish to unenroll from the workflow.",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_workflow",
                                "name": "Delete a workflow",
                                "url": "/automation/v3/workflows/:_workflowId",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "workflowId",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "log_events",
                                "name": "Log events",
                                "url": "/automation/v3/logevents/workflows/:_workflowId/filter",
                                "method": "PUT",
                                "sampleData": {
                                    "vid": 34,
                                    "types": [
                                        "ENROLLED",
                                        "COMPLETED_WORKFLOW"
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "workflowId",
                                        "name": "Workflow ID",
                                        "description": "The ID of the workflow you wish to see metadata for.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "create_a_workflow",
                                "name": "Create a workflow",
                                "url": "/automation/v3/workflows",
                                "method": "POST",
                                "sampleData": {
                                    "name": "Test Workflow123",
                                    "type": "DRIP_DELAY",
                                    "segmentCriteria": [
                                        {
                                            "operator": "SET_ANY",
                                            "value": "lead;salesqualifiedlead;marketingqualifiedlead",
                                            "property": "lifecyclestage",
                                            "type": "string"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "type": "BRANCH",
                                            "filters": [
                                                {
                                                    "operator": "EQ",
                                                    "value": "Marketing Software",
                                                    "property": "industry",
                                                    "type": "string"
                                                }
                                            ],
                                            "acceptActions": [
                                                {
                                                    "type": "SET_CONTACT_PROPERTY",
                                                    "propertyName": "hubspot_owner_id",
                                                    "newValue": "12345"
                                                }
                                            ],
                                            "rejectActions": [
                                                {
                                                    "type": "SET_CONTACT_PROPERTY",
                                                    "propertyName": "hubspot_owner_id",
                                                    "newValue": "67890"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "body": "{ {{#each data}} {{#if @index}},{{/if}} {{#compare @key '==' 'segmentCriteria'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} {{#compare @key '==' 'actions'}} {{#each this}} {{#each this}} {{#if @index}},{{/if}} {{#compare @key '==' 'filters'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/each}} {{/each}} {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/compare}} {{/each}} }",
                                "requiredMappings": [
                                    "name"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contacts_lists",
                        "name": "Contact Lists API",
                        "operations": [
                            {
                                "id": "create_a_contact_list",
                                "name": "Create a contact list",
                                "url": "/contacts/v1/lists",
                                "method": "POST",
                                "sampleData": {
                                    "name": "tweeters",
                                    "dynamic": true,
                                    "portalId": 62515,
                                    "filters": [
                                        {
                                            "operator": "EQ",
                                            "value": "@hubspot",
                                            "property": "twitterhandle",
                                            "type": "string",
                                            "form": "92364e25-6aa7-46f0-bfb0-aacbb537513d",
                                            "page": "19612330",
                                            "afterTimestamp": "1365739200000"
                                        }
                                    ]
                                },
                                "body": "{ {{#each data}} {{#if @index}},{{/if}} {{#compare @key '==' 'filters'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/each}} }"
                            },
                            {
                                "id": "update_a_contact_list",
                                "name": "Update a contact list",
                                "url": "/contacts/v1/lists/:_list_id",
                                "body": "{ {{#each data}} {{#if @index}},{{/if}} {{#compare @key '==' 'filters'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/each}} }",
                                "method": "POST",
                                "sampleData": {
                                    "name": "tweeters",
                                    "dynamic": true,
                                    "portalId": 62515,
                                    "filters": [
                                        {
                                            "operator": "EQ",
                                            "value": "@hubspot",
                                            "property": "twitterhandle",
                                            "type": "string",
                                            "form": "92364e25-6aa7-46f0-bfb0-aacbb537513d",
                                            "page": "19612330",
                                            "afterTimestamp": "1365739200000"
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "list_id",
                                        "name": "List ID",
                                        "description": "Unique identifier for the list that you're looking for.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_update_a_contact_list",
                                "name": "Create or Update a contact list",
                                "url": [
                                    "/contacts/v1/lists/:_list_id",
                                    "/contacts/v1/lists"
                                ],
                                "method": [
                                    "POST",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "list_id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "body": [
                                    "{ {{#each data}} {{#if @index}},{{/if}} {{#compare @key '==' 'filters'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/each}} }",
                                    "{ {{#each data}} {{#if @index}},{{/if}} {{#compare @key '==' 'filters'}} \"{{@key}}\": [{{{jsonSerialize this}}}] {{else}} \"{{@key}}\": {{{jsonSerialize this}}} {{/compare}} {{/each}} }"
                                ],
                                "sampleData": {
                                    "name": "tweeters",
                                    "dynamic": true,
                                    "portalId": 62515,
                                    "filters": [
                                        {
                                            "operator": "EQ",
                                            "value": "@hubspot",
                                            "property": "twitterhandle",
                                            "type": "string",
                                            "form": "92364e25-6aa7-46f0-bfb0-aacbb537513d",
                                            "page": "19612330",
                                            "afterTimestamp": "1365739200000"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "delete_a_contact_list",
                                "name": "Delete a contact list",
                                "url": "/contacts/v1/lists/:_list_id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "list_id",
                                        "name": "List ID",
                                        "description": "Unique identifier for the list that you're looking for.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "add_contacts_to_the_list",
                                "name": "Add existing contacts to list",
                                "url": "/contacts/v1/lists/:_list_id/add",
                                "method": "POST",
                                "sampleData": {
                                    "vids": [
                                        3057124,
                                        5524274
                                    ],
                                    "emails": [
                                        "testingapis@hubspot.com"
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "list_id",
                                        "name": "List ID",
                                        "description": "You need to include the ID for the list you're adding the lead to. You can search for lists using the get lists method.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "emails",
                                    "vids"
                                ]
                            },
                            {
                                "id": "add_contacts_to_list",
                                "name": "Remove an existing contact from a list",
                                "url": "/contacts/v1/lists/:_list_id/remove",
                                "method": "POST",
                                "sampleData": {
                                    "vids": [
                                        3057124,
                                        5524274
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "list_id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "vids"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_extensions_api",
                        "name": "CRM Extensions API",
                        "sampleData": {
                            "applicationId": 12345,
                            "baseUris": [
                                "https://example.com/actions"
                            ],
                            "dataFetchUri": "https://example.com/demo-tickets",
                            "title": "DemoTickets",
                            "propertyDefinitions": [
                                {
                                    "options": [
                                        {
                                            "type": "SUCCESS",
                                            "label": "In Progress",
                                            "name": "inprogress"
                                        }
                                    ],
                                    "name": "status",
                                    "label": "Status",
                                    "dataType": "STATUS"
                                }
                            ],
                            "associatedHubSpotObjectTypes": [
                                "COMPANY"
                            ],
                            "associatedHubSpotObjectTypeProperties": {
                                "COMPANY": [
                                    "domain"
                                ]
                            }
                        },
                        "operations": [
                            {
                                "id": "create_object_type",
                                "name": "Create object type",
                                "url": "/extensions/sales-objects/v1/object-types",
                                "method": "POST",
                                "requiredMappings": [
                                    "applicationId",
                                    "dataFetchUri",
                                    "title"
                                ]
                            },
                            {
                                "id": "modify_an_object_type",
                                "name": "Modify an object type",
                                "url": "/extensions/sales-objects/v1/object-types/:_object-type-id",
                                "method": "POST",
                                "requiredMappings": [
                                    "applicationId",
                                    "dataFetchUri",
                                    "title"
                                ],
                                "parameters": [
                                    {
                                        "id": "object-type-id",
                                        "name": "object-type-id",
                                        "in": "path",
                                        "required": true,
                                        "description": "The id of the object type you want to update."
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_an_object_type",
                                "name": "Create or Update an object type",
                                "url": [
                                    "/extensions/sales-objects/v1/object-types/:_object-type-id",
                                    "/extensions/sales-objects/v1/object-types"
                                ],
                                "method": [
                                    "POST",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "applicationId",
                                    "dataFetchUri",
                                    "title"
                                ],
                                "parameters": [
                                    {
                                        "id": "object-type-id",
                                        "name": "object-type-id",
                                        "in": "path",
                                        "required": true,
                                        "description": "The id of the object type you want to update."
                                    }
                                ]
                            },
                            {
                                "id": "delete_an_object_type",
                                "name": "Delete an object type",
                                "url": "/extensions/sales-objects/v1/object-types/:_object-type-id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "object-type-id",
                                        "name": "object-type-id",
                                        "in": "path",
                                        "required": true,
                                        "description": "The id of the object type you want to delete."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_pipelines",
                        "name": "CRM Pipelines API",
                        "sampleData": {
                            "pipelineId": "api_test_pipeline_tickets",
                            "label": "API test ticket pipeline123",
                            "displayOrder": 2,
                            "active": true,
                            "stages": [
                                {
                                    "stageId": "example_stage",
                                    "label": "Example stage",
                                    "displayOrder": 1,
                                    "metadata": {
                                        "ticketState": "OPEN",
                                        "probability": 0.5
                                    }
                                }
                            ]
                        },
                        "operations": [
                            {
                                "id": "create_new_pipeline",
                                "name": "Create new pipeline",
                                "url": "/crm-pipelines/v1/pipelines/:_object_type",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object Type",
                                        "description": "The object type that you are creating the pipeline for. Must be one of: deals, tickets",
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "pipelineId",
                                    "label",
                                    "displayOrder",
                                    "active",
                                    "stages[*].stageId",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "update_an_existing_pipeline",
                                "name": "Update an existing pipeline",
                                "url": "/crm-pipelines/v1/pipelines/:_object_type/:_pipeline_id",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object Type",
                                        "description": "The object type that you are creating the pipeline for. Must be one of: deals, tickets",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "pipeline_id",
                                        "name": "Pipeline ID",
                                        "description": "The ID of the pipeline you want to update.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "pipelineId",
                                    "label",
                                    "displayOrder",
                                    "active",
                                    "stages[*].stageId",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "create_or_update_a_pipeline",
                                "name": "Create or Update a pipeline",
                                "url": [
                                    "/crm-pipelines/v1/pipelines/:_object_type/:_pipeline_id",
                                    "/crm-pipelines/v1/pipelines/:_object_type"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object Type",
                                        "description": "The object type that you are creating the pipeline for. Must be one of: deals, tickets",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "pipeline_id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "pipelineId",
                                    "label",
                                    "displayOrder",
                                    "active",
                                    "stages[*].stageId",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "delete_an_existing_pipeline",
                                "name": "Delete an existing pipeline",
                                "url": "/crm-pipelines/v1/pipelines/:_object_type/:_pipeline_id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object Type",
                                        "description": "The object type that you are creating the pipeline for. Must be one of: deals, tickets",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "pipeline_id",
                                        "name": "Pipeline ID",
                                        "description": "The ID of the pipeline you want to update.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "email_subscriptions",
                        "name": "Email Subscription API",
                        "sampleData": {
                            "unsubscribeFromAll": true,
                            "subscriptionStatuses": [
                                {
                                    "id": 7,
                                    "subscribed": true,
                                    "optState": "OPT_IN",
                                    "legalBasis": "PERFORMANCE_OF_CONTRACT",
                                    "legalBasisExplanation": "We need to send them these emails as part of our agreement with them."
                                }
                            ],
                            "portalSubscriptionLegalBasis": "LEGITIMATE_INTEREST_CLIENT",
                            "portalSubscriptionLegalBasisExplanation": "They told us at a conference that they're interested in receiving communications."
                        },
                        "operations": [
                            {
                                "id": "update_subscription_status_of_email_address",
                                "name": "Update subscription status of email address",
                                "url": "/email/public/v1/subscriptions/:_email_address",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "email_address",
                                        "name": "Email Address",
                                        "description": "The email address for which you are updating subscription status.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "marketing_email_api",
                        "name": "Marketing Email API",
                        "sampleData": {
                            "ab": false,
                            "abHoursToWait": 4,
                            "abSampleSizeDefault": null,
                            "abSamplingDefault": null,
                            "abSuccessMetric": null,
                            "abTestPercentage": 50,
                            "abVariation": false,
                            "absoluteUrl": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-3286fc10-572e-4be6-92e8-891ded78f04d",
                            "allEmailCampaignIds": [],
                            "analyticsPageId": "9630880551",
                            "analyticsPageType": "email",
                            "archived": false,
                            "authorAt": 1557830296294,
                            "blogRssSettings": null,
                            "canSpamSettingsId": 8938856607,
                            "categoryId": 2,
                            "contentAccessRuleIds": [],
                            "contentTypeCategory": 2,
                            "createPage": false,
                            "created": 1557830196911,
                            "currentState": "DRAFT",
                            "currentlyPublished": false,
                            "customReplyTo": "",
                            "customReplyToEnabled": false,
                            "domain": "",
                            "emailBody": "{% content_attribute \"email_body\" %}{{ default_email_body }}{% end_content_attribute %}",
                            "emailNote": "",
                            "emailTemplateMode": "DESIGN_MANAGER",
                            "emailType": "BATCH_EMAIL",
                            "feedbackEmailCategory": null,
                            "feedbackSurveyId": null,
                            "flexAreas": {},
                            "freezeDate": 1557830296294,
                            "fromName": "tester",
                            "hasContentAccessRules": false,
                            "htmlTitle": "",
                            "id": 9630880551,
                            "isGraymailSuppressionEnabled": true,
                            "isLocalTimezoneSend": false,
                            "isPublished": false,
                            "isRecipientFatigueSuppressionEnabled": null,
                            "layoutSections": {},
                            "leadFlowId": null,
                            "liveDomain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                            "mailingListsExcluded": [],
                            "mailingListsIncluded": [],
                            "maxRssEntries": 5,
                            "metaDescription": "",
                            "name": "My first API marketing email!",
                            "pageExpiryEnabled": false,
                            "pageRedirected": false,
                            "pastMabExperimentIds": [],
                            "portalId": 5761317,
                            "previewKey": "uloRlGyO",
                            "processingStatus": "",
                            "publishDate": 0,
                            "publishedUrl": "",
                            "replyTo": "tester@gmail.com",
                            "resolvedDomain": "testaccount1-dev-5761317-5761317.hs-sites.com",
                            "rssEmailByText": "By",
                            "rssEmailClickThroughText": "Read more &raquo;",
                            "rssEmailCommentText": "Comment &raquo;",
                            "rssEmailEntryTemplateEnabled": false,
                            "rssEmailImageMaxWidth": 0,
                            "rssEmailUrl": "",
                            "slug": "-temporary-slug-3286fc10-572e-4be6-92e8-891ded78f04d",
                            "smartEmailFields": null,
                            "state": "DRAFT",
                            "styleSettings": null,
                            "subcategory": "batch",
                            "subject": "Sample subject line",
                            "teamPerms": [],
                            "templatePath": "",
                            "transactional": false,
                            "unpublishedAt": 0,
                            "updated": 1557830296294,
                            "url": "http://testaccount1-dev-5761317-5761317.hs-sites.com/-temporary-slug-3286fc10-572e-4be6-92e8-891ded78f04d",
                            "useRssHeadlineAsSubject": false,
                            "userPerms": [],
                            "vidsExcluded": [],
                            "vidsIncluded": [],
                            "widgets": {},
                            "workflowNames": []
                        },
                        "operations": [
                            {
                                "id": "create_a_marketing_email",
                                "name": "Create a marketing email",
                                "url": "/marketing-emails/v1/emails/",
                                "method": "POST",
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "update_a_marketing_email",
                                "name": "Update a marketing email",
                                "url": "/marketing-emails/v1/emails/:_id",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "required": true,
                                        "in": "path",
                                        "description": "The ID of the email that you want to update."
                                    }
                                ]
                            },
                            {
                                "id": "clone_a_marketing_email",
                                "name": "Clone a marketing email",
                                "url": "/marketing-emails/v1/emails/:_id/clone",
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "required": true,
                                        "in": "path",
                                        "description": "The ID of the email that you want to clone."
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_marketing_email",
                                "name": "Create or Update a marketing email",
                                "url": [
                                    "/marketing-emails/v1/emails/:_id",
                                    "/marketing-emails/v1/emails"
                                ],
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "delete_a_marketing_email",
                                "name": "Delete a marketing email",
                                "url": "/marketing-emails/v1/emails/:_id",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "required": true,
                                        "in": "path",
                                        "description": "The ID of the email that you want to update."
                                    }
                                ]
                            },
                            {
                                "id": "restore_a_deleted_marketing_email",
                                "name": "Restore a deleted marketing email",
                                "url": "/marketing-emails/v1/emails/:_id/restore-deleted",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "id",
                                        "name": "Email ID",
                                        "required": true,
                                        "in": "path",
                                        "description": "The ID of the email that you want to restore."
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "tickets",
                        "name": "Tickets API",
                        "sampleData": {
                            "subject": "string",
                            "content": "string",
                            "hs_pipeline": "string",
                            "hs_pipeline_stage": "string",
                            "hs_ticket_priority": "string",
                            "source_type": "string",
                            "status": "string",
                            "created_by": "string",
                            "objectId": 17433026
                        },
                        "operations": [
                            {
                                "id": "create_a_ticket",
                                "url": "/crm-objects/v1/objects/tickets",
                                "name": "Create a ticket",
                                "method": "POST",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "hs_pipeline",
                                    "hs_pipeline_stage"
                                ]
                            },
                            {
                                "id": "update_a_ticket",
                                "url": "/crm-objects/v1/objects/tickets/:_id",
                                "name": "Update a ticket",
                                "body": "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_tickets",
                                "url": [
                                    "/crm-objects/v1/objects/tickets/:_id",
                                    "/crm-objects/v1/objects/tickets"
                                ],
                                "name": "Create or Update a tickets",
                                "method": [
                                    "PUT",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "hs_pipeline",
                                    "hs_pipeline_stage"
                                ],
                                "body": [
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]",
                                    "[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]"
                                ],
                                "parameters": [
                                    {
                                        "id": "id",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_tickets",
                                "url": "/crm-objects/v1/objects/tickets/:_id",
                                "name": "Delete a tickets",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_a_group_of_tickets",
                                "url": "/crm-objects/v1/objects/tickets",
                                "name": "Create a group of tickets",
                                "method": "POST",
                                "body": "[[{{#each data}}{{#if @index}} , {{/if}}{\"name\": \"{{@key}}\",\"value\": \"{{this}}\" }{{/each}}]]",
                                "requiredMappings": [
                                    "hs_pipeline",
                                    "hs_pipeline_stage"
                                ]
                            },
                            {
                                "id": "delete_a_group_of_tickets",
                                "url": "/crm-objects/v1/objects/tickets/batch-delete",
                                "name": "Delete a group of tickets",
                                "method": "POST",
                                "sampleData": {
                                    "ids": [
                                        1642813,
                                        1645205
                                    ]
                                },
                                "requiredMappings": [
                                    "ids"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_object_properties_api",
                        "name": "CRM Object Properties API",
                        "operations": [
                            {
                                "id": "create_a_object_property",
                                "url": "/properties/v2/:_object_type/properties",
                                "name": "Create a new object property",
                                "sampleData": {
                                    "name": "example_custom_property",
                                    "label": "Example custom product property",
                                    "description": "This is an example property",
                                    "groupName": "productinformation",
                                    "type": "string",
                                    "fieldType": "text",
                                    "displayOrder": -1
                                },
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_an_object_property",
                                "url": "/properties/v2/:_object_type/properties/named/:_property_name",
                                "name": "Update an object property",
                                "sampleData": {
                                    "label": "Example updated ticket property",
                                    "description": "This is a property that has an updated description"
                                },
                                "method": "PATCH",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "property_name",
                                        "name": "Property name",
                                        "description": "The internal name of the property you want to update.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_an_object_property",
                                "url": "/properties/v2/:_object_type/properties/named/:_property_name",
                                "name": "Delete an object property",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "property_name",
                                        "name": "Property name",
                                        "description": "The internal name of the property you want to update.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "create_an_object_property_group",
                                "url": "/properties/v2/:_object_type/groups",
                                "name": "Create an object property group",
                                "sampleData": {
                                    "name": "examplegroup",
                                    "displayName": "An example property group"
                                },
                                "method": "POST",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "update_an_object_property_group",
                                "url": "/properties/v2/:_object_type/groups/named/:_group_name",
                                "name": "Update an object property group",
                                "sampleData": {
                                    "label": "Example updated ticket property",
                                    "description": "This is a property that has an updated description"
                                },
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "group_name",
                                        "name": "Group name",
                                        "description": "Provide name of the group.",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            },
                            {
                                "id": "delete_an_object_property_group",
                                "url": "properties/v2/:_object_type/groups/named/:_group_name",
                                "name": "Delete an object property group",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "object_type",
                                        "name": "Object type",
                                        "description": "The specific object that you want to create a new property for. Must be one of: tickets, products and line_items.",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "group_name",
                                        "name": "Group name",
                                        "description": "Provide name of the group",
                                        "required": true,
                                        "in": "path"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "version": "v3",
                "resources": [
                    {
                        "id": "companies",
                        "name": "CRM API : Companies",
                        "operations": [
                            {
                                "id": "create_a_company",
                                "url": "/crm/v3/objects/companies",
                                "name": "Create",
                                "method": "POST",
                                "sampleData": {
                                    "properties": {
                                        "about_us": "",
                                        "facebookfans": "",
                                        "founded_year": "",
                                        "hs_additional_domains": "",
                                        "hs_ideal_customer_profile": "",
                                        "hs_is_target_account": "",
                                        "hs_lastmodifieddate": "",
                                        "hs_target_account": "",
                                        "hs_target_account_recommendation_snooze_time": "",
                                        "is_public": "",
                                        "timezone": "",
                                        "total_money_raised": "",
                                        "name": "Demo test",
                                        "owneremail": "demo@example.com",
                                        "twitterhandle": "",
                                        "ownername": "",
                                        "phone": "",
                                        "twitterbio": "",
                                        "twitterfollowers": "",
                                        "address": "",
                                        "address2": "",
                                        "facebook_company_page": "",
                                        "city": "",
                                        "linkedin_company_page": "",
                                        "linkedinbio": "",
                                        "state": "",
                                        "googleplus_page": "",
                                        "hubspot_owner_id": "",
                                        "zip": "",
                                        "country": "",
                                        "website": "",
                                        "domain": "",
                                        "numberofemployees": "",
                                        "industry": "",
                                        "annualrevenue": "",
                                        "lifecyclestage": "",
                                        "hs_lead_status": "",
                                        "type": "",
                                        "description": "",
                                        "closedate": "",
                                        "web_technologies": ""
                                    }
                                },
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "properties.name"
                                ]
                            },
                            {
                                "id": "update_a_company",
                                "url": "/crm/v3/objects/companies/:_companyId",
                                "name": "Update",
                                "method": "PATCH",
                                "sampleData": {
                                    "properties": {
                                        "about_us": "",
                                        "facebookfans": "",
                                        "founded_year": "",
                                        "hs_additional_domains": "",
                                        "hs_ideal_customer_profile": "",
                                        "hs_is_target_account": "",
                                        "hs_lastmodifieddate": "",
                                        "hs_target_account": "",
                                        "hs_target_account_recommendation_snooze_time": "",
                                        "is_public": "",
                                        "timezone": "",
                                        "total_money_raised": "",
                                        "name": "Demo test",
                                        "owneremail": "demo@example.com",
                                        "twitterhandle": "",
                                        "ownername": "",
                                        "phone": "",
                                        "twitterbio": "",
                                        "twitterfollowers": "",
                                        "address": "",
                                        "address2": "",
                                        "facebook_company_page": "",
                                        "city": "",
                                        "linkedin_company_page": "",
                                        "linkedinbio": "",
                                        "state": "",
                                        "googleplus_page": "",
                                        "hubspot_owner_id": "",
                                        "zip": "",
                                        "country": "",
                                        "website": "",
                                        "domain": "",
                                        "numberofemployees": "",
                                        "industry": "",
                                        "annualrevenue": "",
                                        "lifecyclestage": "",
                                        "hs_lead_status": "",
                                        "type": "",
                                        "description": "",
                                        "closedate": "",
                                        "web_technologies": ""
                                    }
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_company",
                                "url": [
                                    "/crm/v3/objects/companies/:_companyId",
                                    "/crm/v3/objects/companies"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "properties": {
                                        "about_us": "",
                                        "facebookfans": "",
                                        "founded_year": "",
                                        "hs_additional_domains": "",
                                        "hs_ideal_customer_profile": "",
                                        "hs_is_target_account": "",
                                        "hs_lastmodifieddate": "",
                                        "hs_target_account": "",
                                        "hs_target_account_recommendation_snooze_time": "",
                                        "is_public": "",
                                        "timezone": "",
                                        "total_money_raised": "",
                                        "name": "Demo test",
                                        "owneremail": "demo@example.com",
                                        "twitterhandle": "",
                                        "ownername": "",
                                        "phone": "",
                                        "twitterbio": "",
                                        "twitterfollowers": "",
                                        "address": "",
                                        "address2": "",
                                        "facebook_company_page": "",
                                        "city": "",
                                        "linkedin_company_page": "",
                                        "linkedinbio": "",
                                        "state": "",
                                        "googleplus_page": "",
                                        "hubspot_owner_id": "",
                                        "zip": "",
                                        "country": "",
                                        "website": "",
                                        "domain": "",
                                        "numberofemployees": "",
                                        "industry": "",
                                        "annualrevenue": "",
                                        "lifecyclestage": "",
                                        "hs_lead_status": "",
                                        "type": "",
                                        "description": "",
                                        "closedate": "",
                                        "web_technologies": ""
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "properties.name"
                                ]
                            },
                            {
                                "id": "delete_a_company",
                                "url": "/crm/v3/objects/companies/:_companyId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_companies",
                                "url": "/crm/v3/objects/companies/:_companyId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two companies",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique company id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_companies",
                                "url": "/crm/v3/objects/companies/:_companyId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two companies",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "companyId",
                                        "name": "Company Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique company id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: contacts, deals, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_companies_by_id",
                                "url": "/crm/v3/objects/companies/batch/archive",
                                "name": "Archive a batch of companies by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_companies",
                                "url": "/crm/v3/objects/companies/batch/create",
                                "name": "Create a batch of companies",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "city": "Cambridge",
                                                "domain": "biglytics.net",
                                                "industry": "Technology",
                                                "name": "Biglytics",
                                                "phone": "(877) 929-0687",
                                                "state": "Massachusetts"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.city",
                                    "inputs[*].properties.domain",
                                    "inputs[*].properties.industry",
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.phone",
                                    "inputs[*].properties.state"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_companies",
                                "url": "/crm/v3/objects/companies/batch/update",
                                "name": "Update a batch of companies",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "city": "Cambridge",
                                                "domain": "biglytics.net",
                                                "industry": "Technology",
                                                "name": "Biglytics",
                                                "phone": "(877) 929-0687",
                                                "state": "Massachusetts"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.city",
                                    "inputs[*].properties.domain",
                                    "inputs[*].properties.industry",
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.phone",
                                    "inputs[*].properties.state"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "contacts",
                        "name": "CRM API : Contacts",
                        "sampleData": {
                            "properties": {
                                "company_size": "",
                                "date_of_birth": "",
                                "degree": "",
                                "field_of_study": "",
                                "gender": "",
                                "graduation_date": "",
                                "hs_buying_role": "",
                                "hs_content_membership_notes": "",
                                "hs_content_membership_status": "",
                                "hs_facebook_ad_clicked": "",
                                "hs_facebook_click_id": "",
                                "hs_facebookid": "",
                                "hs_feedback_show_nps_web_survey": "",
                                "hs_google_click_id": "",
                                "hs_googleplusid": "",
                                "hs_lead_status": "",
                                "hs_legal_basis": "",
                                "hs_linkedinid": "",
                                "hs_twitterid": "",
                                "job_function": "",
                                "marital_status": "",
                                "military_status": "",
                                "relationship_status": "",
                                "school": "",
                                "seniority": "",
                                "start_date": "",
                                "work_email": "",
                                "firstname": "Test",
                                "twitterhandle": "",
                                "followercount": "",
                                "lastname": "Test",
                                "salutation": "",
                                "twitterprofilephoto": "",
                                "email": "test@example.com",
                                "hs_persona": "",
                                "mobilephone": "",
                                "phone": "",
                                "fax": "",
                                "address": "",
                                "hubspot_owner_id": "",
                                "owneremail": "",
                                "ownername": "",
                                "city": "",
                                "linkedinbio": "",
                                "twitterbio": "",
                                "state": "",
                                "hs_analytics_source": "",
                                "zip": "",
                                "country": "",
                                "linkedinconnections": "",
                                "hs_language": "",
                                "kloutscoregeneral": "",
                                "jobtitle": "",
                                "photo": "",
                                "message": "",
                                "closedate": "",
                                "lifecyclestage": "",
                                "company": "",
                                "website": "",
                                "numemployees": "",
                                "annualrevenue": "",
                                "industry": "",
                                "associatedcompanyid": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "create_a_contact",
                                "url": "/crm/v3/objects/contacts",
                                "name": "Create",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_contact",
                                "url": "/crm/v3/objects/contacts/:_contactId",
                                "name": "Update",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_contact",
                                "url": [
                                    "/crm/v3/objects/contacts/:_contactId",
                                    "/crm/v3/objects/contacts"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_contact",
                                "url": "/crm/v3/objects/contacts/:_contactId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_contacts",
                                "url": "/crm/v3/objects/contacts/:_contactId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two contacts",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "name": "Contact Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique contact id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_contacts",
                                "url": "/crm/v3/objects/contacts/:_contactId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two contacts",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "contactId",
                                        "name": "Contact Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique contact id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, deals, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_contacts_by_id",
                                "url": "/crm/v3/objects/contacts/batch/archive",
                                "name": "Archive a batch of contacts by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_contacts",
                                "url": "/crm/v3/objects/contacts/batch/create",
                                "name": "Create a batch of contacts",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "company": "Biglytics",
                                                "email": "bcooper@biglytics.net",
                                                "firstname": "Bryan",
                                                "lastname": "Cooper",
                                                "phone": "(877) 929-0687",
                                                "website": "biglytics.net"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.company",
                                    "inputs[*].properties.email",
                                    "inputs[*].properties.firstname",
                                    "inputs[*].properties.lastname",
                                    "inputs[*].properties.phone",
                                    "inputs[*].properties.website"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_contacts",
                                "url": "/crm/v3/objects/contacts/batch/update",
                                "name": "Update a batch of contacts",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "company": "Biglytics",
                                                "email": "bcooper@biglytics.net",
                                                "firstname": "Bryan",
                                                "lastname": "Cooper",
                                                "phone": "(877) 929-0687",
                                                "website": "biglytics.net"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.company",
                                    "inputs[*].properties.email",
                                    "inputs[*].properties.firstname",
                                    "inputs[*].properties.lastname",
                                    "inputs[*].properties.phone",
                                    "inputs[*].properties.website"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "deals",
                        "name": "CRM API : Deals",
                        "sampleData": {
                            "properties": {
                                "deal_currency_code": "",
                                "hs_analytics_source": "",
                                "hs_campaign": "",
                                "hs_deal_amount_calculation_preference": "",
                                "hs_manual_forecast_category": "",
                                "dealname": "",
                                "amount": "",
                                "dealstage": "",
                                "pipeline": "",
                                "closedate": "",
                                "createdate": "",
                                "hubspot_owner_id": "",
                                "dealtype": "",
                                "description": "",
                                "closed_lost_reason": "",
                                "closed_won_reason": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "create_a_deal",
                                "url": "/crm/v3/objects/deals",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "properties.dealname"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_deal",
                                "url": "/crm/v3/objects/deals/:_dealId",
                                "name": "Update",
                                "method": "PATCH",
                                "requiredMappings": [
                                    "properties.dealname"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_deal",
                                "url": [
                                    "/crm/v3/objects/deals/:_dealId",
                                    "/crm/v3/objects/deals"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "properties.dealname"
                                ],
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_deal",
                                "url": "/crm/v3/objects/deals/:_dealId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_deals",
                                "url": "/crm/v3/objects/deals/:_dealId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two deals",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "name": "Deal Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique deal id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_deals",
                                "url": "/crm/v3/objects/deals/:_dealId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two deals",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "dealId",
                                        "name": "Deal Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique deal id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_deals_by_id",
                                "url": "/crm/v3/objects/deals/batch/archive",
                                "name": "Archive a batch of deals by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_deals",
                                "url": "/crm/v3/objects/deals/batch/create",
                                "name": "Create a batch of deals",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "amount": "1500.00",
                                                "closedate": "2019-12-07T16:50:06.678Z",
                                                "dealname": "Custom data integrations",
                                                "dealstage": "presentationscheduled",
                                                "hubspot_owner_id": "910901",
                                                "pipeline": "default"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.amount",
                                    "inputs[*].properties.closedate",
                                    "inputs[*].properties.dealname",
                                    "inputs[*].properties.dealstage",
                                    "inputs[*].properties.hubspot_owner_id",
                                    "inputs[*].properties.pipeline"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_deals",
                                "url": "/crm/v3/objects/deals/batch/update",
                                "name": "Update a batch of deals",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "amount": "1500.00",
                                                "closedate": "2019-12-07T16:50:06.678Z",
                                                "dealname": "Custom data integrations",
                                                "dealstage": "presentationscheduled",
                                                "hubspot_owner_id": "910901",
                                                "pipeline": "default"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.amount",
                                    "inputs[*].properties.closedate",
                                    "inputs[*].properties.dealname",
                                    "inputs[*].properties.dealstage",
                                    "inputs[*].properties.hubspot_owner_id",
                                    "inputs[*].properties.pipeline"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "line_items",
                        "name": "CRM API : Line Items",
                        "sampleData": {
                            "properties": {
                                "createdate": "",
                                "description": "",
                                "discount": "",
                                "hs_cost_of_goods_sold": "",
                                "hs_discount_percentage": "",
                                "hs_line_item_currency_code": "",
                                "hs_position_on_quote": "",
                                "hs_product_id": "",
                                "hs_recurring_billing_period": "",
                                "hs_recurring_billing_start_date": "",
                                "hs_sku": "",
                                "name": "",
                                "price": "",
                                "quantity": "",
                                "recurringbillingfrequency": "",
                                "tax": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "create_line_item",
                                "url": "/crm/v3/objects/line_items",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "properties.hs_product_id"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_line_item",
                                "url": "/crm/v3/objects/line_items/:_lineItemId",
                                "name": "Update",
                                "method": "PATCH",
                                "requiredMappings": [
                                    "properties.hs_product_id"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_line_item",
                                "url": [
                                    "/crm/v3/objects/line_items/:_lineItemId",
                                    "/crm/v3/objects/line_items"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "properties.hs_product_id"
                                ],
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_line_item",
                                "url": "/crm/v3/objects/line_items/:_lineItemId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_line_items",
                                "url": "/crm/v3/objects/line_items/:_lineItemId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two line items",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "name": "Line Item Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique deal id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_line_items",
                                "url": "/crm/v3/objects/line_items/:_lineItemId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two line items",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "lineItemId",
                                        "name": "Line Item Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique deal id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_line_items_by_id",
                                "url": "/crm/v3/objects/line_items/batch/archive",
                                "name": "Archive a batch of line items by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_line_items",
                                "url": "/crm/v3/objects/line_items/batch/create",
                                "name": "Create a batch of line items",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "name": "1 year implementation consultation",
                                                "hs_product_id": "191902",
                                                "hs_recurring_billing_period": "24",
                                                "recurringbillingfrequency": "monthly",
                                                "quantity": "2",
                                                "price": "6000.00"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.hs_product_id",
                                    "inputs[*].properties.recurringbillingfrequency",
                                    "inputs[*].properties.quantity",
                                    "inputs[*].properties.price"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_line_items",
                                "url": "/crm/v3/objects/line_items/batch/update",
                                "name": "Update a batch of line items",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "name": "1 year implementation consultation",
                                                "hs_product_id": "191902",
                                                "hs_recurring_billing_period": "24",
                                                "recurringbillingfrequency": "monthly",
                                                "quantity": "2",
                                                "price": "6000.00"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.hs_product_id",
                                    "inputs[*].properties.recurringbillingfrequency",
                                    "inputs[*].properties.quantity",
                                    "inputs[*].properties.price"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "products",
                        "name": "CRM API : Products",
                        "sampleData": {
                            "properties": {
                                "createdate": "",
                                "description": "",
                                "discount": "",
                                "hs_cost_of_goods_sold": "",
                                "hs_discount_percentage": "",
                                "hs_folder_id": "",
                                "hs_recurring_billing_period": "",
                                "hs_recurring_billing_start_date": "",
                                "hs_sku": "",
                                "name": "",
                                "price": "",
                                "recurringbillingfrequency": "",
                                "tax": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "create_products",
                                "url": "/crm/v3/objects/products",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "properties.name"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_products",
                                "url": "/crm/v3/objects/products/:_productId",
                                "name": "Update",
                                "method": "PATCH",
                                "requiredMappings": [
                                    "properties.name"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_products",
                                "url": [
                                    "/crm/v3/objects/products/:_productId",
                                    "/crm/v3/objects/products"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "properties.name"
                                ],
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_products",
                                "url": "/crm/v3/objects/products/:_productId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_products",
                                "url": "/crm/v3/objects/products/:_productId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two products",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique product id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_products",
                                "url": "/crm/v3/objects/products/:_productId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two products",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "productId",
                                        "name": "Product Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique product id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_products_by_id",
                                "url": "/crm/v3/objects/products/batch/archive",
                                "name": "Archive a batch of products by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_products",
                                "url": "/crm/v3/objects/products/batch/create",
                                "name": "Create a batch of products",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "description": "Onboarding service for data product",
                                                "hs_cost_of_goods_sold": "600.00",
                                                "hs_recurring_billing_period": "12",
                                                "hs_sku": "191902",
                                                "name": "Implementation Service ",
                                                "price": "6000.00"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.description",
                                    "inputs[*].properties.hs_cost_of_goods_sold",
                                    "inputs[*].properties.hs_sku",
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.price"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_products",
                                "url": "/crm/v3/objects/products/batch/update",
                                "name": "Update a batch of products",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "description": "Onboarding service for data product",
                                                "hs_cost_of_goods_sold": "600.00",
                                                "hs_recurring_billing_period": "12",
                                                "hs_sku": "191902",
                                                "name": "Implementation Service ",
                                                "price": "6000.00"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.description",
                                    "inputs[*].properties.hs_cost_of_goods_sold",
                                    "inputs[*].properties.hs_sku",
                                    "inputs[*].properties.name",
                                    "inputs[*].properties.price"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_files",
                        "name": "CMS API : Files",
                        "operations": [
                            {
                                "id": "import_a_file_from_a_URL_into_the_file_manager",
                                "url": "/files/v3/files/import-from-url/async",
                                "name": "Import a file from a URL into the file manager",
                                "method": "POST",
                                "sampleData": {
                                    "access": "PUBLIC_INDEXABLE",
                                    "name": "test",
                                    "url": "https://cdnp.hubspot.net/hubfs/7066805/test.json?Expires=1625813062&Signature=ccSYqMLR1B9bQOb6K0MTwPsIMuuTfEJao0ALAFC8j~qxbbWJbjM2b5SHDzU4D57FhvNx4WO4wUTQ4mv4Z-bDlZiTtJyuKZOBD-HbEGywaqJ1EdP5luFws~dgD1cagCidDx0sk106rk0GJQ5tFnW9st52g5N7R3KEJsxsyablLgebDuwcjn7QPdXuJs5oCyOGgYprxBNp-arjhTS4WBLaenAsVvt0dhkNGRKS4r0YaLdsnAdNdgpfNi6YKPPQYjO-2oAgPnfFytkkBzvl3AlXGmu7JUUKJj2yRYb2z7KYzXz-QzEcnLNTtPpBRTMzefyDc0kJm~1CZeme2D2ZZug7fg__&Key-Pair-Id=APKAJDNICOKANPHVCSBQ",
                                    "folderPath": "/test_folder",
                                    "duplicateValidationStrategy": "NONE",
                                    "duplicateValidationScope": "ENTIRE_PORTAL",
                                    "overwrite": true
                                },
                                "requiredMappings": [
                                    "access",
                                    "url",
                                    "duplicateValidationStrategy",
                                    "duplicateValidationScope",
                                    "overwrite"
                                ]
                            },
                            {
                                "id": "create_a_folder",
                                "url": "/files/v3/folders",
                                "name": "Create folder",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "name": "test",
                                    "parentFolderId": "9632962",
                                    "parentPath": "/string"
                                },
                                "parameters": [
                                    {
                                        "id": "folderId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "update_file_properties",
                                "url": "/files/v3/files/:_fileId",
                                "name": "Update file properties",
                                "method": "PATCH",
                                "sampleData": {
                                    "name": "string",
                                    "parentFolderId": "string",
                                    "parentFolderPath": "string",
                                    "isUsableInContent": true,
                                    "access": "PUBLIC_INDEXABLE"
                                },
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fileId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_folder_properties",
                                "url": "/files/v3/folders/update/async",
                                "name": "Update folder properties",
                                "method": "POST",
                                "sampleData": {
                                    "id": "50471989159",
                                    "name": "hello",
                                    "parentFolderId": 0
                                }
                            },
                            {
                                "id": "delete_file_by_ID",
                                "url": "/files/v3/files/:_fileId",
                                "name": "Delete file by ID",
                                "method": "DELETE",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fileId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "gdrp_delete_file",
                                "url": "/files/v3/files/:_fileId/gdpr-delete",
                                "name": "GDRP delete file",
                                "method": "DELETE",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "fileId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_folder_by_path",
                                "url": "/files/v3/folders/:_folderPath",
                                "name": "Delete folder by path",
                                "method": "DELETE",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "folderPath",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_folder_by_id",
                                "url": "/files/v3/folders/:_folderId",
                                "name": "Delete folder by ID",
                                "method": "DELETE",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "folderId",
                                        "in": "path",
                                        "required": true,
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "tickets",
                        "name": "CRM API : Tickets",
                        "sampleData": {
                            "properties": {
                                "closed_date": "",
                                "created_by": "",
                                "createdate": "",
                                "hs_conversations_originating_thread_id": "",
                                "hs_custom_inbox": "",
                                "hs_external_object_ids": "",
                                "hs_file_upload": "",
                                "hs_pipeline": "",
                                "hs_pipeline_stage": "",
                                "hs_resolution": "",
                                "hs_ticket_category": "",
                                "hs_ticket_priority": "",
                                "nps_follow_up_answer": "",
                                "nps_follow_up_question_version": "",
                                "nps_score": "",
                                "source_thread_id": "",
                                "subject": "",
                                "content": "",
                                "source_type": "",
                                "source_ref": "",
                                "tags": "",
                                "hubspot_owner_id": ""
                            }
                        },
                        "operations": [
                            {
                                "id": "create_tickets",
                                "url": "/crm/v3/objects/tickets",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "properties.hs_pipeline_stage"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_tickets",
                                "url": "/crm/v3/objects/tickets/:_ticketId",
                                "name": "Update",
                                "method": "PATCH",
                                "requiredMappings": [
                                    "properties.hs_pipeline_stage"
                                ],
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_tickets",
                                "url": [
                                    "/crm/v3/objects/tickets/:_ticketId",
                                    "/crm/v3/objects/tickets"
                                ],
                                "name": "Create or Update",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "requiredMappings": [
                                    "properties.hs_pipeline_stage"
                                ],
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_tickets",
                                "url": "/crm/v3/objects/tickets/:_ticketId",
                                "name": "Archive",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "associate_two_tickets",
                                "url": "/crm/v3/objects/tickets/:_ticketId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Associate two tickets",
                                "method": "PUT",
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "name": "Ticket Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique ticket id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "remove_an_association_between_two_tickets",
                                "url": "/crm/v3/objects/tickets/:_ticketId/associations/:_toObjectType/:_toObjectId/:_associationType",
                                "name": "Remove an association between two tickets",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "ticketId",
                                        "name": "Ticket Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The Unique ticket id."
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored. eg: company, contacts, line_items, products, tickets, quotes",
                                        "required": true,
                                        "in": "path"
                                    },
                                    {
                                        "id": "toObjectId",
                                        "name": "To Object Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique Id from the object type data."
                                    },
                                    {
                                        "id": "associationType",
                                        "name": "Association Type",
                                        "description": "The relation between the company and object type eg: contact_to_company.",
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_tickets_by_id",
                                "url": "/crm/v3/objects/tickets/batch/archive",
                                "name": "Archive a batch of tickets by ID",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_tickets",
                                "url": "/crm/v3/objects/tickets/batch/create",
                                "name": "Create a batch of tickets",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "properties": {
                                                "hs_pipeline": "support_pipeline",
                                                "hs_pipeline_stage": "open",
                                                "hs_ticket_priority": "HIGH",
                                                "hubspot_owner_id": "910901",
                                                "subject": "troubleshoot report"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].properties.hs_pipeline",
                                    "inputs[*].properties.hs_pipeline_stage",
                                    "inputs[*].properties.hs_ticket_priority",
                                    "inputs[*].properties.hubspot_owner_id",
                                    "inputs[*].properties.subject"
                                ]
                            },
                            {
                                "id": "update_a_batch_of_tickets",
                                "url": "/crm/v3/objects/tickets/batch/update",
                                "name": "Update a batch of tickets",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "id": "1",
                                            "properties": {
                                                "hs_pipeline": "support_pipeline",
                                                "hs_pipeline_stage": "open",
                                                "hs_ticket_priority": "HIGH",
                                                "hubspot_owner_id": "910901",
                                                "subject": "troubleshoot report"
                                            }
                                        }
                                    ]
                                },
                                "requiredMappings": [
                                    "inputs[*].id",
                                    "inputs[*].properties.hs_pipeline",
                                    "inputs[*].properties.hs_pipeline_stage",
                                    "inputs[*].properties.hs_ticket_priority",
                                    "inputs[*].properties.hubspot_owner_id",
                                    "inputs[*].properties.subject"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "properties",
                        "name": "CRM API : Properties",
                        "operations": [
                            {
                                "id": "create_a_property",
                                "url": "/crm/v3/properties/:_objectType",
                                "name": "Create a property",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "type": "enumeration",
                                    "fieldType": "text",
                                    "groupName": "contactinformation",
                                    "description": "",
                                    "options": [
                                        {
                                            "label": "Option A",
                                            "description": "Choice number one",
                                            "value": "A",
                                            "displayOrder": 1,
                                            "hidden": false
                                        }
                                    ],
                                    "displayOrder": 2,
                                    "hasUniqueValue": false,
                                    "hidden": false
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "label",
                                    "type",
                                    "fieldType",
                                    "groupName",
                                    "options[*].label",
                                    "options[*].value",
                                    "options[*].hidden"
                                ]
                            },
                            {
                                "id": "update_a_property",
                                "url": "/crm/v3/properties/:_objectType/:_propertyName",
                                "name": "Update a property",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "type": "enumeration",
                                    "fieldType": "text",
                                    "groupName": "contactinformation",
                                    "description": "",
                                    "options": [
                                        {
                                            "label": "Option A",
                                            "description": "Choice number one",
                                            "value": "A",
                                            "displayOrder": 1,
                                            "hidden": false
                                        }
                                    ],
                                    "displayOrder": 2,
                                    "hasUniqueValue": false,
                                    "hidden": false
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "propertyName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "createor_update_a_property",
                                "url": [
                                    "/crm/v3/properties/:_objectType/:_propertyName",
                                    "/crm/v3/properties/:_objectType"
                                ],
                                "name": "Create or Update a property",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "type": "enumeration",
                                    "fieldType": "text",
                                    "groupName": "contactinformation",
                                    "description": "",
                                    "options": [
                                        {
                                            "label": "Option A",
                                            "description": "Choice number one",
                                            "value": "A",
                                            "displayOrder": 1,
                                            "hidden": false
                                        }
                                    ],
                                    "displayOrder": 2,
                                    "hasUniqueValue": false,
                                    "hidden": false
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "propertyName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "label",
                                    "type",
                                    "fieldType",
                                    "groupName",
                                    "options[*].label",
                                    "options[*].value",
                                    "options[*].hidden"
                                ]
                            },
                            {
                                "id": "delete_a_property",
                                "url": "/crm/v3/properties/:_objectType/:_propertyName",
                                "name": "Archive a property",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "propertyName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_a_property_group",
                                "url": "/crm/v3/properties/:_objectType/groups",
                                "name": "Create a property group",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "displayOrder": 2
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "groupName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "label"
                                ]
                            },
                            {
                                "id": "update_a_property_group",
                                "url": "/crm/v3/properties/:_objectType/groups/:_groupName",
                                "name": "Update a property group",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "displayOrder": 2
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "groupName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_property_group",
                                "url": [
                                    "/crm/v3/properties/:_objectType/groups/:_groupName",
                                    "/crm/v3/properties/:_objectType/groups"
                                ],
                                "name": "Create or Update a property group",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "name": "",
                                    "label": "My Contact Property",
                                    "displayOrder": 2
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "groupName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "name",
                                    "label"
                                ]
                            },
                            {
                                "id": "delete_a_property_group",
                                "url": "/crm/v3/properties/:_objectType/groups/:_groupName",
                                "name": "Archive a property group",
                                "method": "DELETE",
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "groupName",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_batch_of_properties",
                                "url": "/crm/v3/properties/:_objectType/batch/archive",
                                "name": "Archive a batch of properties",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "name": "my_custom_property"
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "inputs[*].name"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_properties",
                                "url": "/crm/v3/properties/:_objectType/batch/create",
                                "name": "Create a batch of properties",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "groupName": "contactinformation",
                                            "name": "string",
                                            "hidden": false,
                                            "displayOrder": 2,
                                            "options": [
                                                {
                                                    "label": "Option A",
                                                    "description": "Choice number one",
                                                    "value": "A",
                                                    "displayOrder": 1,
                                                    "hidden": false
                                                },
                                                {
                                                    "label": "Option B",
                                                    "description": "Choice number two",
                                                    "value": "B",
                                                    "displayOrder": 2,
                                                    "hidden": false
                                                }
                                            ],
                                            "label": "My Contact Property",
                                            "hasUniqueValue": false,
                                            "type": "enumeration",
                                            "fieldType": "select",
                                            "formField": true
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "inputs[*].groupName",
                                    "inputs[*].name",
                                    "inputs[*].type",
                                    "inputs[*].label",
                                    "inputs[*].fieldType",
                                    "inputs[*].options[*].label",
                                    "inputs[*].options[*].value",
                                    "inputs[*].options[*].hidden"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pipelines",
                        "name": "CRM API : Pipelines",
                        "operations": [
                            {
                                "id": "create_a_pipeline",
                                "url": "/crm/v3/pipelines/:_objectType",
                                "name": "Create a pipeline",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "label": "My replaced pipeline",
                                    "displayOrder": 1,
                                    "stages": [
                                        {
                                            "label": "In Progress",
                                            "displayOrder": 0,
                                            "metadata": {
                                                "probability": "",
                                                "ticketState": ""
                                            }
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "update_a_pipeline",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId",
                                "name": "Update a pipeline",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "label": "My replaced pipeline",
                                    "displayOrder": 1,
                                    "stages": [
                                        {
                                            "label": "In Progress",
                                            "displayOrder": 0,
                                            "metadata": {
                                                "probability": "",
                                                "ticketState": ""
                                            }
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_pipeline",
                                "url": [
                                    "/crm/v3/pipelines/:_objectType/:_pipelineId",
                                    "/crm/v3/pipelines/:_objectType"
                                ],
                                "name": "Create or Update a pipeline",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "label": "My replaced pipeline",
                                    "displayOrder": 1,
                                    "stages": [
                                        {
                                            "label": "In Progress",
                                            "displayOrder": 0,
                                            "metadata": {
                                                "probability": "",
                                                "ticketState": ""
                                            }
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "replace_a_pipeline",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId",
                                "name": "Replace a pipeline",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "label": "My replaced pipeline",
                                    "displayOrder": 1,
                                    "stages": [
                                        {
                                            "label": "In Progress",
                                            "displayOrder": 0,
                                            "metadata": {
                                                "probability": "",
                                                "ticketState": ""
                                            }
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder",
                                    "stages[*].label",
                                    "stages[*].displayOrder"
                                ]
                            },
                            {
                                "id": "delete_a_pipeline",
                                "url": "/crm/v3/pipelines/:_objectType/:_pipelineId",
                                "name": "Archive a pipeline",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_a_pipeline_stage",
                                "url": "/crm/v3/pipelines/:_objectType/stages",
                                "name": "Create a pipeline stage",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "label": "In Progress",
                                    "displayOrder": 0,
                                    "metadata": {
                                        "probability": "",
                                        "ticketState": ""
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique pipeline id."
                                    },
                                    {
                                        "id": "stageId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder"
                                ]
                            },
                            {
                                "id": "update_a_pipeline_stage",
                                "url": "/crm/v3/pipelines/:_objectType/stages/:_stageId",
                                "name": "Update a pipeline stage",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "label": "In Progress",
                                    "displayOrder": 0,
                                    "metadata": {
                                        "probability": "",
                                        "ticketState": ""
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique pipeline id."
                                    },
                                    {
                                        "id": "stageId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "replace_a_pipeline_stage",
                                "url": "/crm/v3/pipelines/:_objectType/stages/:_stageId",
                                "name": "Replace a pipeline stage",
                                "method": "PUT",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "label": "In Progress",
                                    "displayOrder": 0,
                                    "metadata": {
                                        "probability": "",
                                        "ticketState": ""
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique pipeline id."
                                    },
                                    {
                                        "id": "stageId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder"
                                ]
                            },
                            {
                                "id": "create_or_update_a_pipeline_stage",
                                "url": [
                                    "/crm/v3/pipelines/:_objectType/stages/:_stageId",
                                    "/crm/v3/pipelines/:_objectType/stages"
                                ],
                                "name": "Create or Update a pipeline stage",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "label": "In Progress",
                                    "displayOrder": 0,
                                    "metadata": {
                                        "probability": "",
                                        "ticketState": ""
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique pipeline id."
                                    },
                                    {
                                        "id": "stageId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ],
                                "requiredMappings": [
                                    "label",
                                    "displayOrder"
                                ]
                            },
                            {
                                "id": "delete_a_pipeline_stage",
                                "url": "/crm/v3/pipelines/:_objectType/stages/:_stageId",
                                "name": "Archive a pipeline stage",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "pipelineId",
                                        "name": "Pipeline Id",
                                        "required": true,
                                        "in": "path",
                                        "description": "The unique pipeline id."
                                    },
                                    {
                                        "id": "stageId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blog_tags",
                        "name": "CMS API : Blog Tags",
                        "sampleData": {
                            "id": "123456",
                            "name": "test2",
                            "deletedAt": "2021-06-01T13:44:31.749Z",
                            "createdAt": "2021-06-01T13:44:31.749Z",
                            "updatedAt": "2021-06-01T13:44:31.749Z"
                        },
                        "operations": [
                            {
                                "id": "create_a_new_blog_tag",
                                "url": "/cms/v3/blogs/tags",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "name"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_blog_tag",
                                "name": "Update a Blog Tag",
                                "url": "/cms/v3/blogs/tags/:_objectId",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "name"
                                ],
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path",
                                        "description": "The unique ID of the Blog Tag."
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_blog_tag",
                                "name": "Create or Update",
                                "url": [
                                    "/cms/v3/blogs/tags/:_objectId",
                                    "/cms/v3/blogs/tags"
                                ],
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "name"
                                ]
                            },
                            {
                                "id": "delete_a_blog_tag",
                                "url": "/cms/v3/blogs/tags/:_objectId",
                                "name": "Delete a Blog Tag",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "blog_authors",
                        "name": "CMS API : Blog Authors",
                        "sampleData": {
                            "id": "123456",
                            "email": "string@gmail.com",
                            "bio": "string",
                            "website": "string",
                            "twitter": "string",
                            "facebook": "string",
                            "linkedin": "string",
                            "avatar": "string",
                            "displayName": "tarunjds",
                            "fullName": "tarunjds",
                            "deletedAt": "2021-06-01T13:51:30.681Z",
                            "createdAt": "2021-06-01T13:51:30.681Z",
                            "updatedAt": "2021-06-01T13:51:30.681Z"
                        },
                        "operations": [
                            {
                                "id": "create_a_new_blog_author",
                                "url": "/cms/v3/blogs/authors",
                                "name": "Create",
                                "method": "POST",
                                "requiredMappings": [
                                    "fullName"
                                ],
                                "supportIgnoreExisting": true,
                                "parameters": [
                                    {
                                        "id": "id",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_blog_author",
                                "name": "Update",
                                "url": "/cms/v3/blogs/authors/:_objectId",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "requiredMappings": [
                                    "fullName"
                                ],
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "isIdentifier": true,
                                        "in": "path",
                                        "description": "The unique ID of the Blog Author."
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_blog_author",
                                "name": "Create or Update",
                                "url": [
                                    "/cms/v3/blogs/authors/:_objectId",
                                    "/cms/v3/blogs/authors"
                                ],
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "isIdentifier": true,
                                        "required": true,
                                        "in": "path"
                                    }
                                ],
                                "requiredMappings": [
                                    "fullName"
                                ]
                            },
                            {
                                "id": "delete_a_blog_author",
                                "url": "/cms/v3/blogs/authors/:_objectId",
                                "name": "Delete a Blog Author",
                                "method": "DELETE",
                                "askForHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "cms_url_redirects",
                        "name": "CMS API : URL redirects",
                        "operations": [
                            {
                                "id": "create_a_redirect",
                                "url": "/crm/v3/url-redirects/",
                                "name": "Create a Redirect",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "routePrefix": "string",
                                    "destination": "string",
                                    "redirectStyle": 0,
                                    "precedence": 0,
                                    "isOnlyAfterNotFound": true,
                                    "isMatchFullUrl": true,
                                    "isMatchQueryString": true,
                                    "isPattern": true,
                                    "isTrailingSlashOptional": true,
                                    "isProtocolAgnostic": true
                                },
                                "parameters": [
                                    {
                                        "id": "id",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "routePrefix",
                                    "destination",
                                    "redirectStyle"
                                ]
                            },
                            {
                                "id": "update_a_redirect",
                                "url": "/cms/v3/url-redirects/:_urlRedirectId",
                                "name": "Update a Redirect",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "id": 0,
                                    "portalId": 0,
                                    "created": 0,
                                    "updated": 0,
                                    "createdById": 0,
                                    "updatedById": 0,
                                    "routePrefix": "string",
                                    "destination": "string",
                                    "redirectStyle": 0,
                                    "contentGroupId": 0,
                                    "isOnlyAfterNotFound": true,
                                    "isRegex": true,
                                    "isMatchFullUrl": true,
                                    "isMatchQueryString": true,
                                    "isPattern": true,
                                    "isTrailingSlashOptional": true,
                                    "isProtocolAgnostic": true,
                                    "name": "string",
                                    "precedence": 0,
                                    "deletedAt": 0,
                                    "note": "string",
                                    "label": "string",
                                    "internallyCreated": true,
                                    "cosObjectType": "CONTENT",
                                    "cdnPurgeEmbargoTime": 0
                                },
                                "parameters": [
                                    {
                                        "id": "urlRedirectId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_redirect",
                                "url": [
                                    "/cms/v3/url-redirects/:_urlRedirectId",
                                    "/crm/v3/url-redirects/"
                                ],
                                "name": "Create or Update a redirect",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "id": 0,
                                    "portalId": 0,
                                    "created": 0,
                                    "updated": 0,
                                    "createdById": 0,
                                    "updatedById": 0,
                                    "routePrefix": "string",
                                    "destination": "string",
                                    "redirectStyle": 0,
                                    "contentGroupId": 0,
                                    "isOnlyAfterNotFound": true,
                                    "isRegex": true,
                                    "isMatchFullUrl": true,
                                    "isMatchQueryString": true,
                                    "isPattern": true,
                                    "isTrailingSlashOptional": true,
                                    "isProtocolAgnostic": true,
                                    "name": "string",
                                    "precedence": 0,
                                    "deletedAt": 0,
                                    "note": "string",
                                    "label": "string",
                                    "internallyCreated": true,
                                    "cosObjectType": "CONTENT",
                                    "cdnPurgeEmbargoTime": 0
                                },
                                "parameters": [
                                    {
                                        "id": "urlRedirectId",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "delete_a_redirect",
                                "url": "/cms/v3/url-redirects/:_urlRedirectId",
                                "name": "Delete a Redirect",
                                "method": "DELETE",
                                "askHowToGetIdentifier": true,
                                "parameters": [
                                    {
                                        "id": "urlRedirectId",
                                        "in": "path",
                                        "isIdentifier": true,
                                        "required": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "crm_custom_objects",
                        "name": "CRM API : Custom Objects",
                        "operations": [
                            {
                                "id": "create_a_custom_objects",
                                "url": "/crm/v3/objects/:_objectType",
                                "name": "Create a Custom Objects",
                                "method": "POST",
                                "supportIgnoreExisting": true,
                                "sampleData": {
                                    "properties": {
                                        "property_number": "17",
                                        "property_dropdown": "choice_b",
                                        "property_radio": "option_1",
                                        "property_string": "value",
                                        "property_multiple_checkboxes": "chocolate;strawberry",
                                        "property_checkbox": "false",
                                        "property_date": "1572480000000"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "isIdentifier": true,
                                        "in": "path",
                                        "required": true
                                    }
                                ]
                            },
                            {
                                "id": "update_a_custom_objects",
                                "url": "/crm/v3/objects/:_objectType/:_objectId",
                                "name": "Update a Custom Objects",
                                "method": "PATCH",
                                "supportIgnoreMissing": true,
                                "sampleData": {
                                    "properties": {
                                        "property_number": "17",
                                        "property_dropdown": "choice_b",
                                        "property_radio": "option_1",
                                        "property_string": "value",
                                        "property_multiple_checkboxes": "chocolate;strawberry",
                                        "property_checkbox": "false",
                                        "property_date": "1572480000000"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "create_or_update_a_custom_object",
                                "url": [
                                    "/crm/v3/objects/:_objectType/:_objectId",
                                    "/crm/v3/objects/:_objectType"
                                ],
                                "name": "Create or Update a Custom Object",
                                "method": [
                                    "PATCH",
                                    "POST"
                                ],
                                "sampleData": {
                                    "properties": {
                                        "property_number": "17",
                                        "property_dropdown": "choice_b",
                                        "property_radio": "option_1",
                                        "property_string": "value",
                                        "property_multiple_checkboxes": "chocolate;strawberry",
                                        "property_checkbox": "false",
                                        "property_date": "1572480000000"
                                    }
                                },
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            },
                            {
                                "id": "archive_a_custom_object",
                                "url": "/crm/v3/objects/:_objectType/:_objectId",
                                "name": "Archive a custom object",
                                "method": "DELETE",
                                "supportIgnoreMissing": true,
                                "parameters": [
                                    {
                                        "id": "objectType",
                                        "name": "objectType",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "objectId",
                                        "required": true,
                                        "in": "path",
                                        "isIdentifier": true
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "id": "associations",
                        "name": "CRM API : Associations",
                        "operations": [
                            {
                                "id": "archive_a_batch_of_associations",
                                "url": "/crm/v3/associations/:_fromObjectType/:_toObjectType/batch/archive",
                                "name": "Archive a batch of associations",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "from": {
                                                "id": "53628"
                                            },
                                            "to": {
                                                "id": "12726"
                                            },
                                            "type": "contact_to_company"
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "fromObjectType",
                                        "name": "From Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "inputs[*].from.id",
                                    "inputs[*].to.id",
                                    "inputs[*].type"
                                ]
                            },
                            {
                                "id": "create_a_batch_of_associations",
                                "url": "/crm/v3/associations/:_fromObjectType/:_toObjectType/batch/create",
                                "name": "Create a batch of associations",
                                "method": "POST",
                                "sampleData": {
                                    "inputs": [
                                        {
                                            "from": {
                                                "id": "53628"
                                            },
                                            "to": {
                                                "id": "12726"
                                            },
                                            "type": "contact_to_company"
                                        }
                                    ]
                                },
                                "parameters": [
                                    {
                                        "id": "fromObjectType",
                                        "name": "From Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    },
                                    {
                                        "id": "toObjectType",
                                        "name": "To Object Type",
                                        "description": "The supported property object types are company, contacts, line_items, products, quotes, tickets and deals.",
                                        "in": "path",
                                        "required": true
                                    }
                                ],
                                "requiredMappings": [
                                    "inputs[*].from.id",
                                    "inputs[*].to.id",
                                    "inputs[*].type"
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    }
}